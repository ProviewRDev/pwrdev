#####################################################################################

<class> BaseActuatorAGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseActuatorA
 Uppräkningstyp för layout av objektsbild BaseActuatorA.

 <attr> TwoSwitches
  Ställdon med gränslägen öppen och stängd.
 </attr>
 <attr> SwitchOpen
  Ställdon med gränsläge öppen.
 </attr>
 <attr> SwitchClosed
  Ställdon med gränsläge stängd.   
 </attr>
 <attr> NoSwitches
  Ställdon utan positionssensor och utan gränslägen öppen och stängd.
 </attr>
 <attr> PositionTwoSwitches
  Ställdon med positionssensor och gränslägen öppen och stängd.   
 </attr>
 <attr> PositionSwitchOpen
  Ställdon med positionssensor och gränsläge öppen men inte stängd.
 </attr>
 <attr> PositionSwitchClosed
  Ställdon med positionssensor och gränsläge stängd men inte öppen.   
 </attr>
 <attr> PositionNoSwitches
  Ställdon med positionssensor och inga gränslägen öppen eller stängd.   
 </attr>
 
</class>

#####################################################################################

<class> BaseMValveGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseMValve
 Uppräkningstyp för layout av objektsbild BaseMValve.

 <attr> TwoSwitches
  Ventil med gränslägen öppen och stängd.
 </attr>
 <attr> SwitchOpen
  Ventil med gränsläge öppen.
 </attr>
 <attr> SwitchClosed
  Ventil med gränsläge stängd.   
 </attr>
 <attr> NoSwitches
  Ventil utan gränslägen öppen och stängd.   
 </attr>
 
</class>

#####################################################################################

<class> BaseManValveGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseManValve
 Uppräkningstyp för layout av objektsbild BaseManValve.

 <attr> TwoSwitches
  Handventil med gränslägen öppen och stängd.
 </attr>
 <attr> SwitchOpen
  Handventil med gränsläge öppen.
 </attr>
 <attr> SwitchClosed
  Handventil med gränsläge stängd.   
 </attr>
 <attr> NoSwitches
  Handventil utan gränslägen öppen och stängd.   
 </attr>
 
</class>

#####################################################################################

<class> BaseContactorGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseContactor
 Uppräkningstyp för layout av objektsbild BaseContactor.

 <attr> OrderFeedback
  Kontaktor med orderutgång och driftsvar (feedback).
 </attr>
 <attr> OrderNoFeedback
  Kontaktor med orderutgång och inget driftsvar.   
 </attr>
 <attr> FeedbackNoOrder
  Kontaktor med driftsvar och ingen orderutgång.   
 </attr>
 <attr> NoOrderNoFeedback
  Kontaktor utan orderutgång och inget driftsvar.
 </attr>
 
</class>

#####################################################################################

<class> BaseMotorGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseMotor
 Uppräkningstyp för layout av objektsbild BaseMotor.

 <attr> TempSwitch
  Motor med digital temperaturövervakning, dvs termostatkontakt.
 </attr>
 <attr> TempSensor
  Motor med analog temperaturövervakning, dvs temperatursensor typ Pt100 eller liknande.
 </attr>
 <attr> NoTempSwitchOrSensor
  Motor utan digital  eller analog temperaturövervakning.
 </attr>
 
</class>

#####################################################################################

<class> CompModeAGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild CompModeA
 Uppräkningstyp för layout av objektsbild CompModeA.

 <attr> StartStop
  Objektsbild med knappar Start/Stop.   
 </attr>
 <attr> OnOff
  Objektsbild med knappar Till/från, On/Off.   
 </attr>
 
</class>

#####################################################################################

<class> CompModeDGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild CompModeD
 Uppräkningstyp för layout av objektsbild CompModeD.

 <attr> StartStop
  Objektsbild med knappar Start/Stop.   
 </attr>
 <attr> OnOff
  Objektsbild med knappar Till/från, On/Off.   
 </attr>
 
</class>

#####################################################################################

<class> CompModeD2GCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild CompModeD2
 Uppräkningstyp för layout av objektsbild CompModeD2.

 <attr> IncrDecr
  Objektsbild med knappar Öka/Minska, incr/decr.   
 </attr>
 <attr> ForwBack
  Objektsbild med knappar Fram/Back, Forw/back.   
 </attr>
 <attr> UpDown
  Objektsbild med knappar Upp/Ner, Up/Down.   
 </attr>
 <attr> OpenClose
  Objektsbild med knappar Öppna/Stäng, Open/close.   
 </attr>
 
</class>

#####################################################################################

<class> ModeEnum
 @Version
 @Author je
 @summary Mod status för CompMode objekt
 ModeEnum hanterar mod status för ????? objekt, dvs vilket mod som är den rådande.
 
 Olika moder som hanteras:
 
  -Manual       När man manövrerar drift manuellt från terminaler/bilder företrädesvis från
                kontrollrum (fjärrifrån).

  -Auto         När manövrering av drift sker automatiskt (fjärrifrån).
 
  -ManualLocal  När manövrering av drift sker manuellt via lokal manöverplats (låda).
  
  -AutoLocal    När manövrering av drift sker automatiskt via lokal styrfunktion.
 
 <attr> Manual
  Manuell mod (fjärrstyrning av drift manuellt). 
 </attr>
 <attr> Auto
  Auto mod (fjärrstyrning av drift i automatik).   
 </attr>
 <attr> ManualLocal
  Manuell mod lokalt(lokalstyrning av drift manuellt).   
 </attr>
 <attr> AutoLocal
  Auto mod lokalt (lokalstyrning av drift i automatik).   
 </attr>

</class>

#####################################################################################

<class> ValvePosEnum
 @Version
 @Author je
 @summary Positionsstatus för ventil och spjäll objekt
 ValvePosEnum hanterar positionsstatus för ventiler och spjäll objekt.

 ValvePosEnum styr/ändrar bl.a objektsymbolen i objektsbilden för BaseC3WayValve.
 
 <attr> Between
  Läge varken stängt eller öppet, dvs mellanläge.
 </attr>
 <attr> Closed
  Läge stängt.
 </attr>
 <attr> Open
  Läge öppet.
 </attr>

</class>

#####################################################################################

<class> DirValvePosEnum
 @Version
 @Author je
 @summary Positionsstatus för BaseDirValve objekt
 DirValvePosEnum hanterar status för BaseDirValve objekt, dvs tvålägesstyrd ventil
 med mittenläge.
 
 DirValvePosEnum styr/ändrar bl.a objektsymbolen i objektsbilden för BaseDirValve.
 
 <attr> Closed
  Läge där ingen styrning sker, dvs ventilen intar sitt mittenläge.
 </attr>
 <attr> Forward
  Ventilorder öka/increment.
 </attr>
 <attr> Reverse
  Ventilorder minska/decrement.
 </attr>

</class>

#####################################################################################

<class> BaseDirValveGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseDirValve
 Uppräkningstyp för layout av objektsbild BaseDirValve.

 <attr> IncrDecr
  Objektsbild med knappar Öka/Minska, incr/decr.   
 </attr>
 <attr> ForwBack
  Objektsbild med knappar Fram/Back, Forw/back.   
 </attr>
 <attr> UpDown
  Objektsbild med knappar Upp/Ner, Up/Down.   
 </attr>
 <attr> OpenClose
  Objektsbild med knappar Öppna/Stäng, Open/close.   
 </attr>
 
</class>


#####################################################################################

<class>  BaseMotorAggrGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseMotorAggr
 Uppräkningstyp för layout av objektsbild BaseMotorAggr.
 
 Möjliga komponenter:

  -Circuitbreaker       Effektbrytare (MCCB)
  -Contactor            Kontaktor
  -OverloadRelay        Överströmsskydd (motorskydd)
  -Safetyswitch         Säkerhetsbrytare  
  -Fuse                 Säkring  
 
 <attr> CbCoOrSs
  Components: Curcuitbreaker, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CbCoSs
  Components: Circuitbreaker, Contactor, Safetyswitch.   
 </attr>
 <attr> CbCoOr
  Components: Circuitbreaker, Contactor, Overloadrelay.   
 </attr>
 <attr> CbCo
  Components: Circuitbreaker, Contactor.   
 </attr>
 <attr> CoOrSs
  Components: Circuitbreaker, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CoOr
  Components: Contactor, Overloadrelay.   
 </attr>
 <attr> CoSs
  Components: Contactor, Safetyswitch.   
 </attr>
 <attr> Co
  Components: Contactor.   
 </attr>
 <attr> FuCoOrSs
  Components: Fuse, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> FuCoOr
  Components: Fuse, Contactor, Overloadrelay.   
 </attr>
 <attr> FuCoSs
  Components: Fuse, Contactor, Safetyswitch.   
 </attr>
 <attr> FuCo
  Components: Fuse, Contactor.   
 </attr>

</class>

#####################################################################################

<class>  BaseMotorIncrDecrAggrGCEnum
 @Version
 @Author je
 @Summary Uppräkningstyp för layout av objektsbild BaseMotorIncrDecrAggr
 Uppräkningstyp för layout av objektsbild BaseMotorIncrDecrAggr.

 Möjliga komponenter:
  
  -Circuitbreaker       Effektbrytare (MCCB)
  -Contactor            Kontaktor
  -OverloadRelay        Överströmsskydd (motorskydd)
  -Safetyswitch         Säkerhetsbrytare  
  -Fuse                 Säkring 
 
 <attr> CbCoOrSs
  Components with button incr/decr: Circuitbreaker, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CbCoSs
  Components with button incr/decr: Circuitbreaker, Contactor, Safetyswitch.   
 </attr>
 <attr> CbCoOr
  Components with button incr/decr: Circuitbreaker, Contactor, Overloadrelay.   
 </attr>
 <attr> CbCo
  Components with button incr/decr: Circuitbreaker, Contactor.   
 </attr>
 <attr> CoOrSs
  Components with button incr/decr: Circuitbreaker, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CoOr
  Components with button incr/decr: Contactor, Overloadrelay.   
 </attr>
 <attr> CoSs
  Components with button incr/decr: Contactor, Safetyswitch.   
 </attr>
 <attr> Co
  Components with button incr/decr: Contactor.   
 </attr>
 <attr> FuCoOrSs
  Components with button incr/decr: Fuse, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> FuCoOr
  Components with button incr/decr: Fuse, Contactor, Overloadrelay.   
 </attr>
 <attr> FuCoSs
  Components with button incr/decr: Fuse, Contactor, Safetyswitch.   
 </attr>
 <attr> FuCo
  Components with button incr/decr: Fuse, Contactor.   
 </attr>

 <attr> CbCoOrSs_ForwBack
  Components with button forw/back: Circuitbreaker, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CbCoSs_ForwBack
  Components with button forw/back: Circuitbreaker, Contactor, Safetyswitch.   
 </attr>
 <attr> CbCoOr_ForwBack
  Components with button forw/back: Circuitbreaker, Contactor, Overloadrelay.   
 </attr>
 <attr> CbCo_ForwBack
  Components with button forw/back: Circuitbreaker, Contactor.   
 </attr>
 <attr> CoOrSs_ForwBack
  Components with button forw/back: Circuitbreaker, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CoOr_ForwBack
  Components with button forw/back: Contactor, Overloadrelay.   
 </attr>
 <attr> CoSs_ForwBack
  Components with button forw/back: Contactor, Safetyswitch.   
 </attr>
 <attr> Co_ForwBack
  Components with button forw/back: Contactor.   
 </attr>
 <attr> FuCoOrSs_ForwBack
  Components with button forw/back: Fuse, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> FuCoOr_ForwBack
  Components with button forw/back: Fuse, Contactor, Overloadrelay.   
 </attr>
 <attr> FuCoSs_ForwBack
  Components with button forw/back: Fuse, Contactor, Safetyswitch.   
 </attr>
 <attr> FuCo_ForwBack
  Components with button forw/back: Fuse, Contactor.   
 </attr

 <attr> CbCoOrSs_UpDown
  Components with button up/down: Circuitbreaker, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CbCoSs_UpDown
  Components with button up/down: Circuitbreaker, Contactor, Safetyswitch.   
 </attr>
 <attr> CbCoOr_UpDown
  Components with button up/down: Circuitbreaker, Contactor, Overloadrelay.   
 </attr>
 <attr> CbCo_UpDown
  Components with button up/down: Circuitbreaker, Contactor.   
 </attr>
 <attr> CoOrSs_UpDown
  Components with button up/down: Circuitbreaker, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CoOr_UpDown
  Components with button up/down: Contactor, Overloadrelay.   
 </attr>
 <attr> CoSs_UpDown
  Components with button up/down: Contactor, Safetyswitch.   
 </attr>
 <attr> Co_UpDown
  Components with button up/down: Contactor.   
 </attr>
 <attr> FuCoOrSs_UpDown
  Components with button up/down: Fuse, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> FuCoOr_UpDown
  Components with button up/down: Fuse, Contactor, Overloadrelay.   
 </attr>
 <attr> FuCoSs_UpDown
  Components with button up/down: Fuse, Contactor, Safetyswitch.   
 </attr>
 <attr> FuCo_UpDown
  Components with button up/down: Fuse, Contactor.   
 </attr

 <attr> CbCoOrSs_OpenClose
  Components with button open/close: Circuitbreaker, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CbCoSs_OpenClose
  Components with button open/close: Circuitbreaker, Contactor, Safetyswitch.   
 </attr>
 <attr> CbCoOr_OpenClose
  Components with button open/close: Circuitbreaker, Contactor, Overloadrelay.   
 </attr>
 <attr> CbCo_OpenClose
  Components with button open/close: Circuitbreaker, Contactor.   
 </attr>
 <attr> CoOrSs_OpenClose
  Components with button open/close: Circuitbreaker, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> CoOr_OpenClose
  Components with button open/close: Contactor, Overloadrelay.   
 </attr>
 <attr> CoSs_OpenClose
  Components with button open/close: Contactor, Safetyswitch.   
 </attr>
 <attr> Co_OpenClose
  Components with button open/close: Contactor.   
 </attr>
 <attr> FuCoOrSs_OpenClose
  Components with button open/close: Fuse, Contactor, Overloadrelay, Safetyswitch.   
 </attr>
 <attr> FuCoOr_OpenClose
  Components with button open/close: Fuse, Contactor, Overloadrelay.   
 </attr>
 <attr> FuCoSs_OpenClose
  Components with button open/close: Fuse, Contactor, Safetyswitch.   
 </attr>
 <attr> FuCo_OpenClose
  Components with button open/close: Fuse, Contactor.   
 </attr

</class>

#####################################################################################

<class>  BaseFcPPOMotorAggrEnum
 @Version
 @Author je
 @summary Konfigurationsval för BaseFcPPOMotorAggr
 BaseFcPPOMotorAggrEnum hanterar konfigurationsvalet för komponenter där en frekvensomriktare
 som kommunicerar (PPO protokollet) via Profibus/dp ingår, dvs valet styr vilka komponenter som
 ska ingå i aggregatet.
 
 Möjliga komponenter:
  
  -Circuitbreaker       Effektbrytare (MCCB)
  -Contactor            Kontaktor
  -Frequencyconverter   Frekvensomriktare
  -Safetyswitch         Säkerhetsbrytare i huvudkretsen  
  -Safetylock           Startspärr (ej i huvudkretsen)  
  -Fuse                 Säkring (supersnabba för frekvensomriktare) 
 
 <attr> CbCoFcSs
  Components: Circuitbreaker, Contactor, Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> CbCoFcSl
  Components: Circuitbreaker, Contactor, Frequencyconverter, Safetylock.   
 </attr>
 <attr> CbCoFC
  Components: Circuitbreaker, Contactor, Frequencyconverter.   
 </attr>
 <attr> CbFcSs
  Components: Circuitbreaker, Frequencyconverter, Contactor.   
 </attr>
 <attr> CbFcSl
  Components: Circuitbreaker, Frequencyconverter, Safetylock.   
 </attr>
 <attr> CbFc
  Components: Circuitbreaker, Frequencyconverter.   
 </attr>
 <attr> CoFcSs
  Components: Contactor, Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> CoFcSl
  Components: Contactor, Frequencyconverter, Safetylock.   
 </attr>
 <attr> CoFc
  Components: Contactor, Frequencyconverter.   
 </attr>
 <attr> FcSs
  Components: Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> FcSl
  Components: Frequencyconverter, Safetylock.   
 </attr>
 <attr> Fc
  Components: Frequencyconverter.   
 </attr>
 <attr> FuCbCoFcSs
  Components: Fuse, Circuitbreaker, Contactor, Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> FuCbCoFcSl
  Components: Fuse, Circuitbreaker, Contactor, Frequencyconverter, Safetylock.   
 </attr>
 <attr> FuCbCoFC
  Components: Fuse, Circuitbreaker, Contactor, Frequencyconverter.   
 </attr>
 <attr> FuCbFcSs
  Components: Fuse, Circuitbreaker, Frequencyconverter, Contactor.   
 </attr>
 <attr> FuCbFcSl
  Components: Fuse, Circuitbreaker, Frequencyconverter, Safetylock.   
 </attr>
 <attr> FuCbFc
  Components: Fuse, Circuitbreaker, Frequencyconverter.   
 </attr>
 <attr> FuCoFcSs
  Components: Fuse, Contactor, Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> FuCoFcSl
  Components: Fuse, Contactor, Frequencyconverter, Safetylock.   
 </attr>
 <attr> FuCoFc
  Components: Fuse, Contactor, Frequencyconverter.   
 </attr>
 <attr> FuFcSs
  Components: Fuse, Frequencyconverter, Safetyswitch.   
 </attr>
 <attr> FuFcSl
  Components: Fuse, Frequencyconverter, Safetylock.   
 </attr>
 <attr> FuFc
  Components: Fuse, Frequencyconverter.   
 </attr>

</class>

#####################################################################################

<class> Component
 @Version
 @Author cs
 @summary Basklass för en komponent
 Component objektet innehåller attribut för de vanligaste metoderna som man bör dokumentera
 sitt objekt med.
 
 OBS! Att alla attribut förutom Description och Specification är gömda i runtime (flagga RtHide).

<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Basklass för komponenter
</attr>
<attr> Specification
  Specifikation för en komponent
</attr>
<attr> HelpTopic
  Ämnesreferens till hjälpen för en komponent  
</attr>
<attr> DataSheet
  URL till datablad för en komponent  
</attr>
<attr> CircuitDiagram
  URL till elschema för en komponent  
</attr>
<attr> Note
  Notering (synlig i objektsbild) för en komponent  
</attr>
<attr> Photo
  URL till ett fotografi för en komponent  
</attr>

</class>

#####################################################################################

<class> Aggregate
 @Version
 @Author cs
 @summary Basklass för ett aggregat
 Aggregate objektet innehåller attribut för de vanligaste metoderna som man bör dokumentera
 sitt objekt med.
 
 OBS! Att alla attribut förutom Description och Specification är gömda i runtime (flagga RtHide).

<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Basklassobjekt för aggregat
</attr>
<attr> Specification
  Specifikation för ett aggregat
</attr>
<attr> HelpTopic
  Ämnesreferens till hjälpen för ett aggregat
</attr>
<attr> DataSheet
  URL till datablad för ett aggregat
</attr>
<attr> CircuitDiagram
  URL till elschema för ett aggregat 
</attr>
<attr> Note
  Notering (synlig i objektsbild) för ett aggregatet  
</attr>
<attr> Photo
  URL till ett fotografi för ett aggregat
</attr>

</class>

#####################################################################################

<class> CompLimit
 @Version
 @Author cs
 @summary Övervakningsattribut för komponenter med gränser
 Objektet innehåller attribut för inställningar som behövs för att övervaka komponenter
 med larmgränser men ingen kod.
 
<attr> AlarmText
  Alarmtext när gräns är passerad
</attr>
<attr> Limit
  Larmgräns
</attr>
<attr> Hysteres
  Hysteres
</attr>
<attr> TimeDelay
  Tidsfördröjning i sekunder innan larm aktiveras när larmgräns passeras 
</attr>
<attr> Used
  Inställning om larmgräns används eller inte.  
</attr>
<attr> Status
  Status om larm är aktiverat (1:a) eller inte (0:a).  
</attr>
<attr> DisableAlarm
  Hindrar larm attt aktiveras (styrs via ingång på funktionsobjekt)   
</attr>

</class>

####################################################################################

 <class> BaseFan
 @Version
 @Author cs/je
 @summary Basklass för en fläkt
 @b Fläkt
 BaseFan objektet innehåller en objektsbild och attribut för de vanligaste metoderna
 som man bör dokumentera sin fläkt med. Objektet innehåller inga signaler.
 
 @b Objektbild
 @image orm_basefan_og.png

 <attr>Super 
  Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>

 </class>

####################################################################################

 <class> BasePump
 @Version
 @Author cs/je
 @summary Basklass för en pump
 @b Pump
 BasePump objektet innehåller en objektsbild och attribut för de vanligaste metoderna
 som man bör dokumentera sin pump med. Objektet innehåller inga signaler.
 
 @b Objektbild
 @image orm_basepump_og.png

 <attr>Super 
  Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>

 </class>

####################################################################################
 <class> BaseMotor
 @Version
 @Author cs/je
 @summary Basklass för en motor med en analog eller digital tempsensor
 @b Motor
 BaseMotor objektet innehåller temperaturövervakning med en larmutgång, en objektsbild och
 attribut för de vanligaste metoderna som man bör dokumentera sin motor med.
 
 Objektet innehåller IO signaler för temperaturövervakning. Man kan välja på en digital
 temp.vakt eller en analog temp.sensor men ej båda samtidigt. IO signalerna går att konfigurera
 (välja bort).
 
 @b Objektbild
 @image orm_basemotor_og.png

 @b Motor med analog temperaturövervakning
 @image orm_basemotor_example1_og.gif
 
 Bilden ovan visar en konfiguration där motorn har en temperatursensor som larmar för HH (hög hög)
 temp, indikatorn blir gul vid larmgräns H (hög).
 
 @b Övervakning
 BaseMotor har många inställningar som kan ändras beroende på konfigurationsvalet temp.sensor/vakt:
 
  - Se BaseTempSwitch vid digital temp.vakt.
  - Se BaseTempSensor vid analog temp.sensor. (Inställningar: HH och H temp.gränser)
 
 @h1 Konfigurering
 @b Component Configuration

  - TempSwitch               Väljer digital temp.vakt
  - TempSensor               Väljer analog temp.sensor
  - NoTempSwitchOrSensor     Väljer ingen temp.övervakning (inget IO)
 
   Väljer man TempSensor bör man titta över attribut inställningarna LimitHH och LimitH i
   BaseTempSensor objektet TempSensor.
  
 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler (en eller ingen!).

  - TempSensor.Value     Ai (valbart)
  - TempSwitch.Switch    Di (valbart)
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMotorFo.
 @image orm_basemotorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseMotorSim.

 @b Se även

 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>TempSwitch
  Digitalingång temperaturvakt i motorn.
 </attr>
 <attr>TempSensor
  Analogingång temperatursensor i motorn.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt, objektsymbol börjar blinka rött. (Larmgräns HH tempsensor)
 </attr>
 <attr>IndWarning 
  Går hög om B-larm är aktivt, objektsymbol blir gul (fast). Används när man har
  konfigurerat analoga temp.sensorn (Larmgräns H ).
 </attr>
 <attr>DisplayInd 
  Inställning om temp.indikatorer ska visas (1:a) i objektsbilden eller inte (0:a).
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
 IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

 </class>
 
 ######################################################################################## 

<class>BaseMotorFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseMotor
 Funktionsobjekt för BaseMotor
 @image orm_basemotorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseMotor
 i planthierarkin.
 
 @b Se även
 <attr>DisableSup 
  Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att både larm
  och larmutgångar kopplas bort vid valet TempSensor. Vid valet tempSwitch kopplas bara larmet bort!
 </attr>
 <attr> OverTemp
   Utgången går hög när A-larm råder (HH temp temp.sensor eller temp.vakt larmar)
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

 <class> BaseElHeater
 @Version
 @Author cs/je
 @summary Basklass för ett värmeelement med en analog eller digital temp.sensor
 @b Värmeelement
 BaseElHeater objektet innehåller temperaturövervakning med en larmutgång, en objektsbild och
 attribut för de vanligaste metoderna som man bör dokumentera sina värmeelement med.
 
 Objektet innehåller IO signaler för temperaturövervakning. Man kan välja på en digital
 temp.vakt eller en analog temp.sensor men ej båda samtidigt. IO signalerna går att konfigurera
 (välja bort).
 
 @b Objektbild
 @image orm_baseelheater_og.png

 Bilden ovan visar en konfiguration där elementet har en temperatursensor som larmar för HH (hög hög)
 temp, indikatorn blir gul vid larmgräns H (hög).
 
 @b Övervakning
 BaseElHeater har många inställningar som kan ändras beroende på konfigurationsvalet temp.sensor/vakt:
 
  - Se BaseTempSwitch vid digital temp.vakt.
  - Se BaseTempSensor vid analog temp.sensor. (Inställningar: HH och H temp.gränser)
 
 @h1 Konfigurering
 @b Component Configuration

  - TempSwitch               Väljer digital temp.vakt
  - TempSensor               Väljer analog temp.sensor
  - NoTempSwitchOrSensor     Väljer ingen temp.övervakning (inget IO)
 
   Väljer man TempSensor bör man titta över attribut inställningarna LimitHH och LimitH i
   BaseTempSensor objektet TempSensor.
  
 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler (en eller ingen!).

  - TempSensor.Value     Ai (valbart)
  - TempSwitch.Switch    Di (valbart)
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseElHeaterFo.
 @image orm_baseelheaterfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseElHeaterSim.

 @b Se även

 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>TempSwitch
  Digitalingång temperaturvakt i värmeelementet.
 </attr>
 <attr>TempSensor
  Analogingång temperatursensor i värmeelementet.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt, objektsymbol börjar blinka rött. (Larmgräns HH tempsensor)
 </attr>
 <attr>IndWarning 
  Går hög om B-larm är aktivt, objektsymbol blir gul (fast). Används när man har
  konfigurerat analoga temp.sensorn (Larmgräns H ).
 </attr>
 <attr>DisplayInd 
  Inställning om temp.indikatorer ska visas (1:a) i objektsbilden eller inte (0:a).
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
 IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

 </class>
 
 ######################################################################################## 

<class>BaseElHeaterFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseElHeater
 Funktionsobjekt för BaseElHheater
 @image orm_baseelheaterfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseElHeater
 i planthierarkin.
 
 @b Se även
 <attr>DisableSup 
  Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att både larm
  och larmutgångar kopplas bort vid valet TempSensor. Vid valet tempSwitch kopplas bara larmet bort!
 </attr>
 <attr> OverTemp
   Utgången går hög när A-larm råder (HH temp temp.sensor eller temp.vakt larmar)
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

#####################################################################################

<class> CompModeD
 @Version
 @Author je
 @Summary Mod objekt för komponent med en digital order-utgång
 Mod objektet CompModeD hanterar en digital orderutgång och en manöverbild med
 start/stopp och Auto/Man knappar för att styra en drift. CompModeD används bl.a
 i objektet BaseMotorAggr (motor, pump och fläktstyrning).
 
  Modobjektet hanterar många moder som kan behöva sin förklaring. Det tänkta styrda
  objektet (driften) kan vara i fjärr mod eller lokal mod:

  - Lokal mod          Driften styrs från en manöverlåda/pulpet placerad vid driften.

  - Fjärr mod          Driften styrs från styrsystemet, av operatören från objektsbilden eller av
                       plcprogrammet.

  Den lokala moden har högre prioritet framför fjärr mod. 

  Objektets modhantering innehåller en extern och en intern mod:

  - Extern mod         Objektets inbyggda auto/man logik används ej, dvs
                       auto/man hanteras av Plc kod som behöver programmeras.

  - Intern mod         Objektet styr driften via inbyggda auto/man logiken.


 Väljer man att manuellt styra driften via inbyggda koden kan man koppla bort auto/man
 mod och då kallas moden endast för intern mod (endast manuellt).

 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan:
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 
   
 Knappar i bilden kan även konfigureras att visa Till/Från.
 
 @b Objektsbild
 @image orm_compmoded_og.png

 Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
 - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

 - Knappar Man/Auto väljer mod vid fjärrstyrning

 - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
   dimmas. Styrning via Auto/man mod förreglas.

 - Indikator Extern som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod inte
   styrs/används i objektet. Inga auto/man knappar visas i bilden.
    
 - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
 - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
   annat sätt.

 - Indikator Start visar alltid status på återkopplingen, dvs normalt kontaktorsvar.
  

 @h1 Konfigurering
 Mod objekt CompModeD hanterar en orderutgång som kan konfigureras på många sätt och
 innehåller funktioner:
 
 -Felhantering för manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.

  Start orderutgången styrs av fyra olika körsätt:
  
 -1 Ingång ExtStart från funktionsobjektet och intern auto/man mod.
 -2 Ingång ExtStart från funktionsobjektet och extern auto/man mod.
 -3 Knapp Start/stopp från bilden i manuell mod.
 -4 Ingång LokalStart från funktionsobjektet och LocalMode.

 OBS! Endast en åt gången av dessa tre inställningsattribut får ha värdet 1, Är flera satta
 till 1 samtidigt fungerar inte objektet som tänkt:
  
 -OpExtAndIntMan
 -OpIntOnly
 -OpExtOnly

 @b Component Configuration
 -StartStop     Väljer knappar i objektsbild med text Start/Stopp
 -OnOff         Väljer knappar i objektsbild med text Till/Från

 @b Styrning av mod från objektsbild
 @image orm_compmoded_og.png
  
 Bilden visar en konfiguration (default) där objektets alla funktioner används.
 Operatören väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs
 utgången av funktionsobjektets ingång ExtStart. OBS! ingång ExtControl i
 funktionsobjektet används ej.

 @b Styrning av mod via funktionsobjektets ingångar i PLC programmet
 @image orm_compmoded_extern.png
 
 Vänstra bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet.
 Auto mod aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp dimmas)
 och styr sedan utgången via ingång ExtStart. Denna konfiguration fås genom att
 sätta OpExtAndIntMan till 1.

 OBS!
 Detta konfigurationsalternativ är enda gången som ingång ExtControl har betydelse för
 funktionen.

 Högra bilden visar när både auto/man mod och manövrering start/stopp i manuell mod
 styrs utanför objektet. Genom att sätta OpExtOnly till 1 tas även knapparna Start,
 Stopp bort i bilden och styrning av utgången sker endast via ExtStart ingången,
 dvs ingen mod hantering i objektet används. Inga knappar syns i bilden.

 @b Endast manuell mod 
 @image orm_compmoded_int_only.png
 
 Bilden visar när bara manuell mod är konfigurerad. Ingång ExtStart och Local på
 funktionsobjektet används ej. Knapparna Man/auto och indikator Local är gömda i
 bilden. Denna konfiguration fås genom att sätta OpIntOnly och OpNoLocal till 1.

 @b Lokal mod 
 @image orm_compmoded_local.png
 
 Bilden visar när lokal mod är aktiverad (ingång LocalMod är 1). Detta styrsätt är
 tänkt att användas för styrning via tryckknappar från lokal manöverlåda. Lokal mod
 förreglar auto och manuell styrning, dvs lokal styrning har högsta prioritet.
 
 @b Start, stoppknapp och indikering
 Startknappen fungerar också som en toggelknapp, dvs man behöver inte trycka på
 stoppknappen för att stoppa.
 
 Indikering bredvid startknappp blir grön när ingång Feedback bli hög, dvs där man
 normalt kopplar in styrobjektets kontaktorsvar eller motsvarande.

 @b Felhantering
 Om ingång Ready går låg är det normala beteendet att tvinga objektet i manuell mod,
 vill man ligga kvar i auto mod oavsett Ready kan man konfigurera detta genom att sätta
 OpNoAutoToMan till 1. Via funktionsobjektets ingång ForceMan kan man tvinga objektets
 mod till man oavsett vad OpNoAutoToMan har för värde.
 
 Om Ready är låg förreglas utgången och detta gäller i alla moder.
 
 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska
 hindra felmanövrering utgår diverse larm. Exempel på förregling/larm är när ingång
 Ready är låg. Genom att objektet automatiskt dimmar knappar mm förhindras diverse
 larm.

 När objektets lokal mod aktiveras blir det ett B-larm, detta larm går att konfigurera bort
 genom att sätt attributet OpDisableLocalAlarm till 1.
 
 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeDFo.
 @image orm_compmodedfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Se även
 @classlink BaseMotorAggr basecomponent_basemotoraggr.html
 @classlink BasePumpAggr basecomponent_basepumpaggr.html
 @classlink BaseFanAggr basecomponent_basefanaggr.html  
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande en objektsbild för styrning av en digital utgång i flera moder, 
  Start/Stopp och Till/Från.
</attr>
<attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ som är valt, dvs
  texten Start/Stopp eller Till/Från på manuella knapparna (ConfigureComponent method)
</attr>
<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpManStart
  Påverkas normalt via knapp Start i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpManStop
  Påverkas normalt via knapp Stop i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
</attr>
<attr> LocalStart
  Påverkas via ingång i funktionsobjektet och är normalt en tryckknapp i lokal
  manöverlåda.
</attr>
<attr> Ready
  Förregling av drift via ingång i funktionsobjektet som förreglar start i alla moder
  om inte signalen är hög.
</attr>
<attr> FeedBack
  Kontaktorsvaret för driften, påverkas via ingång i funktionsobjektet
</attr>
<attr> Order
  Orderutgång i funktionsobjektet som går hög när driften ska starta.
</attr>
<attr> AutoMode
  Är hög när aktuell mod är Auto, styrs normalt av funktionsobjektet och knapp i bild.
  Påverkas av ingång ExtControl i funktionsobjektet om konfigurationen OpExtAndIntMan är 1.
<attr> ManOrdDim
  Dimmar Start och Stoppknappen i objektbilden.
</attr>
<attr> AutoModDim
  Dimmar knapp auto i objektbilden.
</attr>
<attr> ManModDim
  Dimmar knapp man i objektbilden.
</attr>
<attr> LocalModHide
  Gömmer indikator local i objektbilden.
</attr>
<attr> ManAutoHide
  Gömmer knappar man/auto i objektbilden.
</attr>
<attr> ManOrdHide
  Gömmer knappar Start/Stopp i objektbilden.
</attr>
<attr> ExternOrdHide
  Gömmer indikator Extern i objektbilden.
</attr>
<attr> OpIntOnly
  Konfiguerar objektet att tillhandahålla endast manuell mod, dvs auto/man
  knappar i bild tas bort och ingångar för extern styrning görs verkningslösa. 
</attr>
<attr> OpNoLocal
  Konfiguerar objektet att INTE tillhandahålla lokal mod, dvs indikering
  lokal i bild tas bort och ingångar för lokal styrning görs verkningslösa.
</attr>
<attr> OpNoAutoToMan
  Konfiguerar objektet att INTE vid låg signal på ingång Ready automatisk
  återgå till manuell mod. OBS! Detta kan medföra risk för återstart när Ready går
  hög igen.
</attr>
<attr> OpExtOnly
  Konfiguerar objektet att INTE tillhandahålla manuell styrning och
  mod hantering, dvs alla knappar i bilden tas bort och mod hanteringen görs
  verkningslös.
</attr>
<attr> OpExtAndIntMan
  Konfiguerar objektet att INTE tillhandahålla mod hantering auto/man, dvs
  knappar auto/man i bilden tas bort och och mod styrs via ingång ExtControl. När
  ExtControl är låg dimmas INTE knapparna Start/Stopp i bilden och signal AutoMod går
  låg, dvs manuell mod. 
</attr>
<attr> OpDisableLocalAlarm
  Konfiguerar objektet att inte larma när lokal mod blir aktiverad.
</attr>
<attr> ManStart
  Styrs av funktionsobjektet och går hög när manuell startorder aktiveras.
</attr>
<attr> AlarmNotReadyM
  Larmtext om driften ej är driftklar när man försöker starta den i manuell mod
  (B-larm).
</attr>
<attr> AlarmNotReadyA
  Larmtext om drift ej är driftklar när man försöker manövrera den
  till auto mod (B-larm). 
</attr>
<attr> Alarm1LocalMod
  Larmtext om driftens lokal mod är aktiverad när man manuellt försöker starta
  från bild (B-larm).
</attr>
<attr> Alarm2LocalMod
  Larmtext när driftens lokal mod är aktiverad (B-larm).
</attr>
<attr> AlarmNotManOrd
  Larmtext om driften är i auto mod när man manuellt försöker starta den (B-larm).
</attr>
<attr> IndMode
  Textsträng som visar ett L och M ihop med objektets objektsymbol i bilder, (L)okal, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten till.
</attr>

</class>

####################################################################################

<class> CompModeDFo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeD
 Funktionsobjekt för CompModeD
 @image orm_compmodedfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeD i planthierarkin.

 Objektet tar hand om mod hantering auto/man/lokal och övervakar drift med en digital utgång.

 @b Se även
<attr> ExtControl
  Används för att styra mod auto/man när man konfigurerat objektets attribut OpExtAndIntMan till 1.
  dvs om ExtControl är 0 är det man mod och om 1 är det auto mod (extern mod styrning).

  Funktionen/inställningen används alltså när man via objektbilden manuellt vill starta/stoppa med
  knappar men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
</attr>
<attr> ExtStart
  Ingång för att styra order utgången i automatik mod (extern).
</attr>
<attr> LocalMode 	
   Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
</attr>
<attr> LocalStart 	
  Ingång för att styra order utgången i lokal mod
</attr>
<attr> Ready 	
  Förreglingsingång, ska vara sann annars tas orderutgången ner i alla moder. Dessutom tvingas
  auto mod till man mod om inte objektattributet OpNoAutoToMan är 1.
</attr>
<attr> Feedback 	
  Används för återkoppling av order, dvs kontaktorsvar. Indikering vid startknapp blir grön i
  objektsbilden om signalen är sann.
</attr>
<attr> ForceMan 	
  Ingång som tvingar interna Auto/Man mod att inta man mod. Används INTE när objektets mod
  styrs externt, dvs när objektets inställningsattribut OpExtOnly=1 eller OpExtAndIntMan=1.
  
  Används bl.a i BaseMotorAggr för att tvinga mod objektet i manuell mod vid fel på kontaktorsvaret
  så inte kontaktorn ligger och pulsar när beordring i auto ligger hög.
</attr>
<attr>PulseControl 
 Ingång som hanterar start i manuell mod, dvs återställer order om feedback saknas. Används
 exempelvis när man har en pulsstyrd kontaktor som arbetar ihop med detta objekt. Se objekt
 BaseContactor eller BaseMotorAggr för mer info.
</attr>
<attr> Order 	
  Objektets orderutgång start.
</attr>
<attr> AutoMode 	
  Utgång sann om objektet är i automatik mod, falsk är det manuell mod.
</attr>
<attr> ManStop 	
  Utgång sann ett programvarv när operatör trycker på stoppknappen OpManStop om manuell mod
  är aktiv, Används ihop med en kontaktor som har pulsfunktion så att en frånpuls kan genereras
  oavsett status på modobjektets orderutgång Order.
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>

</class>

#######################################################################################

<class> CompModeDM
 @Version
 @Author je
 @summary Enkel Auto/Man/Lokal mod, manuell Öppna/Stäng, 1 digital utgång
 Mod objektet CompModeDM hanteras en digital orderutgång och en manöverbild med
 Öppna/Stäng, Auto/Man knappar och lokalindikator för att styra en drift. CompModeDM
 används bl.a i objektet BaseMValve.
 
 Körsätt som kan konfigureras:
 
 - Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden
 - Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 - Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften

 Det finns inte någon inbyggd larmhantering i objektet.

 @b Objektsbild
 @image orm_compmodedm_og.png

 Knappar Auto/Man växlar mod i fjärrstyrning och Öppna/Stäng knappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
 - Knappar Man/Auto väljer mod vid fjärrstyrning

 - I lokal mod förreglas styrning via Auto/Man och Öppna/Stäng knappar dimmas. Det finns
   ingen indikator som visar att lokal mod är aktiv.

 - Dimmade Öppna/Stäng knappar betyder att auto mod gäller eller lokal mod är aktiverad.
   
 - Indikatorer Öppna/Stäng visar status på orderutgången enbart vid manuell körning. 

 @h1 Konfigurering
 Mod objekt CompModeDM  hanteras en digital orderutgång som innehåller funktioner:

 -Öppna/Stäng order.
 -Dimmar knappar i objektsbild så felmanövrering undviks.
 
 Öppna/Stäng orderutgång OutRef styrs av fyra moder:
 
 -1 Ingång RefAuto från funktionsobjektet och intern auto/man mod.
 -2 Ingång RefAuto från funktionsobjektet och extern auto/man mod.
 -3 Knapp Öppna/Stäng från bilden i manuell mod.
 -4 Ingång LocalOrder från funktionsobjektet och LocalMode.

 @b Styrning av mod från objektsbild
 @image orm_compmodedm_og.png
 
 Bilden ovan visar en konfiguration där nästa alla objektets funktioner används. 
 Operatören väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs 
 utgången OutRef av funktionsobjektets ingång RefAuto.
 
 @b Ingen styrning från objektsbild
 @image orm_compmodedm_extern_only.gif
 
 Bilden ovan visar en konfiguration där objektets utgång ENDAST styrs av funktionsobjektets
 ingång RefAuto, dvs auto mod är alltid rådande. Egentligen har objektet inget funktion att
 uppfylla mer än som ett enkelt förreglingsobjekt (AND grind).
 
 Genom att konfigurera attributet OpOnlyAuto i objektet till 1 får man denna bild/funktion. 

 @b Felhantering
 Om Ready är låg förreglas utgången, detta gäller i alla moder. OBS! Auto/man mod påverkas
 inte av ready, dvs vill man gå ur autoläget när ready går låg får man själv styra det via
 PLC programmet.
  
 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeDMFo.
 @image orm_compmodedmfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> ManMode
  Är hög när aktuell mod är manuellt, påverkas av objektsbildens knappar Man/Auto.
  Om konfigurationen OpAutoOnly är 1 används inte denna mod, dvs det är ALLTID
  auto mod som gäller.
</attr>
<attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
</attr>
<attr> LocalOrder
  Påverkas via ingång i funktionsobjektet och styrs normalt ifrån en lokal manöverlåda.
</attr>
<attr> OpAutoOnly
  Konfiguerar att inga knappar mm syns i objektsbilden och samtidigt görs manuell mod
  verkningslös, dvs objektet uppför sig som det ALLTID är auto mod som gäller. Denna
  konfiguration används mycket sällan!
</attr>
<attr> OpRefMan
  Påverkas normalt via knappar Öppna/Stäng i objektsbild. Funktionen på knappar i
  bilden är "SetDig" och "ResetDig".
</attr>
<attr> OpManDimmed
  Dimmar knappar Öppna/Stäng i objektbilden. Detta händer när objektet är i auto mod
  eller lokal mod.
</attr>
<attr> LocalUsed
  Inställningsattribut (1:a) när man använder lokal mod för objektet.
</attr>
<attr> IndMode
  Textsträng som visar ett L och M ihop med objektets objektsymbol i bilder, (L)okal, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
</attr>

</class>

####################################################################################

<class> CompModeDMFo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeDM
 Funktionsobjekt för CompModeDM 
 @image orm_compmodedmfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeDM
 i planthierarkin.
 
 Objektet tar hand om mod hantering auto/man/lokal med en digital utgång.

 @b Se även
<attr> RefAuto
  Ingång för att styra OutRef utgången (öppna) i automatik mod.  
</attr>
<attr> Ready 	
  Förreglingsingång, ska vara sann annars tas orderutgång ner i ALLA moder.
  OBS att ingen påverkan av moder görs, dvs auto går inte över i manuellt om
  ready går låg.
</attr>
<attr> LocalMode 	
   Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
</attr>
<attr> LocalOrder 	
  Ingång för att styra order utgången i lokal mod
</attr>
<attr> OutRef 	
  Objektets OutRef utgång (öppna).
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>
</class>

####################################################################################

<class> CompModeD2
 @Version
 @Author je
 @summary Auto/Man/Lokal mod, 2 digitala utgångar
 Mod objektet CompModeD2 hanteras två digitala orderutgångar och en manöverbild med
 öka/minska/stopp och Auto/Man knappar för att styra en drift och eventuella stoppgränslägen.
 
 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Incr/Decr/Stop kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Incr/Decr/Stop i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan:
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Incr/Decr/Stop knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 

 Knappar i bilden kan även konfigureras att visa Upp/Ner, Fram/Back eller Öppna/Stäng och med funktionen att
 musknapp måste hållas inne hela tiden (fjäderretur).
 
 Används bl.a i objektet BaseValveIncrDecr (motorventil) och BaseMotorIncDecrAggr (motoraggregat).
 
 @b Objektsbild
 @image orm_compmoded2_og.png

 Knappar Auto/Man växlar mod i fjärrstyrning och Öka/Minska/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).

 - Knappar Öka/minska Incr/Decr har toggelfunktion, dvs man behöver ej trycka på stopp.

 - Knappar Man/Auto väljer mod vid fjärrstyrning.

 - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
   dimmas. Styrning via Auto/man mod förreglas.

 - Indikator Extern som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod inte
   styrs/används i objektet. Inga auto/man knappar visas i bilden.
      
 - Dimmad Incr, Decr och Stopp knapp betyder att auto mod gäller (Extern indikator grön).
  
 - Syns inga knappar alls är ALLTID extern indikator grön och auto/man visas på annat
   sätt.
   
 - Indikatorer Incr/Decr visar status på återkopplingen, dvs normalt kontaktorsvar.
 
 - Indikatorer under Limit Switches visar status på yttre återkoppling, dvs normalt gränslägen.

 @h1 Konfigurering
 Mod objekt CompModeD2  hanteras två digitala orderutgångar som kan konfigureras på många sätt
 och innehåller funktioner:

 -Öka och minska order eller Upp/Ner, Fram/Back och Öppna/Stäng.
 -Felhantering för lägesåterföring och manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.
 
 Öka/incr och minska/decr orderutgångar styrs av fyra olika körsätt:
 
 -1 Ingångar ExtIncr och ExtDecr från funktionsobjektet och intern auto/man mod.
 -2 Ingångar ExtIncr och ExtDecr från funktionsobjektet och extern auto/man mod.
 -3 Knappar Incr/Öka och Decr/Minska från bilden i manuell mod.
 -4 Ingångar LokalIncr och LocalDecr från funktionsobjektet och LocalMod.

 OBS! Endast en åt gången av dessa tre inställningsattribut får ha värdet 1, Är flera satta
 till 1 samtidigt fungerar inte objektet som tänkt:
  
 -OpExtAndIntMan
 -OpIntOnly
 -OpExtOnly

 @b Component Configuration
 -IncrDecr     Väljer knappar i objektsbild med text Öka/Minska
 -UpDown       Väljer knappar i objektsbild med text Upp/Ner
 -ForwBack     Väljer knappar i objektsbild med text Fram/Back
 -OpenClose    Väljer knappar i objektsbild med text Öppna/Stäng 

 Eventuella stoppgränslägen kopplas in på ingångar i funktionsobjektet. Sätts attributet
 OpNoLimitSwitch till 1 tas indikatorer Limit switches bort i objektsbilden.

 Stoppknapp kan konfigureras bort samtidigt som Incr/Decr knapparna då måste hållas intryckta
 med musen för att styrorder ska ligga kvar. Sätts attributet OpNoStopButton till 1 i fås denna
 funktion.

 @b Styrning av mod från objektsbild
 @image orm_compmoded2_og.png
 
 Bilden ovan visar en konfiguration (default) där objektets alla funktioner används. Operatören
 väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs utgångarna av
 funktionsobjektets ingångar ExtIncr och ExtDecr, ingång ExtControl används ej.

 @b Styrning av mod från PLC programmet
 @image orm_compmoded2_extern.png
 
 Vänstra bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet.
 Auto mod aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp dimmas)
 och styr sedan utgången via ingång ExtStart. Denna konfiguration fås genom att
 sätta OpExtAndIntMan till 1.

 OBS!
 Detta konfigurationsalternativ är enda gången som ingång ExtControl har betydelse för
 funktionen.

 Högra bilden visar när både auto/man mod och manövrering i manuell styrs utanför
 objektet. Genom att sätta OpExtOnly till 1 tas även knapparna Incr, Decr och
 Stop bort i bilden och styrning av utgångarna sker endast via ExtIncr och ExtDecr
 ingångar, dvs ingen manövrering och mod hantering i objektet används. Inga knappar
 syns i bilden.
 
 @b Endast manuell mod 
 @image orm_compmoded2_int_only.png
 
 Bilden visar när bara manuell mod är konfigurerad. Ingångar Ext och Local på
 funktionsobjektet används ej. Knapparna Man/auto och indikator Local är gömda i
 bilden. Denna konfiguration fås genom att sätta OpIntOnly och OpNoLocal till 1.

 @b Lokal mod 
 @image orm_compmoded2_local.png
 
 Bilden visar när lokal mod är aktiverad, ingång LocalMod är hög (gul). Detta styrsätt är
 tänkt att användas för styrning via tryckknappar från lokal manöverlåda. Lokal mod
 förreglar auto och manuell styrning, dvs lokal styrning har högsta prioritet.
  
 @b Incr, Decr, stoppknappen och indikeringar
 Knapparnas funktion kan konfigureras på två sätt, normalt togglas knapparna
 Incr/Decr. Om man konfigurerar OpNoStopButton till 1 fungerar knapparna så länge
 knappen hålls intryckt (stoppknappen görs osynlig i bilden).    
 
 Indikering bredvid knapparna blir gröna när återkopplingen för respektive utgång blir
 hög (ingång FeedbackIncr och FeedbackDecr), dvs där man normalt kopplar in
 styrobjektets kontaktorsvar eller motsvarande.
 
 @b Gränslägen
 Om gränslägen (Limit switch) används tillåts styrorder pågå tills tid OrderTimeLimit löpt ut. 
 Löper tiden ut går utgång Error hög och larm genereras och eventuellt går auto
 över i manuell mod beroende på konfigurationen för OpNoAutoToMan. OrderTimeLimit är
 förinställt på 10s.

 Indikeringar i bilder under rubrik LimitSwitches blir gröna när återkopplingen
 från respektive gränsläge blir hög (ingång LimitSwitchIncr och LimitSwitchDecr).
 
 Ingångar för gränslägena sker via funktionsobjektets ingångar LimitSwitchIncr och
 LimitSwitchDecr. Används inte gränslägen ska man sätta OpNoLimitSwitch till 1. 

 @b Felhantering
 Om ingång Ready går låg är det normala beteendet att tvinga objektet i manuell mod,
 vill man ligga kvar i auto mod oavsett Ready kan man konfigurera detta genom att sätta
 OpNoAutoToMan till 1. Via funktionsobjektets ingång ForceMan kan man tvinga objektets
 mod till man oavsett vad OpNoAutoToMan har för värde.
 
 Om Ready är låg förreglas utgångarna och detta gäller i alla moder.
 
 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska
 hindra felmanövrering utgår diverse larm. Exempel på förregling/larm är när ingång
 Ready är låg. Genom att objektet automatiskt dimmar knappar mm förhindras diverse
 larm.

 OBS!
 När man styr Auto/man mod externt eller lokalt är det viktigt att titta på utgången
 Error för att få återkoppling till sitt program (återställa order), dvs man bör ta
 ner styrorder på objektets ingångar vid fel för att förhindra oönskade återstarter.

 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeD2Fo.
 @image orm_compmoded2fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 @classlink BaseValveIncrDecr basecomponent_basevalveincrdecr.html 
 @classlink BaseMotorIncDecrAggr basecomponent_basemotorincrdecraggr.html 
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande en objektsbild för styrning av två digitala utgångar i flera moder.
  Öka/Minska, Upp/Ner och Fram/Back. 
</attr>
<attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
</attr>
<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpManIncr
  Påverkas normalt via knapp Incr/Öka i objektsbild, nollställs automatiskt.
  Funktionen på knappen i bilden är normalt "SetDig" och om attribut OpNoStopButton är 1 är
  det "StoDig".
</attr>
<attr> OpManDecr
  Påverkas normalt via knapp Decr/minska i objektsbild, nollställs automatiskt.
  Funktionen på knappen i bilden är normalt "SetDig" och om attribut OpNoStopButton är 1 är
  det "StoDig".
</attr>
<attr> OpManStop
  Påverkas normalt via knapp Stop i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".  
</attr>
<attr> LocalMode
  Normalt en omkopplare i lokal manöverlåda, påverkas via ingång i funktionsobjektet.
  Denna mod gäller före alla andra.
</attr>
<attr> LocalIncr
  Normalt en tryckknapp i lokal manöverlåda, påverkas via ingång i funktionsobjektet.
</attr>
<attr> LocalDecr
  Normalt en tryckknapp i lokal manöverlåda, påverkas via ingång i funktionsobjektet.
</attr>
<attr> Ready
  Förregling av drift via ingång i funktionsobjektet som förreglar start i alla moder
  om inte signalen är hög. Gör också att auto mod återgår till manuell mod, detta beteende
  kan kopplas bort.
</attr>
<attr> FeedBackIncr
   Kontaktorsvaret för öka, påverkas via ingång i funktionsobjektet.
</attr>
<attr> FeedBackDecr
  Kontaktorsvaret för minska, påverkas via ingång i funktionsobjektet.
</attr>
<attr> LimitSwitchDecr
  Stoppgränsläge för öka, påverkas via ingång i funktionsobjektet. OBS! lokal mod
  förreglas inte av gränsläget.
</attr>
<attr> LimitSwitchIncr
  Stoppgränsläge för minska, påverkas via ingång i funktionsobjektet. OBS! lokal mod
  förreglas inte av gränsläget.
</attr>
<attr> ErrorDecr
  Styrs av funktionsobjektet och går hög (minst 2s) om driftsvar från LimitSwichDecr
  uteblir när tid OrderTimeLimit löpt ut vid order Decr.   
</attr>
<attr> ErrorIncr
  Styrs av funktionsobjektet och går hög (minst 2s) om driftsvar från LimitSwichIncr
  uteblir när tid OrderTimeLimit löpt ut vid Order Incr.
</attr>
<attr> OrderIncr
  Orderutgång i funktionsobjektet som går hög när driften ska öka.
</attr>
<attr> OrderDecr
  Orderutgång i funktionsobjektet som går hög när driften ska minska.
</attr>
<attr> AutoMode
  Är hög när aktuell mod är Auto, styrs normalt av funktionsobjektet och knapp i bild.
  Påverkas av ingång ExtControl i funktionsobjektet om konfigurationen OpExtAndIntMan är 1.
</attr>
<attr> ManOrdDim
  Dimmar Incr, Decr, Stoppknappar i objektbilden.
</attr>
<attr> AutoModDim
  Dimmar knapp auto i objektbilden.
</attr>
<attr> ManModDim
  Dimmar knapp man i objektbilden.
</attr>
<attr> LocalModHide
  Gömmer indikator local i objektbilden.
</attr>
<attr> ManAutoHide
  Gömmer knappar man/auto i objektbilden.
</attr>
<attr> ManOrdHide
  Gömmer knappar Incr, Decr och stoppknappen i objektbilden.
</attr>
<attr> ManStopHide
  Gömmer knapp stopp i objektbilden.
</attr>
<attr> ExternOrdHide
  Gömmer indikator Extern i objektbilden.
</attr>
<attr> OpIntOnly
  Konfiguerar funktionsobjektet att tillhandahålla endast manuell mod, dvs auto/man
  knappar i bild tas bort och ingångar för extern styrning görs verkningslösa. 
</attr>
<attr> OpNoLocal
  Konfiguerar funktionsobjektet att INTE tillhandahålla lokal mod, dvs indikering
  lokal i bild tas bort och ingångar för lokal styrning görs verkningslösa.
</attr>
<attr> OpNoAutoToMan
  Konfiguerar funktionsobjektet att INTE vid låg signal på ingång Ready eller hög signal utgång
  Error automatisk återgå till manuell mod. OBS! Detta kan medföra risk för återstart när Ready
  går hög igen.
</attr>
<attr> OpExtOnly
  Konfiguerar funktionsobjektet att INTE tillhandahålla manuell styrning och
  mod hantering, dvs alla knappar i bilden tas bort och mod hanteringen görs
  verkningslös.
</attr>
<attr> OpExtAndIntMan
  Konfiguerar funktionsobjektet att INTE tillhandahålla mod hantering auto/man, dvs
  knappar auto/man i bilden tas bort och och mod styrs via ingång ExtControl. När
  ExtControl är låg dimmas INTE knapparna Start/Stopp i bilden och signal AutoMod går
  låg, dvs manuell mod. 
</attr>
<attr> OpNoLimitSwitch
  Konfiguerar att inget stoppgränsläge för minska/öka order används. dvs order
  förreglas inte av någon stopposition. 
</attr>
<attr> OpNoStopButton
  Konfiguerar att ingen stoppknapp syns i objektsbild och samtidigt görs öka/minska
  knapparna att fungerar som en tryckknapp med fjäderretur, dvs knapparna måste hållas
  intryckt med musknappen hela tiden för att aktiverad utgång ska vara hög. 
</attr>
<attr> OpDisableLocalAlarm
  Konfiguerar funktionsobjektet att INTE larma för "lokal mod" när lokal mod aktiveras
  via funktionsobjektets ingång LocalMod.
</attr>
<attr> ManIncr
  Order manuell öka/increment internt i funktionsobjektet
</attr>
<attr> ManDecr
  Order manuell minska/decrement internt i funktionsobjektet.
</attr>
<attr> OrderTimeLimit
  Tid i sekunder. Löper denna tid ut blir det Error. Detta händer vid order och om
  driftsvar från LimitSwitches uteblir.   
</attr>
<attr> AlarmNotReadyM
  Larmtext om driften ej är driftklar när man försöker starta den i manuell mod
  (B-larm).
</attr>
<attr> AlarmNotReadyA
  Larmtext om drift ej är driftklar när man försöker manövrera den
  till auto mod (B-larm). 
</attr>
<attr> Alarm1LocalMod
  Larmtext om driftens lokal mod är aktiverad när man manuellt försöker starta
  från bild (B-larm).
</attr>
<attr> Alarm2LocalMod
  Larmtext när driftens lokal mod är aktiverad (B-larm).
</attr>
<attr> AlarmNotManOrd
  Larmtext om driften är i auto mod när man manuellt försöker starta den (B-larm).
</attr>
<attr> AlarmOrderTimeOut
  Larmtext om gränslägessvar används och svaret uteblir när tid OrderTimeLimit löpt ut
  (A-larm).  
</attr>
<attr> IndMode
  Textsträng som visar ett L och M ihop med objektets objektsymbol i bilder, (L)okal, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
</attr>

</class>

####################################################################################

<class> CompModeD2Fo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeD2
 Funktionsobjekt för CompModeD2 
 @image orm_compmoded2fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeD2
 i planthierarkin.
 
 Objektet tar hand om mod hantering auto/man/lokal och övervakar drift med två digitala utgångar.

 @b Se även
<attr> ExtControl
  Används för att styra mod auto/man när man konfigurerat objektets attribut OpExtAndIntMan till 1.
  dvs om ExtControl är 0 är det man mod och om 1 är det auto mod (extern mod styrning).

  Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera med
  knappar men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
</attr>
<attr> ExtIncr
  Ingång för att styra orderIncr utgången (öka) i automatik mod (extern).  
</attr>
<attr> ExtDecr
  Ingång för att styra orderDecr utgången (minska) i automatik mod (extern).
</attr>
<attr> LocalMode 	
  Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
  Dvs ingångar LocalIncr, LocalDecr styr. 
   
  Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
  Larmet går att välja bort via attribut OpDisableLocalAlarm.
   
  Lokal mod går att välja bort via attribut OpNoLocal vilket gömmer lokalindikator i bilder mm.  
</attr>
<attr> LocalIncr	
  Ingång för att styra orderIncr utgången (öka) i lokal mod.
</attr>
<attr> LocalDecr	
  Ingång för att styra orderDecr utgången (minska) i lokal mod.
</attr>
<attr> Ready 	
  Förreglingsingång, ska vara sann annars tas orderutgångar ner i ALLA moder. Dessutom tvingas
  auto mod till manuell mod om inte objektattributet OpNoAutoToMan är 1.
</attr>
<attr> FeedbackIncr 	
  Används för återkoppling av orderIncr (kontaktorsvar). Indikering vid ökaknapp blir grön i
  objektsbilden om signalen är sann.
</attr>
<attr> FeedbackDecr 	
  Används för återkoppling av orderDecr (kontaktorsvar). Indikering vid minskaknapp blir grön i
  objektsbilden om signalen är sann.
</attr>
<attr> LimitSwitchIncr 	
  Används som ingång för stoppgränsläge för utgången orderIncr (öka, upp, fram, öppna).
  Sann/hög signal tar ner OrderIncr.
  </attr>
<attr> LimitSwitchDecr 	
  Används som ingång för stoppgränsläge för utgången orderDecr (minska, ner, back, stäng).
  Sann/hög signal tar ner OrderDecr.
  </attr>
<attr> ForceMan 	
  Ingång som tvingar interna Auto/Man mod att inta man mod. Används inte när objektets mod
  styrs externt, dvs när objektets inställningsattribut OpExtOnly=1 eller OpExtAndIntMan=1.
</attr>
<attr> OrderIncr 	
  Objektets orderIncr utgång (öka, upp, fram, öppna).
</attr>
<attr> OrderDecr 	
  Objektets orderDecr utgång (minska, ner, back, stäng).
</attr>
<attr> AutoMode 	
  Utgång sann om objektet är i automatik mod, falsk betyder manuell mod.
</attr>
<attr> Error 	
  Utgång blir sann om objektets maxtid OrderTimeLimit löper ut. Om lokal mod
  används bör utgången återställa en aktiverad lokal styrning på ingångarna
  LocalDecr och  LocalIncr för att förhindra oönskad återstart.
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>

</class>

#######################################################################################

<class> CompModeD2M
 @Version
 @Author je
 @summary Enkel Auto/Man mod, 2 digitala utgångar
 Detta enkla mod objekt CompModeD2M hanterar två digitala orderutgångar och en manöverbild med
 öka/minska/stopp och Auto/Man knappar för att styra en drift. CompModeD2M används i objekt
 BaseDirValve. Se objekt CompModeD2 om mer funktionalitet önskas.
 
 Körsätt kan INTE konfigureras utan det är alltid fjärrstyrningar Auto eller Hand mod som gäller,
 dvs. ingen lokalt körsätt eller extern mod hanteras. Det finns inte heller någon inbyggd
 larmhantering i objektet.
 
 Knappar i bilden kan även konfigureras att visa Upp/Ner, Fram/Back eller Öppna/Stäng och
 med funktionen att musknapp måste hållas inne hela tiden (fjäderretur).
 
 @b Objektsbild
 @image orm_compmoded2m_og.png

 Knappar Auto/Man växlar mod i fjärrstyrning och Öka/Minska/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).

 - Knappar Öka/minska Incr/Decr har toggelfunktion, dvs man behöver ej trycka på stopp.

 - Knappar Man/Auto väljer mod vid fjärrstyrning.

 - Dimmad Incr, Decr och Stopp knapp betyder att auto mod gäller.
  
 - Indikatorer Incr/Decr visar status på "OpOrderMan Incr/decr".
   OBS! Att detta inte är utgångarna, dvs indikatorerna visar
   bara status på manuell order och inte auto.

 @h1 Konfigurering
 Mod objekt CompModeD2M hanteras två digitala orderutgångar som innehåller funktioner:

 -Öka och minska order eller Upp/Ner, Fram/Back och Öppna/Stäng.
 -Dimmar knappar i objektsbild så felmanövrering undviks.
 
 Öka/incr och minska/decr orderutgångar styrs av två moder:
 
 -1 Ingångar ExtIncr och ExtDecr från funktionsobjektet och intern auto/man mod.
 -2 Knappar Incr/Öka och Decr/Minska från bilden i manuell mod.
 
  @b Component Configuration
 -IncrDecr     Väljer knappar i objektsbild med text Öka/Minska
 -UpDown       Väljer knappar i objektsbild med text Upp/Ner
 -ForwBack     Väljer knappar i objektsbild med text Fram/Back
 -OpenClose    Väljer knappar i objektsbild med text Öppna/Stäng 
 
 @b Styrning av mod från objektsbild
 @image orm_compmoded2m_og.png
 
 Bilden ovan visar en konfiguration (default) där objektets alla funktioner används.
 Operatören väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs utgångarna av
 funktionsobjektets ingångar OrderAutoIncr och OrderAutoDecr.
 
 Genom att konfigurera attributet OpNoStopButton i objektet till 1 försvinner stopknappen i
 bilden och utgångarna är höga så länge knappar Incr/decr hålls inne av musknappen (fjäderretur). 

 @b Ingen styrning från objektsbild
 @image orm_compmoded2m_og_autoonly.gif
 
 Bilden ovan visar en konfiguration där objektets utgångar ENDAST styrs av
 funktionsobjektets ingångar OrderAutoIncr och OrderAutoDecr, dvs auto mod
 är alltid rådande. Egentligen har objektet inget funktion att uppfylla mer
 än som ett enkelt förreglingsobjekt (AND grind).
 
 Genom att konfigurera attributet OpOnlyAuto i objektet till 1 får man denna
 bild/funktion. 

 @b Felhantering
 Om Ready är låg förreglas utgångarna, detta gäller i alla moder. OBS! Auto/man mod påverkas
 inte av ready, dvs vill man gå ur autoläget när ready går låg får man själv styra det via
 PLC programmet.
  
 OBS!
 Det finns ingen intern förregling i objektet som hindrar att båda utgångarna går höga om
 beordring begärs av båda utgångarna samtidigt, dvs det är programmerarens uppgift att ta
 hänsyn till detta!

 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeD2MFo.
 @image orm_compmoded2mfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
  @classlink BaseDirValve basecomponent_basedirvalve.html 
  @classlink CompModeD2 basecomponent_compmoded2.html 
<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> ManMode
  Är hög när aktuell mod är manuellt, påverkas av objektsbildens knappar Man/Auto.
  Om konfigurationen OpAutoOnly är 1 används inte denna mod, dvs det är ALLTID
  auto mod som gäller.
</attr>
<attr> OpAutoOnly
  Konfiguerar att inga knappar mm syns i objektsbilden och samtidigt görs manuell mod
  verkningslös, dvs objektet uppför sig som det ALLTID är auto mod som gäller. Denna
  konfiguration används mycket sällan!
</attr>
<attr> OpOrderManIncr
  Påverkas normalt via knapp Incr/Öka i objektsbild, nollställs automatiskt. Funktionen på
  knappen i bilden är normalt "ToggleDig" och om attribut OpNoStopButton är 1 är det "StoDig".
</attr>
<attr> OpOrderManDecr
  Påverkas normalt via knapp Decr/Minska i objektsbild, nollställs automatiskt. Funktionen på
  knappen i bilden är normalt "ToggleDig" och om attribut OpNoStopButton är 1 är det "StoDig".
</attr>
<attr> OpOrderManStop
  Påverkas normalt via knapp Stop i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpNoStopButton
  Konfiguerar att ingen stoppknapp syns i objektsbild och samtidigt görs öka/minska
  knapparna att fungerar som en tryckknapp med fjäderretur, dvs knapparna måste hållas
  intryckt med musknappen hela tiden för att aktiverad utgång ska vara hög. 
</attr>
<attr> IndMode
  Textsträng som visar ett M ihop med objektets objektsymbol i bilder, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
</attr>

</class>

####################################################################################

<class> CompModeD2MFo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeD2M
 Funktionsobjekt för CompModeD2M 
 @image orm_compmoded2mfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeD2M
 i planthierarkin.
 
 Objektet tar hand om mod hantering auto/man med två digitala utgångar.

 @b Se även
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande styrning av TVÅ digitala utgångar i olika körsätt auto, manuell samt
  en objektsbild för manövrering och statusvisning. Manuella knapparna i objektsbilden kan
  konfigureras att visa Öka/minska (default), Upp/Ned, Fram,Back och Öppna/Stäng. 
</attr>

<attr> OrderAutoIncr
  Ingång för att styra OutOrderIncr utgången (öka) i automatik mod.  
</attr>
<attr> OrderAutoDecr
  Ingång för att styra OutOrderDecr utgången (minska) i automatik mod.
</attr>
<attr> Ready 	
  Förreglingsingång, ska vara sann annars tas orderutgångar ner i ALLA moder.
  OBS att ingen påverkan av moder görs, dvs auto går inte över i manuellt om
  ready går låg.
</attr>
<attr> OutOrderIncr 	
  Objektets OutOrderIncr utgång (öka, upp, fram, öppna).
</attr>
<attr> OutOrderDecr 	
  Objektets OutOrderDecr utgång (minska, ner, back, stäng).
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>
</class>

####################################################################################

<class> CompModeA
 @Version
 @Author je
 @summary Auto/Man/Lokal mod, 1 analog referensutgång och 1 digital orderutgång
 Mod objektet CompModeA hanterar en manöverbild med Start/Stopp och Auto/Man knappar samt
 styrsignaler en analog och en digital utgång. Används för att styra en drift innehållande
 en frekvensomriktare eller liknande.


 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan:
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 
   
 Knappar i bilden kan även konfigureras att visa Till/Från.

 Används bl.a i objekt BaseFcPPO3MotorAggr (frekvensomriktare).

 Närbesläktat objekt utan digital signal och utan start/stopp knappar heter BaseCompModeAM.

 @b Objektsbild
 @image orm_compmodea_og.png

 Knappar Auto/Man växlar mod i fjärrstyrning och Start/Stopp knappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).

 - Knapp Start har toggelfunktion, dvs man behöver ej trycka på stopp.

 - Knappar Man/Auto väljer mod vid fjärrstyrning.

 - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
   dimmas. Styrning via Auto/man mod förreglas. Indikatorn visas inte i bilden om
   attribut OpNoLocal är 1.   

 - Indikator Extern som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod inte
   styrs/används i objektet. Inga auto/man knappar visas i bilden.
      
 - Dimmad Start/Stopp knapp betyder att auto mod gäller (Extern indikator grön).
  
 - Syns inga knappar alls är ALLTID extern indikator grön och auto/man visas på annat
   sätt.
   
 - Indikator Start visar status på återkopplingen, dvs driftsvar från styrt objekt.
 

 @h1 Konfigurering
 Mod objekt CompModeA hanterar en analog och en digital orderutgång som kan konfigureras på
 många sätt och innehåller funktioner:

 -Start och stopp order eller Till/Från.
 -Felhantering vid manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.
 
 Start orderutgång och analoga referensutgången styrs av fyra olika körsätt:
 
 -1 Ingång ExtStart från funktionsobjektet och intern auto/man mod.
 -2 Ingång ExtStart från funktionsobjektet och extern auto/man mod.
 -3 Knapp Start/stopp från bilden i manuell mod.
 -4 Ingång LokalStart från funktionsobjektet och LocalMode.

 OBS! Endast en åt gången av dessa tre inställningsattribut får ha värdet 1, Är flera satta
 till 1 samtidigt fungerar inte objektet som tänkt:
  
 -OpExtAndIntMan
 -OpIntOnly
 -OpExtOnly

  @b Component Configuration
 -StartStop    Väljer knappar i objektsbild med text Start/Stopp
 -OnOff        Väljer knappar i objektsbild med text Till/Från

 @b Styrning av mod från objektsbild
 @image orm_compmodea_og.png
 
 Bilden ovan visar en konfiguration där nästan objektets alla funktioner används. Operatören
 väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs utgångarna av
 funktionsobjektets digitala ingång ExtStart och analog ingång RefAuto, ingång ExtControl
 används ej.

 @b Styrning av mod från PLC programmet och manuell styrning från bild
 @image orm_compmodeda_ext_and_int_man.gif
  
 Bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet och lokal körning
 är konfigurerad. Auto mod aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp
 dimmas) och styr sedan utgången via ingång ExtStart. Denna konfiguration fås genom att sätta
 OpExtAndIntMan till 1.

 OBS!
 Detta konfigurationsalternativ är enda gången som ingång ExtControl har betydelse för
 funktionen.

 Genom att sätta OpIntOnly till 1 kopplas även den externa styrningen bort, dvs ingångar
 ExtStart och AutoRef görs verkningslösa.

 @b Styrning av mod från PLC programmet och ingen manuell styrning från bild 
 @image orm_compmodeda_extern_only.gif

 Bilden visar när både auto/man mod och manövrering i manuell styrs utanför objektet. 
 Denna konfiguration fås genom att sätta OpExtOnly till 1. Styrning av utgångarna sker
 endast via ExtStart och AutoRef ingångar. Denna konfiguration borde sällan avändas
 pga sin begränsade funktionalitet.
   
 @b Lokal mod 
 @image orm_compmodeda_local.gif
 
 Bilden visar när lokal mod är aktiverad, dvs ingång LocalMod är hög (gul). Detta styrsätt är
 tänkt att användas för styrning via lokal manöverlåda. Lokal mod förreglar auto och
 manuell styrning, dvs lokal styrning har högsta prioritet.
  
 @b Start, stoppknappen och indikeringar
 Indikering bredvid knapp Start blir grön när återkopplingsingången FeedBack för Order
 utgången blir hög, dvs där man normalt kopplar in styrobjektets driftsvar eller motsvarande.
 
 @b Felhantering
 Om ingång Ready går låg är det normala beteende att tvinga objektet i manuell mod, vill
 man ligga kvar i auto mod oavsett Ready kan man konfigurera detta genom att sätta
 OpNoAutoToMan till 1.
 
 Om Ready är låg förreglas Order utgången och OutRef blir 0, detta gäller i alla moder.
 
 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska
 hindra felmanövrering utgår diverse larm. Exempel på förregling/larm är när ingång
 Ready är låg. Genom att objektet automatiskt dimmar knappar mm förhindras diverse
 larm.

 OBS!
 När man styr Auto/man mod externt eller lokalt är det viktigt att titta på ingången
 Ready för att få återkoppling till sitt program (återställa order), dvs man bör ta
 ner styrorder på ingångar ExtStart, LocalStart vid fel för att förhindra oönskade
 återstarter.

 När objektets lokal mod aktiveras blir det ett B-larm, detta larm går att konfigurera bort
 genom att sätt attributet OpDisableLocalAlarm till 1.

 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeAFo.
 @image orm_compmodeafo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 @classlink BaseFcPPO3MotorAggr basecomponent_basefcppo3motoraggr.html 
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande en objektsbild för styrning av en analog och en digital utgång i flera moder.
  Start/Stopp, Till/Från. 
</attr>
<attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
</attr>
<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpManStart
  Påverkas normalt via knapp Start i objektsbild, nollställs automatiskt.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpManStop
  Påverkas normalt via knapp Stop i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".  
</attr>
<attr> LocalMode
  Normalt en omkopplare i lokal manöverlåda, påverkas via ingång i funktionsobjektet.
  Denna mod gäller före alla andra.
</attr>
<attr> LocalStart
  Normalt en tryckknapp i lokal manöverlåda, påverkas via ingång i funktionsobjektet.
</attr>
<attr> Ready
  Förregling av drift via ingång i funktionsobjektet som förreglar start i alla moder
  om inte signalen är hög.
</attr>
<attr> FeedBack
  Driftsvar från styrt objekt att den kör, påverkas via ingång i funktionsobjektet.
</attr>
<attr> Order
  Orderutgång i funktionsobjektet som går/är hög när driften ska starta.
</attr>
<attr> AutoMode
  Är hög när aktuell mod är Auto, styrs normalt av funktionsobjektet och knapp i bild.
  Påverkas av ingång ExtControl i funktionsobjektet om konfigurationen OpExtAndIntMan är 1.
</attr>
<attr> ManStart
  Är hög när manuell startorder är aktiverad och objektet är i manuell mod.
</attr>
<attr> ManOrdDim
  Dimmar Start och Stoppknapp i objektbilden.
</attr>
<attr> AutoModDim
  Dimmar knapp auto i objektbilden.
</attr>
<attr> ManModDim
  Dimmar knapp man i objektbilden.
</attr>
<attr> LocalModHide
  Gömmer indikator local i objektbilden.
</attr>
<attr> ManAutoHide
  Gömmer knappar man/auto i objektbilden.
</attr>
<attr> ManOrdHide
  Gömmer knappar Start och stopp i objektbilden.
</attr>
<attr> ExternOrdHide
  Gömmer indikator Extern i objektbilden.
</attr>
<attr> OpIntOnly
  Konfiguerar funktionsobjektet att tillhandahålla endast manuell mod, dvs auto/man
  knappar i bild tas bort och ingångar för extern styrning görs verkningslösa. 
</attr>
<attr> OpNoLocal
  Konfiguerar funktionsobjektet att INTE tillhandahålla lokal mod, dvs indikering
  lokal i bild tas bort och ingångar för lokal styrning görs verkningslösa.
</attr>
<attr> OpNoAutoToMan
  Konfiguerar funktionsobjektet att INTE vid låg signal på ingång Ready automatisk
  återgå till manuell mod. OBS! Detta kan medföra risk för återstart när Ready går
  hög igen.
</attr>
<attr> OpExtOnly
  Konfiguerar funktionsobjektet att INTE tillhandahålla manuell styrning och
  mod hantering, dvs alla knappar i bilden tas bort och mod hanteringen görs
  verkningslös.
</attr>
<attr> OpExtAndIntMan
  Konfiguerar funktionsobjektet att INTE tillhandahålla mod hantering auto/man, dvs
  knappar auto/man i bilden tas bort och och mod styrs via ingång ExtControl. När
  ExtControl är låg dimmas INTE knapparna Start/Stopp i bilden och signal AutoMod går
  låg, dvs manuell mod. 
</attr>
<attr> OpNoUpdateManRef
  Konfiguerar att ingen uppdatering OpRefMan gör i automatik, dvs OpRefMan skrivs inte
  över av PLC programmet i automatik utan beter sig som ett fast värde. 
</attr>
<attr> OpRefMan
  Referens i manuell mod som kan ändras av operatör i bilden. Uppdateras automatiskt av
  autoreferensen i automatik. Stänga av den automatiska uppdateringen görs genom att
  sätta OpNoUpdateManRef till 1.
</attr>
<attr> OpMinRefMan
  Ställer in minsta manuella referensvärde som kan ändras av operatör i bilden.
</attr>
<attr> OpMaxRefMan
  Ställer in största manuella referensvärde som kan ändras av operatör i bilden.
</attr>
<attr> OpDisableLocalAlarm
  Konfiguerar funktionsobjektet att inte larma när lokal mod blir aktiverad.
</attr>
<attr> OutRef
  Objektets analoga referensutgång. Nollställs alltid om inte digitala utgången Order är 1.
</attr>
<attr> AlarmNotReadyM
  Larmtext om driften ej är driftklar när man försöker starta den i manuell mod
  (B-larm).
</attr>
<attr> AlarmNotReadyA
  Larmtext om drift ej är driftklar när man försöker manövrera den
  till auto mod (B-larm). 
</attr>
<attr> Alarm1LocalMod
  Larmtext om driftens lokal mod är aktiverad när man manuellt försöker starta
  från bild (B-larm).
</attr>
<attr> Alarm2LocalMod
  Larmtext när driftens lokal mod är aktiverad (B-larm).
</attr>
<attr> AlarmNotManOrd
  Larmtext om driften är i auto mod när man manuellt försöker starta den (B-larm).
</attr>
<attr> IndMode
  Textsträng som visar ett L och M ihop med objektets objektsymbol i bilder, (L)okal, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
</attr>
</class>

####################################################################################

<class> CompModeAFo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeA
 Funktionsobjekt för CompModeA 
 @image orm_compmodeafo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeA
 i planthierarkin.
 
 Objektet tar hand om mod hantering auto/man/lokal och övervakar drift med en analog
 och en digital utgång.

 @b Se även
<attr> ExtControl
  Används för att styra mod auto/man när man konfigurerat objektets attribut OpExtAndIntMan till 1.
  dvs om ExtControl är 0 är det man mod och om 1 är det auto mod (extern mod styrning).

  Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera med
  knappar men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
</attr>
<attr> ExtStart
  Ingång för att styra Order utgången i automatik mod (extern).  
</attr>
<attr> LocalMode 	
   Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
</attr>
<attr> LocalStart	
  Ingång för att styra Order utgången i lokal mod.
</attr>
<attr> Ready 	
  Förreglingsingång, ska vara sann annars tas orderutgång ner i ALLA moder. Dessutom tvingas
  auto mod till manuell mod om inte objektattributet OpNoAutoToMan är 1.
</attr>
<attr> Feedback 	
  Används för återkoppling av order (driftsvar). Indikering vid startknapp blir grön i
  objektsbilden om signalen är sann.
</attr>
<attr> RefAuto 	
  Objektets ingång för den analoga styrreferensen som gäller i automatik mod.
</attr>
<attr> RefLoc 	
  Objektets ingång för den analoga styrreferensen som gäller i lokal mod.
</attr>
<attr> Order 	
  Objektets digitala utgång (starta driften).
</attr>
<attr> OutRef 	
  Objektets analoga referensutgång. Tvingas till noll om Order utgången är 0. 
</attr>
<attr> AutoMode 	
  Utgång sann om objektets fjärrstyrning är i automatik mod, falsk betyder manuell mod.
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>

</class>

####################################################################################

<class> CompModeAM
 @Version
 @Author je
 @summary Auto/Man mod, 1 analog referensutgång
 Mod objektet CompModeAM hanterar en manöverbild med Auto/Man knappar för att styra
 en drift med en analog styrsignal.
 
 Körsätt som kan konfigureras:
 
 - Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden
 - Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet

   Lokal mod styrning hanteras INTE av detta objekt förutom indikering i bilder.
   Ett larm kan också genereras när lokal mod aktiveras "utifrån".   

   Används i objekten BaseCValve (reglerventil), BaseCDamper(spjällventil) och
   BasePropValve (proportionalventil).
   
   Närbesläktat objekt med en "extra" digital signal och start/stopp knappar heter
   BaseCompModeA.
 
 @b Objektsbild
 @image orm_compmodeam_og.png

 Knappar Auto/Man växlar mod och inmatningsfältets värde används i manuell mod
 som referenssignal för driften i fjärrstyrning.

 - Knappar Man/Auto väljer mod vid fjärrstyrning.

 - Lokal mod indikatorn visar gult när lokal styrning pågår. Indikatorn visas inte i bilden
   om attribut OpNoLocal är 1.   

 - När auto/man mod inte styrs/används i objektet visas inga auto/man knappar i bilden dvs
   när attribut OpOnlyAuto är 1.

 - Inmatningsfältet OpRefMan är önskad referensutsignal i manuell mod. Inmatningsvärden
   begränsas av attributen OpMinRefMan och OpMaxRefMan.
 

 @h1 Konfigurering
 Mod objekt CompModeAM hanterar en analog orderutgång som kan konfigureras på
 flertalet sätt och innehåller funktioner:

 -Mjuk övergång när man växlar över från auto till manuellt.
 -Larm när objektet är i lokal mod. Kan konfigureras bort.
 
 Analoga referensutgång styrs av tre olika körsätt:
 
 -1 Ingång RefAuto från funktionsobjektet och intern auto/man mod.
 -2 Ingång RefAuto från funktionsobjektet och extern auto/man mod.
 -3 Manuell referens från bilden i manuell mod.

  OBS! lokal mod ingången används endast för indikering i bild, dvs påverkar
  inte andra moder eller refernsutgången på något sätt.

 @b Styrning av mod från objektsbild
 @image orm_compmodeam_og.png
 
 Bilden ovan visar en konfiguration där objektets alla funktioner används. Operatören
 väljer manuell eller auto mod via knapparna Man/Auto. I auto styrs utgången av
 funktionsobjektets analog ingång RefAuto.
 
 OBS! Mod Auto eller manuell har ingen backup och därför är "defult mod" vid PLC start alltid
 auto mod.

 @b Styrning av mod från PLC programmet och ingen manuell styrning från bild 
 @image orm_compmodedam_extern_only.gif

 Bilden visar när både auto/man mod och referensbörvärde i manuell mod styrs utanför
 objektet. Denna konfiguration fås genom att sätta OpAutoOnly till 1. Styrning av
 utgången sker endast via AutoRef ingången. Denna konfiguration används främst i
 ventilobjekt typ BaseCValve när man inte vill ha auto/man styrning i objektet.
 
 Attributet OpNoLocal är 0 och därför visas den lokala indikatorn i bilden.
   
 @b Felhantering
 Ingen felhantering förutom B-larm om lokal mod är aktiverad på ingång LocalMode.

 @b Plc kod
 För PLC programmering används funktionsobjektet CompModeAMFo.
 @image orm_compmodeamfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 @classlink BaseCompModeA basecomponent_compmodea.html 
 @classlink BaseCValve basecomponent_basecvalve.html 
 @classlink BaseCDamper basecomponent_basecdamper.html 
 @classlink BasePropValve basecomponent_basepropvalve.html    
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande en objektsbild för styrning av en analog utgång i flera moder.
</attr>

<attr> OpAuto
  Påverkas normalt via knapp Auto i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> OpMan
  Påverkas normalt via knapp Man i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
</attr>
<attr> ManMode
  Är hög när aktuell mod är manuell, styrs normalt av funktionsobjektet och knapp i bild. OBS att
  attributet inte har någon backup vilket innebär vid PLC start att ManMode är 0, dvs auto mod
  råder.
</attr>
<attr> LocalMode
  Påverkas via ingång LocalMode i funktionsobjektet och används endast för statusvisning i bild.
</attr>
<attr> OpAutoOnly
  Konfiguerar funktionsobjektet att inte ta hand om auto/man mod. Knappar i bild tas bort. 
</attr>
<attr> OpUpdateManRef
  Konfiguerar att uppdatering OpRefMan görs i automtik, dvs OpRefMan skrivs över av PLC programmet
  i automatik med värdet på RefAuto. Detta gör att det blir en mjuk övergång på OutRef när man går
  från auto till man mod.
</attr>
<attr> OpNoLocal
  Konfiguerar funktionsobjektet att inte visa lokal mod indikeringen i bild.
</attr>
<attr> OpRefMan
  Referens i manuell mod som kan ändras av operatör i bilden. Uppdateras automatiskt av
  autoreferensen i automatik om OpUpdateManRef är 1.
</attr>
<attr> OpMinRefMan
  Ställer in minsta manuella referensvärde som kan ändras av operatör i bilden.
</attr>
<attr> OpMaxRefMan
  Ställer in största manuella referensvärde som kan ändras av operatör i bilden.
</attr>
<attr> OpDisableLocalAlarm
  Konfiguerar funktionsobjektet att INTE larma för "lokal mod" när lokal mod aktiveras
  via funktionsobjektets ingång LocalMod.
</attr>
<attr> AlarmLocalMode
  Larmtext att driftens lokal mod är aktiverad (B-larm).
</attr>
<attr> IndMode
  Textsträng som visar ett L och M ihop med objektets objektsymbol i bilder, (L)okal, (M)anuell.
  Visas ingen bokstav betyder det att objektet är i auto.
</attr>
<attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
</attr>
</class>

####################################################################################

<class> CompModeAMFo
 @Version
 @Author je
 @summary PLC funktionsobjekt för CompModeAM
 Funktionsobjekt för CompModeAM 
 @image orm_compmodeamfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModeAM
 i planthierarkin.
 
 Objektet tar hand om mod hantering auto/man och övervakar drift med en analog utgång.

 @b Se även
<attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Objekt innehållande styrning av en analog utgång i auto eller manuell mod samt en
  objektsbild för manövrering och statusvisning. 
</attr>

<attr> RefAuto 	
  Objektets ingång för den analoga styrreferensen som gäller i automatik mod.
</attr>
<attr> LocalMode 	
  Indikator lokal i tillhörande objektsbild visar gult om ingången är hög.
</attr>
<attr> OutRef 	
  Objektets analoga referensutgång. 
</attr>
<attr> PlcConnect
  Referens till objektet i planthierarkin.
</attr>

</class>

###############################################################################

<class> CompPid
@Version
@Author hw/je
@Summary PID regulator. 
@b PID regulator. 
@image orm_en1-141.gif

@b Objektsbild regulator
@image orm_pid_og.png

Inmatningsfältet Set (gröna) används för att manuellt ändra börvärdet för regulatorn. Detta gäller
under förutsättningen att INGET mod objekt är associerat (skrivs över).

 - Knapp Mode öppnar en bild för ett associerat modeobjekt CompModePID där man ändrar regulatorns
   mod mm.

@b Objektsbild för regulatorns modobjekt
@image orm_mode_og.png

@h1 Bra att veta
I normalfallet används Pidobjekt tillsammans med ett Modeobjekt. Gäller även
CompPID och CompMode.
Modeobjektet spelar då rollen av interface till Pidobjektet. Från Modeobjektet är 
det möjligt att välja MANUAL, AUTO och CASCADE: 
 
   - Manual mod är en mod när regulatorns utsignal är tvångsstyrd till önskat 
     värde.   
   - Auto mod är en mod när regulatorns arbetar med internt börvärde från 
     modobjektet.
   
   - Cascade mod (kaskad) är en mod där regulatorns arbetar med ett externt
     börvärde, dvs modobjektets ingång XSetVal [XSV].
    
@h1 Regulatorn

Algoritmens proportionella term respektive derivata term kan baseras antingen på 
ärvärdet eller reglerfelet. 
PidAlg anger fördelningen.
Exempel: PI+D innebär att P-delen och I-delen verkar på regleravvikelsen, medan 
D-delen bara påverkas av ärvärdesförändringar. En stegändring av börvärdet ger 
inte någon spik från D-delen, utan bara en stegändring från P-delen, och sedan 
en integrering av reglerfelet.
I+P innebär på samma sätt att P-delen bara påverkas av ärvärdesförändringar. Vid 
en stegändring av börvärdet får vi inget steg på utgången. Utstyrningen ändras 
bara genom att det större reglerfelet börjar integrera utsignalen.

Vid P- och PD-algoritm används en absolut algoritm. Utsignalen kan då alltså inte 
ligga stabilt skilt från noll utan regleravvikelse, annat än om man använder en 
framkopplingssignal.
Vid alla algoritmer med I-del baseras hela tiden förändringar i utsignalen på 
förändringar i insignalerna. Man kan fortfarande stänga av integrereringen med 
en insignal till objektet.
 
Pid-objektet har två utgångar som båda kan användas som styrsignal. Vilken som 
används i det enskilda fallet beror på hur regleringen är ordnad: 
OUT (attributet OutVal ) innehåller ett värde som kan komma från regleralgoritmen,
från operatören i läge  MANUAL eller vara ett s.k. tvångsstyrningsvärde.
Signalen används för t ex varvtalsutstyrning, eller som börvärdesposition till 
ett ställdon.
OC (attributet OutChange ) anger hur ställdonet ska ändras mellan två successiva 
exekveringar.
I detta fall talar man om algoritmens 'velocity' eller 'incremental form'.
Detta är användbart för ställdon som bara har öka- och minska-signaler, utan 
lägesåterföring. Används då normalt med INC3P-objektet, som integrerar 
förändringarna och omvandlar till tid för öka resp minska.
OutChange fortsätter att ge signal, även OutVal bottnat i MinOut eller MaxOut.

Derivata termen filtreras internt med 1:a ordningens filter. Filtreringen kopplas 
bort genom att sätta DerGain = 0, men regleringen blir då ofta mycket störkänslig.
Normalt är DerGain ca 3, vilket innebär att utsignalen påverkas momentant 3 ggr 
så mycket av derivatadelen som av P-delen. Derivatatillskottet smetas sedan ut 
över tiden, så att det totala integrerade tillskottet blir lika stort som den 
skulle bli utan filtrering.
 
En framkopplingssignal, Bias, kan inkluderas i algoritmen genom en ingångssignal 
till objektet.
 
Utvärdet, OutVal, begränsas till intervallet { MinOut, MaxOut }. Det innebär att 
man kan tappa det stabila läget vid en orolig reglering, speciellt vid inkopplad 
D-del.
Exempel: Vi har en ganska orolig flödesreglering (utsignal 0-100 %) och reglerar 
nära maxvarvet för pumpen. Vi behöver styra ut i snitt 98 % för att nå önskat 
börvärde. Utsignalen fladdrar ca +- 5 % pga störningar. Om MaxOut är 100 %, så 
innebär det att regulatorn bottnar regelbundet. Utsignalen kommer då att svänga 
mellan 90 och 100 % med en medelutsignal på ca 95%, och vi når inte önskat 
börvärde.
Lösning: Sätt MinOut och MaxOut till -10 % resp 110 %. Utsignalen kommer att 
svänga mellan 93 och 103% med ett medel på 98%, och vi uppnår önskat börvärde. 
Utsignalen får sedan begränsas till 0 - 100 % utanför PID-regulatorn.


Regulatorn har stötfri omkoppling AUTO / MANUAL och efter annan tvångsstyrning av 
regulatorn.
Dock ej vid P- eller PD-reglering.
 
EXEMPEL 1

Exempelkurvor för att visa P- och Delens inverkan vid olika typinställningar. 
Insignal steg och ramp.

@image orm_pid_3.png

Övre delen:
Brun kurva.  Ärvärde (samma som P-del från regulatorn). Steg samt ramp.
Lila kurva.  Utsignal från PD med Kp = 1, DerTime = 10s, DerGain = 3.

Nedre delen -  D-del från regulatorn.
Grön kurva.  DerTime = 10s. Ingen filtrering (DerGain = 0). Notera spiken vid 
             stegändringen.
Gul kurva.   DerTime = 10s. Filtrerad D-del DerGain = 3.
Blå kurva.   DerTime = 20s. Filtrerad D-del DerGain = 3.


EXEMPEL 2 för att visa skillnaden mellan PID, PI+D och I+PD vid återkopplat 
system och stegförändring av börvärdet:

@image orm_pid_4.png

I+PD (uppe till vänster) börjar sakta integrera upp styrsignalen vid stegändring.
PI+D (uppe till höger) ger ett stegsvar som medför att vi får en snabbare 
     reglering till nya börvärdet.
PID  (nere till vänster) ger en kort spik vid stegändringen. Denna regulator har 
     MaxOut = 500%
PID  (nere till höger) är identisk med föregående, men har MaxOut = 100%, vilket 
     ger "bakvänt" resultat. P ger ca 30 % upp, D ger en spik på ca 90 % Totalt ca 
     155 % Regulatorn bottnar i 100 % utsignal, och när vi sedan tar bort D-spiken 
     på 90 % får regulatorn börja om från 10 % utsignal.


@h1 Exempel

@h2 Flödesreglering 
Flödesreglering med varvtalsreglerad pump; se figur nedan (Speed Control of 
a Pump). 

- Börvärde sätts från externt optimeringsprogram (Av-signalen OptFlow) t.ex 
  1 gång / 10 min eller direkt av operatör. 
- Börja med styrsignalen 0 vid pumpstart. 
 
@image orm_en1-151.png
Speed Control of a Pump 

En principlösning för styrning av den varvtalsreglerade pumpen visas i figuren
nedan (Configuration of Speed Control of a Pump) 

 
@image orm_en1-152.gif
Configuration of Speed Control of a Pump 

Mode-objektets attribut modifieras enligt följande: 
@image orm_en1-153.gif
 
Pid-objektets attribut modifieras enligt följande: 
@image orm_en1-154.gif
 
Insignalen på fo1-ingången tillsammans med OpMod-attributet i Mode-objektet 
bestämer aktuellt driftfall. 

@b OpMod = MANUAL (=1)
  Då Mode-objektets for-utgång blir TRUE tvingas Pid-objekt utgång
  anta värdet på FOV-ingången.

  Vid ändring av driftläge, AUTO --> MANUAL, innehåller ForcVal styr-
  signalens ( OutVal ) senaste värde. Detta är ett bra värde att starta
  manuella ändringar utifrån.

  I detta driftläge kan operatören ändra ForcVal liksom börvärdet SetVal.
  MinOut och MaxOut, i Pid-objektet, utgör ingen begränsning i läge
  MANUAL. 

@b OpMod = AUTO (=2)
  Operatören sätter flödesbörvärdet SetVal. Värdet ska ligga i intervallet
  MinSet till MaxSet. Optimeringsbörvärdet XSetVal ignoreras.

  Regulatorns styrsignal, OutVal varierar i intervallet MinOut till
  MaxOut.

  Mode-objektet avläser Pid-objektets OutVal och lagrar värdet i
  utgången ForcVal så länge AUTO gäller. 

@b OpMod = CASCADE (=4)
  Det externa optimeringsbörvärdet i XSetVal kopieras över till SetVal.
  Pid-objektet reglerar mot detta börvärde.

@b Force1 = 1 PUMP STOP
  Oberoende av värdet på OpMod tvångsstyrs regulatorns styrsignal till
  ForcVal = XForcVal (=0), dvs MinOut och MaxOut utgör ingen
  begrgänsning vid tvångsstyrning.

@h2 Alternativa regulatorer med följning 
 
@image orm_en1-155.png
Shunt Control 

Genom shuntreglering över värmeväxlaren, skall TT1-temperaturen hållas 
konstant i sekundärnätet. TT2-temperaturen på returflödet till pannan ('BOILER') 
får dock inte understiga daggpunkttemperaturen vilket skulle kunna ske vid stora 
effektuttag. 

Vid låg primärtemperatur väljs TT2-reglering. Då driftsförhållanden medger sker 
återgång till TT1-reglering. 

I läge MANUAL sker styrningen med TT1-regulatorn. TIC2 får ej läggas i MANUAL. 
Se figur nedan (PLC program with Alternative Controllers). 

Inställningar 

... i Mode-objektet TIC1M har valts: 

- AccMod = 3 , dvs AUTO / MANUAL är båda tillåtna. 
- OpMod = AUTO, betyder att operatören sätter SetVal
        = MANUAL, betyder att operatören sätter utsignalen ForcVal 

... i Pid-objektet TIC1 har valts: 

- Inverse = TRUE, dvs. låg TT1-temperatur medför ökat flöde genom värmeväxlaren. 

... i Mode-objektet TIC2M har valts: 

- AccMod = 2 , dvs. endast AUTO 
- Konstruktören sätter gränsvärdet, dvs minvärdet av TT2, i SetVal 

... i Pid-objektet TIC2 har valts: 

- Inverse = FALSE, dvs. omvänt styringrepp, vid låga TT2-temperaturer minskar 
  flödet genom värmeväxlaren, by-pass flödet ökar. 
  
@image orm_en1-156.gif
PLC program with Alternative Controllers 

Driftfall: 

- Normal drift. TIC1 i AUTO. TIC2 följer i tvångsstyrning. 
- TT2 låg. TIC1 väljer i tvångsstyrning. 
- TIC1M i MANUELL. TIC1 ställer ut operatörens värde från TICM. ForcVal . 
- TIC2 följer i tvångsstyrning. 
- TIC2 återgår till AUTO då TT2 går under gränsen 
- Flödet genom värmeväxlaren är tillräckligt för att TT1-temperaturen ska gå 
  över börvärdet. Växla till TT1-reglering, dvs TIC1 styr shuntventilen. 

@h2 Kaskad reglering 

Temperaturreglering i ugn med två separata bränsleflödesloopar, med undantag 
för förbränningsluftregleringen, visas i figuren nedan. TT avser en temperatur 
transmitter, FT flödes transmittrar och FIC flödesregulatorer. TIC är en 
temperatur regulator 
 
@image orm_en1-157.png
Block Diagram for Temperature Control 

Alla Pid-objekt har Inverse satt till TRUE. Lösningen bör kompletteras med 
tvångsstyrning av TIC1M till medelflöde då ingen FICx ligger i kaskad. En 
realiseringen visas i figuren nedan (Traditional Cascade Configuration). 

@image orm_en1-158.gif 
Traditional Cascade Configuration 

@h2 Gemensam eller individuell styrning av flera reglerloopar 
I figuren nedan (Two Levels with Mode Objects in a Control Loop) delar två 
reglerloopar en gemensamma mod-instans för synkront uppträdande i AUTO och 
MANUAL. Men varje enskild loop kan också styras individuellt från separata 
Mode-objekt med internt börvärde och egen manuell utsignal. Den individuella 
styrningen överrider den gemensamma. 

@image orm_en1-159.gif 
Two Levels with Mode Objects in a Control Loop 

@h2 Kvotreglering ('ratio control') 
Figuren nedan (Addition of a Reagent) visar tillsats av en reagens. 
Blandningsförhållandet ska hållas konstant oberoende av FT2-flödet. FT är 
flödestransmittern och FIC flödesregulatorn. 

@image orm_en1-160.png 
Addition of a Reagent 

En realisering visas i figuren nedan (Ratio Control). Regleringen kan ske i 
AUTO (= operatören ger kvotbörvärde) eller MANUAL ( = operatören ger själv 
utsignalens storlek). Kvotärvärdet bör kontrollers för att förhindra division 
med noll. 
 
@image orm_en1-161.gif
Ratio Control 

@b Plc kod
För PLC programmering används funktionsobjektet CompPid_Fo.
 @image orm_comppid_fo_fo.gif
 
Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
@b Se även
<attr>ProcVal 
Ärvärdessignal som kopplas in till PLC funktionsobjektet (PROCess VALue). 
</attr>

<attr>SetVal 
Börvärdessignal som kopplas in till PLC funktionsobjektet (SETpoint VALue). Denna
ingång hämtar oftast signalen från en utgång på det associerade Mode-objektet. 
</attr>

<attr>Bias 
Framkopplingsvärde ( 'feed forward value') som kopplas in till PLC funktionsobjektet.
Attributet kan ändras från Pid - objektets MERbild. 
</attr>

<attr>ForcVal 
Tvångsstyrningsvärdet som kopplas in till PLC funktionsobjektet. Då Force är TRUE sätts
OutVal = ForcVal . Denna ingång hämtar oftast signalen från en utgång på det
associerade Mode-objektet.
</attr>

<attr>Force 
Tvingaorder som kopplas in till PLC funktionsobjektet.

Anger om något av alternativen tvångsstyrning / MANUAL gäller eller inte. 
FALSE betyder att inget av dessa alternativ är förhanden; TRUE innebär att 
antingen tvångsstyrning eller MANUAL valts. Denna ingång hämtar oftast
signalen från en utgång på det associerade Mode-objektet.
</attr>

<attr>IntOff 
Avstängning integreringsorder som kopplas in till PLC funktionsobjektet.

Anger om integrationen kopplats bort eller inte. FALSE betyder att 
integrationstermen ska vara med; TRUE innebär att integrationen kopplats 
bort. Attributet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutVal 
Utgången ifrån PLC funktionsobjektet.

Regulatorns styrsignal. Värdet baseras på algoritmens 'positional form', från 
operatören i läge MANUAL eller på ett s.k. tvångsstyrningsvärde. 
</attr>

<attr>OutChange 
Utgång ifrån PLC funktionsobjektet.

Regulatorns styrsignal baserad på 'incremental form'. 

Attributet avser styrsignalsförändringen mellan två konsekutiva exekveringar; 
dvs. OutVal t - OutVal t-1 . 
</attr>

<attr>ControlDiff 
Differensutsignal är/börvärde ifrån PLC funktionsobjektet.

Reglerfelet (= ProcVal - SetVal ). 
</attr>

<attr>EndMin
Utgång minvärde aktiverat ifrån PLC funktionsobjektet.

Om beräknat värde på OutVal inte tillhör intervallet { MinOut , MaxOut } ska 
begränsning ske till motsvarande intervallgräns. Attributet anger om sådan 
begränsning skett vid den senaste exekveringen eller inte. 

Om begränsning görs mot 

-- MinOut , ska EndMin sättas TRUE
-- MaxOut , ska EndMax sättas TRUE 

annars är de FALSE. 

EndMin / EndMax kan endast sättas i driftläge AUTO och CASCADE. Se 
också EndHys nedan. 
</attr>

<attr>EndMax 
Utgång maxvärde aktiverat ifrån PLC funktionsobjektet.

Se EndMin
</attr>

<attr>PidAlg 
Det finns åtskilliga diskreta variationer av PID algoritmen. PidAlg anger det 
aktuella valet. Följande realiseringar finns att välja mellan: 

1 -- I I-regulator. Regulator med endast I-verkan.
Gain används inte.

3 -- I + P Integrerande regulator med proportionell regler-
verkan. P-termen baseras på ärvärdet ProcVal.

6 -- P P-regulator. Ger endast proportionell reglerverkan.

7 -- PI PI-regulator. Regulator som ger proportionell och
integrerande reglerverkan.
P-termen baseras på reglerfelet ControlDiff.

11 -- I + PD Integrerande regulator med proportionell deriverande
reglerverkan.
Både P- och D-termen baseras på ärvärdet ProcVal.

14 -- P + D Proportionell regulator med deriverande reglerverkan.
P baseras på reglerfelet, D på ärvärdet.

15 -- PI + D Proportionell integrerande regulator med deriverande
reglerverkan. P-termen baseras på reglerfelet ControlDiff,
D på ärvärdet value.

30 -- PD PD-regulator. Regulator som ger proportionell och
deriverande reglerverkan.
Både P- och D-termen baseras på reglerfelet.

31 -- PID PID-regulator. Regulator som ger proportionell
integrerande och deriverande reglerverkan. Både P- och
D-termen baseras på reglerfelet.
</attr>

<attr>Gain 
Proportionalitetsfaktorn. Anger förstärkningen; = 0.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>IntTime 
Anger, i sekunder, integrationstiden.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>DerTime 
Anger deriveringstiden i sekunder.

Normalt gäller att DerTime är större än ScanTime och
1.0 = DerGain <  
</attr>

<attr>DerGain 
Derivatatermens bidrag till styrsignalen kan filteraras i ett 1:a ordningens filter. 
Attributet definierar filtret. Om,
1.0 = DerGain <  , annars ingen filtrering 

DerGain är normalt i storleksordningen 3 till 4. 

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>Inverse 
Anger om reglerverkan ska ske inverterat eller inte. FALSE betyder att ett vid 
oförändrat börvärde spontant växande ärvärde möts av en ökande styrsignal, 
dvs. omvänd reglerverkan. TRUE är normalfallet, då ett spontant ökande 
ärvärde möts med en minskande styrsignal. 
</attr>

<attr>BiasGain 
Anger framkopplingens förstärkning; faktorn får vara negativ.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>MinOut
I driftläge AUTO och CASCADE ska den utställda styrsignlaen OutVal vara i 
intervallet { MinOut , MaxOut }. Flaggorna EndMin / EndMax används för att 
signalera då begränsning sker.
Om OutVal är större än MaxOut eller mindre än MinOut , begränsas OutVal 
till värdet av motsvarande intervallgräns.
Om MinOut = MaxOut sker ingen begränsning. 
</attr>

<attr>MaxOut 
Se MinOut
</attr>

<attr>ScanTime 
Programcykeltid i sekunder. Initieras automatiskt vid kompilering. 
</attr>

<attr>AccGain
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Gain resp. IntTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccInt
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Gain resp. IntTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccDer
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
DerTime. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccDGain 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
DerGain . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>


<attr>AccBias
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Bias. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccBGain 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
BiasGain . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinGain
Minsta tillåtna värde vid operatörsändring av Gain. 
</attr>

<attr>MaxGain 
Största tillåtna värde vid operatörsändring av Gain. 
</attr>

<attr>MinInt
Minsta tillåtna värde vid operatörsändring av IntTim. 
</attr>

<attr>MaxInt
Största tillåtna värde vid operatörsändring av IntTim. 
</attr>

<attr>MinDer
Minsta tillåtna värde vid operatörsändring av DerTim . 
</attr>

<attr>MaxDer 
Största tillåtna värde vid operatörsändring av DerTim . 
</attr>

<attr>MinBias 
Minsta tillåtna värde vid operatörsändring av Gain . 
</attr>

<attr>MaxBias
Största tillåtna värde vid operatörsändring av Gain . 
</attr>

<attr>MinBGain
Minsta tillåtna värde vid operatörsändring av BiasGain . 
</attr>

<attr>MaxBGain 
Största tillåtna värde vid operatörsändring av BiasGain . 
</attr>

<attr>MinDMaxDGain 
Minsta och största tillåtna värde vid operatörsändring av DerGain . 
</attr>

<attr>SetMinShow
Skalområdets nedre gräns vid presentation av ProcVal och SetVal i 
Pid-objektets objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>SetMaxShow 
Skalområdets övre gräns vid presentation av ProcVal och SetVal i 
Pid-objektets objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutMinShow
Skalområdets nedre gräns vid presentation av OutVal i Pid-objektets 
objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutMaxShow 
Skalområdets övre gräns vid presentation av OutVal i Pid-objektets 
objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>SetEngUnit 
Anger ingenjörsenheten på SetMinShow / SetMaxShow , t.ex. meter. Används 
i Pid-objektets objektbild. 
</attr>

<attr>OutEngUnit 
Anger ingenjörsenheten på OutMinShow / OutMaxShow , t.ex. %. Används i 
Pid-objektets objektbild. 
</attr>

<attr>ModeObjDid 
Anger fullständigt namn på det med Pid-objektet associerade Mode-objektet. 
Attributet gör det möjligt att via knapp i Pid-objektets objektbild starta 
objektbilden för det associerade Mode-objektet. 
</attr>

<attr>EndHys 
Anger hysteresen på MinOut och MaxOut i samband med manövreringen av 
EndMin / EndMax flaggorna. 
</attr>
 
<attr>FiltDer 
Filtrerad derivata sparas till nästa exekevering. 
</attr>

<attr>OpMod
OpMod = MANUAL (=1)
Då Mode-objektets for-utgång blir TRUE tvingas Pid-objekt utgång
anta värdet på FOV-ingången.
Vid ändring av driftläge, AUTO --> MANUAL, innehåller ForcVal styr-
signalens ( OutVal ) senaste värde. Detta är ett bra värde att starta
manuella ändringar utifrån.
I detta driftläge kan operatören ändra ForcVal liksom börvärdet SetVal.
MinOut och MaxOut, i Pid-objektet, utgör ingen begränsning i läge
MANUAL. 

OpMod = AUTO (=2)
Operatören sätter flödesbörvärdet SetVal. Värdet ska ligga i intervallet
MinSet till MaxSet. Optimeringsbörvärdet XSetVal ignoreras.
Regulatorns styrsignal, OutVal varierar i intervallet MinOut till
MaxOut.
Mode-objektet avläser Pid-objektets OutVal och lagrar värdet i
utgången ForcVal så länge AUTO gäller. 

OpMod = CASCADE (=4)
Det externa optimeringsbörvärdet i XSetVal kopieras över till SetVal.
Pid-objektet reglerar mot detta börvärde.

Force1 = 1 PUMP STOP
Oberoende av värdet på OpMod tvångsstyrs regulatorns styrsignal till
ForcVal = XForcVal (=0), dvs MinOut och MaxOut utgör ingen
begrgänsning vid tvångsstyrning.
</attr>

<attr> PlcConnect
Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
</attr>
</class>

#########################################################################

<class> CompPID_Fo
@Version
@Author hw/je
@summary PLC funktionsobjekt för CompPID
Funktionsobjekt för CompPID 
@image orm_comppid_fo_fo.gif

Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompPID i planthierarkin.

@b Se även
<attr>ProcVal 
Ärvärdet (PROCess VALue). 
</attr>

<attr>SetVal 
Börvärdet (SETpoint VALue). Ingången kopplas ofta till motsvarande utgång 
på det associerade Mode-objektet. 
</attr>

<attr>Bias 
Framkopplingsvärdet ( 'feed forward value'). Attributet kan ändras från Pid - 
objektets MERbild. 
</attr>

<attr>ForcVal 
Tvångsstyrningsvärdet. Då Force är TRUE sätts OutVal = ForcVal . Ingången 
kopplas ofta till motsvarande utgång på det associerade Mode-objektet. 
</attr>

<attr>Force 
Anger om något av alternativen tvångsstyrning / MANUAL gäller eller inte. 
FALSE betyder att inget av dessa alternativ är förhanden; TRUE innebär att 
antingen tvångsstyrning eller MANUAL valts. Ingången kopplas ofta till 
motsvarande utgång på det associerade Mode-objektet. 
</attr>

<attr>IntOff 
Anger om integrationen kopplats bort eller inte. FALSE betyder att 
integrationstermen ska vara med; TRUE innebär att integrationen kopplats 
bort. Attributet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutVal 
Regulatorns styrsignal. Värdet baseras på algoritmens 'positional form', från 
operatören i läge MANUAL eller på ett s.k. tvångsstyrningsvärde. 
</attr>

<attr>OutChange 
Regulatorns styrsignal baserad på 'incremental form'. 

Attributet avser styrsignalsförändringen mellan två konsekutiva exekveringar; 
dvs. OutVal t - OutVal t-1 . 
</attr>

<attr>ControlDiff 
Reglerfelet (= ProcVal - SetVal ). 
</attr>

<attr>EndMin
Om beräknat värde på OutVal inte tillhör intervallet { MinOut , MaxOut } ska 
begränsning ske till motsvarande intervallgräns. Attributet anger om sådan 
begränsning skett vid den senaste exekveringen eller inte. 

Om begränsning görs mot 

-- MinOut , ska EndMin sättas TRUE
-- MaxOut , ska EndMax sättas TRUE 

annars är de FALSE. 

EndMin / EndMax kan endast sättas i driftläge AUTO och CASCADE. Se 
också EndHys nedan. 
</attr>

<attr>EndMax 
Se EndMin
</attr>

<attr> PlcConnect
Referens till objektet i planthierarkin.
</attr>

</class>

#####################################################################

<class> CompModePID
@Version
@Author hw/je
@Summary Val av reglermod för PID regulator
@b Mode pid-regulator
Hanterar val av reglermod (MANUAL / AUTO / CASCADE) och s.k. 
tvångsstyrning åt Pid-objekt. 
@image orm_en1-121.gif

Följande reglermoder finns: 

MANUAL  -- då operatören själv sätter Pid-objektets styrsignal. 
AUTO    -- då operatören väljer börsvärde och Pid-objektet
           beräknar styrsignal. 
CASCADE -- utsignalen från ett objekt, t.ex. Pid-objekt, används som 
           börvärde av det med Mode-objektet associerade Pid-objektet. 
 

Tvångsstyrning innebär att Pid objektets OutVal baseras på Mode objektets 
attribut XForceVal , inte på PID-algoritmen.

Pid-objektet har två utgångar som båda kan användas som styrsignal. Vilken 
som används i det enskilda fallet beror på hur regleringen är ordnad: 

OUT (attributet OutVal ) innehåller ett värde som kan komma från 
evalueringen av PID-algoritmens 'positional form', från operatören i läge 
MANUAL eller vara ett s.k. tvångsstyrningsvärde. Kunskapen om var 
ställdonet ska stå ligger i detta fall på regulatorsidan eftersom hela värdet 
används. 
OC (attributet OutChange ) anger hur ställdonet ska ändras mellan två 
successiva programcykler. I detta fall talar man om PID-algoritmens 'velocity' 
eller 'incremental form'. 

@b Objektsbild
 @image orm_mode_og.png

@b Plc kod
För PLC programmering används funktionsobjektet CompModePid.
@image orm_compmodepid_fo_fo.gif
 
Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
@b Se även
<attr>XSetVal 
Externt börvärde som kopplas in till PLC funktionsobjektet (kaskadbörvärdet)
</attr>

<attr>ProcVal 
Ärvärde som kopplas in till PLC funktionsobjektet
</attr>

<attr>XForcVal 
Externt tvångsstyrningsvärde som kopplas in till PLC funktionsobjektet.
</attr>

<attr>Forc1 
Anger om ovillkorlig tvångsstyrning valts eller inte. Insignal som kopplas till
PLC funktionsobjektet.
</attr>

<attr>Forc2 
Anger, i läge AUTO och CASCADE, om tvångsstyrning valts eller inte. Insignal som
kopplas till PLC funktionsobjektet.
</attr>

<attr>OutVal 
Återkopplingssignal som kopplas in till PLC funktionsobjektet.

Då reglerkretsen sätts i läge MANUAL skulle processen få en större eller 
mindre stöt ('bump') om värdet på ForcVal inledningsvis avvek från det 
aktuella ärvärdet, ProcVal . 

För att undvika detta gäller följande: Vid omkoppling till läge MANUAL 
initieras internt FOV-utgången med värdet av OutVal . Alltså återstår att se till 
att värdet på OutVal ger 'bumpless transfer'. Detta brukar lösas med en analog 
återkoppling från Pid-objektets OUT -utgång. 
</attr>

<attr>SetVal 
Börvärdes utgång ifrån PLC funktionsobjektet.

Anger, i läge AUTO och CASCADE, aktuellt börvärde. Attributet kan i läge 

- MANUAL och AUTO, ändras från Mode objektets objektbild 

- CASCADE, internt tilldelas värdet av XSetVal . 

Ofta ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
</attr>

<attr>ForcVal 
Tvångstyrningsvärde, utgång ifrån PLC funktionsobjektet.

Normalt ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
Värdet på Pid-objektets utgångar OUT och OC kommer att baseras på ForcVal 
i följande fall: 

ovillkorlig tvångsstyrning, dvs Forc1 är TRUE och ForceVal = XForceVal 
villkorlig (= reglermod är AUTO eller CASCADE) tvångsstyrning då Force2 = 
TRUE och ForceVal = XForceVal 
OpMod = MANUAL. ForcVal sätts av operatören, t.ex från Mode-objektets 
objektbild. 
</attr>

<attr>Force 
Reglermod i tvingaläge, utgång ifrån PLC funktionsobjektet.

Normalt ansluts utgången till motsvarande ingång på efterföljande Pid - objekt. 

Attributet anger för Pid-objektet om värdena till utgångarna OUT och OC ska 
hämtas från algoritmen eller inte. FALSE betyder att AUTO eller CASCADE 
gäller, dvs. värdena baseras på algoritmen. TRUE innebär att tvångskörning 
eller MANUAL gäller och att värdena istället ska bygga på FOV-utgångens 
värde. 
</attr>

<attr>AutMode 
Reglermod i automatik, utgång ifrån PLC funktionsobjektet. 

Anger om reglermod AUTO valts eller inte. FALSE betyder att annan mod 
gäller; TRUE innebär att AUTO valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr>CascMod 
Reglermod i kakskamod, utgång ifrån PLC funktionsobjektet.

Anger om reglermod CASCADE valts eller inte. FALSE betyder att annan mod 
gäller; TRUE innebär att CASCADE valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr>ManMode 
Anger om reglermod MANUELL valts eller inte. FALSK betyder att annan mod 
gäller; SANT innebär att MANUELL valts. Attributet används endast som information.
</attr>

<attr>OpMod 
Anger vald reglermod. Attributet kan ändras från Mode-objektets objektbild. 

= 1 MANUAL. Operatören väljer regulatorns styrsignal. Regulatorns
styrsignal tvångsstyrs till angivet värde i ForceVal.

MinOut och MaxOut definierar styrsignalens tillåtna intervall.

= 2 AUTO. Operatören väljer börvärde, Regulatorns börvärde = 
SetVal och styrsignalen räknar regulatorn fram.

MinSet och MaxSet definierar böbrvärdets tillåtna intervall.

= 4 CASCADE. Som i AUTO men regulatorns börvärde = XSetVal. 
</attr>

<attr>AccMod 
Anger operatörens behörighet att ändra värde på OpMod . Följande 
behörigheter/värden är möjliga: 

1 -- Bara MANUAL
2 -- Bara AUTO   
3 -- MANUAL / AUTO 
4 -- Bara CASCADE
5 -- CASCADE / MANUAL
6 -- CASCADE / AUTO
7 -- MANUAL / AUTO / CASCADE
</attr>

<attr>AccOut 
Ej implementerad funktion. Anger operatörens behörighet att ändra ForcVal . 
Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinOut
Minsta tillåtna värde vid operatörsändring av ForcVal . 
I läge MANUAL kan ForcVal ändras från Mode-objektets objektbild. 
</attr>

<attr>MaxOut
Största tillåtna värde vid operatörsändring av ForcVal . 
I läge MANUAL kan ForcVal ändras från Mode-objektets objektbild. 
</attr>

<attr>AccSet 
Ej implementerad funktion. Anger operatörens behörighet att ändra SetVal . 
Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinSet 
Minsta tillåtna värde vid operatörsändring av SetVal . 
I läge MANUAL och AUTO kan SetcVal ändras från Mode-objektets 
objektbild. 
</attr>

<attr>MaxSet 
Största tillåtna värde vid operatörsändring av SetVal . 
I läge MANUAL och AUTO kan SetcVal ändras från Mode-objektets 
objektbild. 
</attr>

<attr>SetMinShow
Undre gräns vid presentation av är-och börvärde i Mode-objektets 
objektbild. Gränserna kan ändras från objektbilden. 
</attr>

<attr>SetMaxShow 
Övre gräns vid presentation av är-och börvärde i Mode-objektets 
objektbild. Gränserna kan ändras från objektbilden. 
</attr>

<attr>OutMinShow
Undre gräns vid presentation av Pid-objektets OutVal i Mode -
objektets objektbild. Gränserna kan ändras från Mode-objektets MERbild. 
</attr>

<attr>OutMaxShow 
Övre gräns vid presentation av Pid-objektets OutVal i Mode -
objektets objektbild. Gränserna kan ändras från Mode-objektets MERbild. 
</attr>

<attr>SetEngUnit 
Anger ingenjörsenheten för SetMinShow / SetMaxShow , t.ex kg. Används i 
Mode-objektets objektbild. 
</attr>

<attr>OutEngUnit 
Anger ingenjörsenheten för OutMinShow / OutMaxShow , t.ex %. Används i 
Mode-objektets objektbild. 
</attr>

<attr>PidObjDid 
Anger fullständigt namn på det med Mode-objektet associerade Pid-objektet. 
Attributet gör det möjligt att via knapp i Mode-objektets objektbild starta 
objektbilden för det associerade Pid-objektet. 
</attr>

<attr> PlcConnect
Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
</attr>

</class>

#########################################################################

<class> CompModePID_Fo
@Version
@Author hw/je
@summary PLC funktionsobjekt för CompModePID
Funktionsobjekt för CompModePID 
@image orm_compmodepid_fo_fo.gif

Skapa ett funktionsobjekt i PLC editorn och koppla till objektet CompModePID i planthierarkin.
 
Objektet tar hand om mod hantering mm för en PID regulator:

 - Reglermod (MANUAL / AUTO / CASCADE) 
 - Tvångsstyrning med avseende på styrsignal 

@b Se även
<attr>XSetVal 
Externt börvärde (= Set point Val ue). Attributet används enbart i läge 
CASCADE och då på så sätt att SetVal = XSetVal . 
</attr>

<attr>ProcVal 
Ärvärde (= Proc ess Val ue). Attributet används i Mode objektets objektbild vid 
visning av ärvärdet. 
</attr>

<attr>XForcVal 
Externt tvångsstyrningsvärde (= Forc ed Val ue). Attributet används enbart vid 
tvångsstyrning (dvs. Force1 eller Force2 är TRUE) och då på så sätt att 
ForceVal = XForceVal . 
</attr>

<attr>Forc1 
Anger om ovillkorlig tvångsstyrning valts eller inte.
</attr>

<attr>Forc2 
Anger, i läge AUTO och CASCADE, om tvångsstyrning valts eller inte.
</attr>

<attr>OutVal 
Då reglerkretsen sätts i läge MANUAL skulle processen få en större eller 
mindre stöt ('bump') om värdet på ForcVal inledningsvis avvek från det 
aktuella ärvärdet, ProcVal . 

För att undvika detta gäller följande: Vid omkoppling till läge MANUAL 
initieras internt FOV-utgången med värdet av OutVal . Alltså återstår att se till 
att värdet på OutVal ger 'bumpless transfer'. Detta brukar lösas med en analog 
återkoppling från Pid-objektets OUT -utgång. 
</attr>

<attr>SetVal 
Anger, i läge AUTO och CASCADE, aktuellt börvärde. Attributet kan i läge 

- MANUAL och AUTO, ändras från Mode objektets objektbild 

- CASCADE, internt tilldelas värdet av XSetVal . 

Ofta ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
</attr>

<attr>ForcVal 
Normalt ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
Värdet på Pid-objektets utgångar OUT och OC kommer att baseras på ForcVal 
i följande fall: 

ovillkorlig tvångsstyrning, dvs Forc1 är TRUE och ForceVal = XForceVal 
villkorlig (= reglermod är AUTO eller CASCADE) tvångsstyrning då Force2 = 
TRUE och ForceVal = XForceVal 
OpMod = MANUAL. ForcVal sätts av operatören, t.ex från Mode-objektets 
objektbild. 
</attr>

<attr>Force 
Normalt ansluts utgången till motsvarande ingång på efterföljande Pid - objekt. 

Attributet anger för Pid-objektet om värdena till utgångarna OUT och OC ska 
hämtas från algoritmen eller inte. FALSE betyder att AUTO eller CASCADE 
gäller, dvs. värdena baseras på algoritmen. TRUE innebär att tvångskörning 
eller MANUAL gäller och att värdena istället ska bygga på FOV-utgångens 
värde. 
</attr>

<attr>AutMode 
Anger om reglermod AUTO valts eller inte. FALSE betyder att annan mod 
gäller; TRUE innebär att AUTO valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr>CascMode 
Anger om reglermod CASCADE valts eller inte. FALSE betyder att annan mod 
gäller; TRUE innebär att CASCADE valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr> PlcConnect
Referens till objektet i planthierarkin.
</attr>

</class>

###############################################################################

 <class> BaseSensor
 @Version
 @Author cs/je
 @b Sensor
 @Summary En analog sensor med övervakning.
 Objekt BaseSensor hanterar övervakningen av en analog sensor med inställningar
 för larmgränser och en tillhörande objektsbild.
 
 Detta objekt/sensor används företrädesvis för sensorer som INTE är av typen
 temp, tryck, flöde eller nivå (dessa typer har egna objekt).
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
 
 Man kan via ingångar Error och Warning i PLC funktionsobjektet styra färgen på
 sensorsymboler att bli röd eller gul.   
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/Sensor. Symbolen kan konfigureras
 med bokstäver i sig som beskriver sensorns mätsignal.
 @image orm_sensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.
    
 @b Objektbild
 @image orm_basesensor_og.png

 @b Exempel på en objektsymbol typ sensor (FO1) i en bild.
 @image orm_base_sensor_objectsymbol.gif

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BaseSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)

 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSensorFo.
 @image orm_basesensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 @classlink BaseTempSensor basecomponent_basetempsensor.html 
 @classlink BaseLevelpSensor basecomponent_baselevelsensor.html 
 @classlink BasePressureSensor basecomponent_basepressuresensor.html 
 @classlink BaseFlowSensor basecomponent_baseflowsensor.html 
 @classlink BasePositSensor basecomponent_basepositsensor.html 
 <attr>Super 
 Superklass, klicka på länk component (till vänster) för mer beskrivning om attribut.
 </attr>
 <attr>Value 
 Analoga Ai ingången för sensorn
 </attr>
 <attr>LimitHH 
 Flera inställningsattribut för larmgräns Hög Hög (A-larm)
 </attr>
 <attr>LimitH 
 Flera inställningsattribut för larmgräns Hög (B-larm)
 </attr>
 <attr>LimitL 
 Flera inställningsattribut för larmgräns Låg (B-larm)
 </attr>
 <attr>LimitLL 
 Flera inställningsattribut för larmgräns Låg Låg (A-larm)
 </attr>
 <attr>IndError 
 Går hög om A-larm är aktivt (HH, LL) eller ingång Error för PLC funktionsobjektet är hög,
 objektsymbol börjar blinka rött
 </attr>
 <attr>IndWarning 
 Går hög om B-larm är aktivt (H, L) eller ingång Warning för PLC funktionsobjektet är hög,
 objektsymbol blir gul (fast).
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning och larmutgångar kopplas bort (1:a) eller inte (0:a). Styrs via ingång
 "dis" på PLC funktionsobjektet.
 </attr>
 <attr>Trend 
 Trendobjekt för den analoga sensor signalen
 </attr>
 <attr>DefTrend 
 Trendobjekt visas enligt trendmetoden, normalt en referens till föregående attribut Trend.
 </attr>
  <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> BaseSensorFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseSensor
 Funktionsobjekt för BaseSensor och subklasser typ BaseTempSensor, BaseLevelSensor osv. 

 @image orm_basesensorfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseSensor i planthierarkin.

 @b Se även
 <attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att både larm
 och larmutgångar kopplas bort.
 </attr>
 <attr>Error 
 Ingång Error som gör sensor röd i objektsbilden och objektsymbol börjar blinka rött.
 </attr>
 <attr>Warning 
 Ingång Warning som gör sensor gul i objektsbilden och objektsymbol blir gul (fast).
 </attr>
 <attr>Value 
 Ärvärde utgång Value, dvs ärvärdet på sensorn.
 </attr>
 <attr>HH 
 Utgång, gränsvärde Hög Hög är passerad (A-larm).
 </attr>
 <attr>H 
 Utgång, gränsvärde Hög är passerad  (B-larm).
 </attr>
 <attr>L 
 Utgång, gränsvärde Låg är passerad (B-larm).
 </attr>
 <attr>LL 
 Utgång, gränsvärde Låg Låg är passerad (A-larm).
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>
 
 ###############################################################################

 <class> BaseTempSensor
 @Version
 @Author cs/je
 @Summary En analog temperatursensor med övervakning.
 @b Temperatursensor
 Objekt BaseTempSensor hanterar övervakningen av en analog temperatursensor med inställningar
 för larmgränser och en tillhörande objektsbild. Objektet är en subklass av BaseSensor.
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
 
 Man kan via ingångar Error och Warning i PLC funktionsobjektet styra färgen på
 sensorsymboler att bli röd eller gul.   
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/TempSensor.
 @image orm_tempsensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basetempsensor_og.png

 @b Exempel på en objektsymbol typ sensor (FO1) i en bild.
 @image orm_base_sensor_objectsymbol.gif

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BaseSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)

 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSensorFo (basklass).
 @image orm_basesensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 <attr>Super 
 Superklass, klicka på länk baseSensor för mer beskrivning om objektattributet. 
 </attr>
 
 </class>

 ###############################################################################

 <class> BaseFlowSensor
 @Version
 @Author cs/je
 @Summary En analog flödessensor med övervakning.
 @b Flödessensor
 Objekt BaseFlowSensor hanterar övervakningen av en analog flödessensor med inställningar
 för larmgränser och en tillhörande objektsbild. Objektet är en subklass av BaseSensor.
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
 
 Man kan via ingångar Error och Warning i PLC funktionsobjektet styra färgen på
 sensorsymboler att bli röd eller gul.   
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/FlowSensor.
 @image orm_flowsensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_baseflowsensor_og.png

 @b Exempel på en objektsymbol typ sensor (FO1) i en bild.
 @image orm_base_sensor_objectsymbol.gif

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BaseSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)
 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSensorFo (basklass).
 @image orm_basesensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 <attr>Super 
 Superklass, klicka på länk baseSensor för mer beskrivning om objektattributet. 
 </attr>
 
 </class>

 ###############################################################################

 <class> BasePressureSensor
 @Version
 @Author cs/je
 @Summary En analog trycksensor med övervakning.
 @b Trycksensor
 Objekt BasePressureSensor hanterar övervakningen av en analog trycksensor med inställningar
 för larmgränser och en tillhörande objektsbild. Objektet är en subklass av BaseSensor.
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
 
 Man kan via ingångar Error och Warning i PLC funktionsobjektet styra färgen på
 sensorsymboler att bli röd eller gul.   
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/PressureSensor.
 @image orm_pressuresensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basepressuresensor_og.png

 @b Exempel på en objektsymbol typ sensor (FO1) i en bild.
 @image orm_base_sensor_objectsymbol.gif

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BaseSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)

 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSensorFo (basklass).
 @image orm_basesensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 <attr>Super 
 Superklass, klicka på länk baseSensor för mer beskrivning om objektattributet. 
 </attr>
 
 </class>

 ###############################################################################

 <class> BaseLevelSensor
 @Version
 @Author cs/je
 @Summary En analog nivåsensor med övervakning.
 @b Nivåsensor
 Objekt BaseLevelSensor hanterar övervakningen av en analog nivåsensor med inställningar
 för larmgränser och en tillhörande objektsbild. Objektet är en subklass av BaseSensor.
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
 
 Man kan via ingångar Error och Warning i PLC funktionsobjektet styra färgen på
 sensorsymboler att bli röd eller gul.   
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/LevelSensor.
 @image orm_levelsensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_baselevelsensor_og.png

 @b Exempel på en objektsymbol typ sensor (FO1) i en bild.
 @image orm_base_sensor_objectsymbol.gif

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BaseSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)
 
 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSensorFo (basklass).
 @image orm_basesensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 <attr>Super 
 Superklass, klicka på länk baseSensor för mer beskrivning om objektattributet. 
 </attr>
 
 </class>
###############################################################################

 <class> BasePositSensor
 @Version
 @Author rk/je
 @b Sensor
 @Summary En kalibrerbar analog sensor med övervakning.
 Objekt BasePositSensor hanterar övervakningen av en analog positions-sensor med
 möjlighet att en eller tvåpunktskalibrera (skala om) sensorn samt inställningar för
 larmgränser och en tillhörande objektsbild. Objektet är en subklass av BaseSensor.
 
 Objektet kan användas när man via en bild har ett behov att justera offset eller
 skala om mätsignalen/position utan att ändra sensorns fysiska mätsignal.
 
 Man kan välja att ha en eller två kalibreringspunkter, Point 1 och Point 2, detta ställs
 in i attributen Cal1Enable och Cal2Enable.  
  
 Objektet övervakar fyra larmgränser som kallas HH, H, L, och LL. Gränserna
 kan kopplas in eller ur och gränserna är ändringsbara från objektsbilden.

 Man kan hindra larm/larmutgångar att aktiveras via ingång DisableSup i
 PLC funktionsobjektet.
  
 Objektsymbolen för sensorn i bilder blinkar rött vid A-larm och är fast gul vid B-larm.
 
 Objektet innehåller också en trendkurva.

 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/Sensor. Symbolen kan konfigureras
 med bokstäver i sig som beskriver sensorns mätsignal.
 @image orm_sensor_gs.gif

 Dynamik:
 
 - Färg gul när Hög eller Låg larmgräns aktiveras.
 - Färg röd blinkande när Hög Hög eller Låg Låg larmgräns aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.
    
 @b Objektbild
 @image orm_basepositsensor_og.png

 Mått/mätenheten kan visas i bild bredvid mätvärdet Position och ställs in via Ai
 signalen attribut "Value.Unit".

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Ai signal kallad Value som ska kopplas till sensorns
 Ai-kanal.

 @b Övervakning
 BasePositSensor har fyra gränser, varje representeras av en CompLimit objekt,
 inställningar i dessa objekt är:
 
 -AlarmText     Larmtext som kan ändras
 -Limit         Larmgräns
 -Hysteres      Hysteres
 -TimeDelay     Tidsfördröjning i sekunder
 -Used          Inställning om larmgräns används (1:a) eller inte (0:a)

 -Status        Status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BasePositSensorFo.
 @image orm_basepositsensorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering av posit-sensorns ärvärde använder man funktionsobjektet BaseSensorSim.

 @b Se även
 <attr>Super 
  Superklass, klicka på länk BaseSensor för mer beskrivning om objektattributet.
 </attr>
 <attr>Position 
  Positionsärvärdet (skalat/kalibrerat).
 </attr>
 <attr>OpCalPos1 
  Inställt kalibreringsposition för kalibreringspunkt Point 1 (noll/startpunkt).
  Detta attribut kan ställs in via objektsbilden.
 </attr>
 <attr>OpCalPos2 
  Inställt kalibreringsposition för kalibreringspunkt Point 2 (slutpunkt)
  Detta attribut kan ställs in via objektsbilden.
 </attr>
 <attr>CalPos1
  Lagrat värde på kalibreringsvärdet OpCalPos1 när kalibrering Point 1 utfördes.
 </attr>
 <attr>CalValue1
  Lagrat värde på positionsärvärde (Ai signalen) när kalibrering Point 1 utfördes.
 </attr>
 <attr>CalValue2
  Lagrat värde på positionsärvärde (Ai signalen) när kalibrering Point 2 utfördes.
 </attr>
 <attr>Gain
  Beräknad skalningsfaktor när båda kalibreringspunkterna används. Beräknas först när
  båda punkterna är kalibrerade. Ska alltid vara 1 om bara kalibrering Point 1 används.
 </attr>
 <attr>OpCalOrder1 
  Begäran (1:a) att kalibreringsvärden Point 1 ska beräknas, dvs signal från calibrate
  Point 1 knappen i bild.
 </attr>
 <attr>OpCalOrder2 
  Begäran (1:a) att kalibreringsvärden för Point 1 ska beräknas, dvs signal från calibrate
  Point 2 knappen i bild.
 </attr>
 <attr>Cal1Enable 
  Val (1:a) att kalibreringspunkt Point 1 ska användas eller ej (0:a)
 </attr>
 <attr>Cal2Enable 
  Val (1:a) att kalibreringspunkt Point 2 ska användas eller ej (0:a). Detta val tillåts endast
  om OpCal1Enable också är vald (1:a).
 </attr>
 <attr>OpCalAccess 
  Om 1 dimmas knapparna för Calibrate i objeksbilden som möjliggör kalibrering från bilden.
 </attr>
 <attr>OpCalPosAccess 
  Om 1 visas inmatningfält för attributen OpCalPos1 och OpCalPos2 i bild som möjliggör att ändra
  dessa värden från bild.
 </attr>
 <attr>P1Calibrated
  Minne (1:a) för att hålla reda på om kalibrering gjorts för Point 1 eller ej (0:a).
 </attr>
 <attr>P2Calibrated
  Minne (1:a) för att hålla reda på om kalibrering gjorts för Point 2 eller ej (0:a).
 </attr>
 
 </class>

#############################################################################################

 <class> BasePositSensorFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BasePositSensor
 Funktionsobjekt för BasePositSensor. 

 @image orm_basepositsensorfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BasePositSensor i planthierarkin.

 @b Se även
 <attr>CalOrder1 
  Ingång att kalibreringsvärden Point 1 ska beräknas. Beräkningen utförs vid 
  positiv flank på ingången.
 </attr>
 <attr>CalOrder2
  Ingång att kalibreringsvärden Point 2 ska beräknas. Beräkningen utförs vid
  positiv flank på ingången.
 </attr>
 <attr>DisableSup 
  Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att både larm
  och larmutgångar kopplas bort.
 </attr>
 <attr>Value 
  Ärvärde utgång Value, dvs kalibrerade ärvärdet på positions-sensorn.
 </attr>
 <attr>HH 
  Utgång, gränsvärde Hög Hög är passerad (A-larm).
 </attr>
 <attr>H 
  Utgång, gränsvärde Hög är passerad  (B-larm).
 </attr>
 <attr>L 
  Utgång, gränsvärde Låg är passerad (B-larm).
 </attr>
 <attr>LL 
  Utgång, gränsvärde Låg Låg är passerad (A-larm).
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

##############################################################################

 <class> BaseSupSwitch
 @Version
 @Author cs/je
 @Summary En digital vakt med övervakning.
 @b Vakt (digital)
 Objekt BaseSupSwitch hanterar övervakningen av en digital vakt med larm och
 en tillhörande objektsbild.
 
 Detta objekt/vakt används företrädesvis för vakter som INTE är av typen temp,
 tryck eller nivå (dessa typer har egna objekt).
  
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 vakten ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Tidsfördröjning innan vakten larmar/aktiveras är möjlig.
 
 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången AlarmStatus.
 
 Objektsymbolen för vakten i bilder blinkar rött vid A-larm.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/SupSwitch.
 @image orm_supswitch_gs.gif

 Dynamik:
 
 - Färg röd blinkande när larmutgång aktiveras.
 
 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basesupswitch_og.png

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal kallad Switch som ska kopplas till vaktens Di-kanal.

 @b Övervakning
 BaseSupSwitch har en larmutgång och inställningar som kan ändras:
 
 -AlarmText     Larmtext som kan ändras
 -Delay         Tidsfördröjning i sekunder

 -AlarmStatus   Larmutgång, status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSupSwitchFo.
 @image orm_basesupswitchfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 </attr>
 <attr>Switch 
 Digital Di ingången för vakten, larm vid låg signal.
 </attr>
 <attr>AlarmStatus
 Utgång på PLC funktionsobjektet som är hög när larm råder.
 </attr>
 <attr>AlarmText
 Larmtext när larmutgång aktiveras (A-larm). Kan kopplas bort via ingång SupDisabled
 på PLC funktionsobjektet.
 </attr>
 <attr>Delay 
  Tidsfördröjning i sekunder innan larm aktiveras när vakt larmar. 
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att larmutgången AlarmStatus och färgstyrning i bilder INTE
 påverkas.
 <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> BaseSupSwitchFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseSupSwitch
 Funktionsobjekt för BaseSupSwitch och subklasser typ BaseTempSwitch, BaseLevelSwitch osv. 

 @image orm_basesupswitchfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseSupSwitch i planthierarkin.

 @b Se även
 @classlink BaseTempSwitch basecomponent_basetempswitch.html 
 @classlink BaseLevelSwitch basecomponent_baselevelswitch.html 
 @classlink BasePressureSwitch basecomponent_basepressureswitch.html   
<attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
 larmutgången INTE kopplas bort.
 </attr>
 <attr>AlarmStatus 
 Larmutgång som är hög vid larm.
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>
 
##############################################################################

 <class> BaseTempSwitch
 @Version
 @Author cs/je
 @Summary En digital temperaturvakt med övervakning.
 @b Temperaturvakt
 Objekt BaseTempSwitch hanterar övervakningen av en digital temperaturvakt med larm och
 en tillhörande objektsbild. Objektet är en subklass av BaseSupSwitch.
  
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 vakten ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Tidsfördröjning innan vakten larmar/aktiveras är möjlig.
 
 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången AlarmStatus.
 
 Objektsymbolen för vakten i bilder blinkar rött vid A-larm.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/TempSwitch.
 @image orm_tempswitch_gs.gif

 Dynamik:
 
 - Färg röd blinkande när larmutgång aktiveras.
 
 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basetempswitch_og.png

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal kallad Switch som ska kopplas till vaktens Di-kanal.

 @b Övervakning
 BaseTempSwitch har en larmutgång och inställningar som kan ändras:
 
 -AlarmText     Larmtext som kan ändras
 -Delay         Tidsfördröjning i sekunder

 -AlarmStatus   Larmutgång, status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSupSwitchFo (basklass).
 @image orm_basesupswitchfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk BaseSupSwitch för mer beskrivning om objektattributet. 
 </attr>
 
 </class>

##############################################################################

 <class> BasePressureSwitch
 @Version
 @Author cs/je
 @Summary En digital tryckturvakt med övervakning.
 @b Tryckvakt
 Objekt BasePressureSwitch hanterar övervakningen av en digital tryckvakt med larm och
 en tillhörande objektsbild. Objektet är en subklass av BaseSupSwitch.
  
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 vakten ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Tidsfördröjning innan vakten larmar/aktiveras är möjlig.
 
 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången AlarmStatus.
 
 Objektsymbolen för vakten i bilder blinkar rött vid A-larm.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/PressureSwitch.
 @image orm_pressureswitch_gs.gif

 Dynamik:
 
 - Färg röd blinkande när larmutgång aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basepressureswitch_og.png

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal kallad Switch som ska kopplas till vaktens Di-kanal.

 @b Övervakning
 BasePressureSwitch har en larmutgång och inställningar som kan ändras:
 
 -AlarmText     Larmtext som kan ändras
 -Delay         Tidsfördröjning i sekunder

 -AlarmStatus   Larmutgång, status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSupSwitchFo (basklass).
 @image orm_basesupswitchfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk BaseSupSwitch för mer beskrivning om objektattributet. 
 </attr>
 
 </class>

##############################################################################

 <class> BaseLevelSwitch
 @Version
 @Author cs/je
 @Summary En digital nivåvakt med övervakning.
 @b Nivåvakt
 Objekt BaseLevelSwitch hanterar övervakningen av en digital nivåvakt med larm och
 en tillhörande objektsbild. Objektet är en subklass av BaseSupSwitch.
  
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 vakten ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Tidsfördröjning innan vakten larmar/aktiveras är möjlig.
 
 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången AlarmStatus.
 
 Objektsymbolen för vakten i bilder blinkar rött vid A-larm.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/LevelSwitch.
 @image orm_levelswitch_gs.gif

 Dynamik:
 
 - Färg röd blinkande när larmutgång aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_baselevelswitch_og.png

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal kallad Switch som ska kopplas till vaktens Di-kanal.

 @b Övervakning
 BaseLevelSwitch har en larmutgång och inställningar som kan ändras:
 
 -AlarmText     Larmtext som kan ändras
 -Delay         Tidsfördröjning i sekunder

 -AlarmStatus   Larmutgång, status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSupSwitchFo (basklass).
 @image orm_basesupswitchfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk BaseSupSwitch för mer beskrivning om objektattributet. 
 </attr>
 
 </class>
 
##############################################################################

 <class> BaseFilter
 @Version
 @Author cs/je
 @Summary En digital filtervakt med övervakning.
 @b Filtervakt
 Objekt BaseFilter hanterar övervakningen av en digital filtervakt med larm och
 en tillhörande objektsbild.
  
 Objektet övervakar när en digital ingång går hög alternativt låg och A-larm genereras.

 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången AlarmStatus.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/Filter.
 @image orm_filter_gs.png

 Dynamik:
 
 - Färg röd när larmutgång aktiveras.

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektbild
 @image orm_basefilter_og.png

 @h1 Konfigurering
 BaseFilter objektet hanterar 2 olika alternativ:

  1 CloggedSwitch          Vakten har en larmutgång
  2 NoSwitch               Vakten har ingen larmutgång

 @b Signal
 Signal som ska kopplas till vaktens Di-kanal.

 - CloggedSwitch   Di

  Ska ingången inverteras för rätt funktion får man ändra attributet "SwitchNormallyClosed"
  
 @b Övervakning
 BaseFilter har en larmutgång och en inställning som kan ändras:
 
 -AlarmText     Larmtext som kan ändras

 -AlarmStatus   Larmutgång, status om larm är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseFilterFo.
 @image orm_basefilterfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 Behöver inte göras om objektet är konfigurerat som "No switch".
 
 @b Se även
  <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 </attr>
 <attr>CloggedSwitch 
 Digitala Di ingången för vakten. Grundinställning är NO (0:a) vilket ger larm när
 signalen går hög, se attribut SwitchNormallyClosed.
 </attr>
 <attr>AlarmText
  Larmtext när larmutgång aktiveras (A-larm). Kan kopplas bort via ingång SupDisabled
  på PLC funktionsobjektet.
 </attr>
 <attr>SwitchNormallyClosed
  Invertering av Di signalen, anger om vakten är normalt sluten (1:a) eller
  normalt öppen (0:a) dvs typ NC eller NO.
 </attr>
 <attr>AlarmStatus
  Utgång på PLC funktionsobjektet som är hög när larm råder.
 </attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att larmutgången AlarmStatus och färgstyrning i bilder INTE
  påverkas.
 <attr> PlcConnect
  Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
  
 </class>

#############################################################################################

 <class> BaseFilterFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseFilter
 Funktionsobjekt för BaseFilter. 

 @image orm_basefilterfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseFilter i planthierarkin.

 @b Se även
 <attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
 larmutgången INTE kopplas bort.
 </attr>
 <attr>AlarmStatus 
 Larmutgång som är hög vid larm.
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>

####################################################################################

 <class> BaseValve
 @Version
 @Author cs/je
 @summary Basklass för en ventil
 @b Ventil
 BaseValve objektet innehåller en objektsbild och attribut för de vanligaste metoderna
 som man bör dokumentera sin ventil med.
 
 @b Objektbild
 @image orm_basevalve_og.png

 <attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Basklass för ventiler
 </attr>
 <attr> Specification
  Specifikation för en ventil
 </attr>
 <attr> DataSheet
  URL till datablad för en ventil  
 </attr>
 <attr> CircuitDiagram
  URL till elschema för en ventil  
 </attr>

 </class>

##############################################################################

 <class> Base3wayValve
 @Version
 @Author cs/je
 @summary Basklass för en 3-vägs ventil
 @b Trevägsventil
 Base3WayValve objektet innehåller en objektsbild och attribut för de vanligaste metoderna
 som man bör dokumentera sin ventil med.
 
 @b Objektbild
 @image orm_base3wayvalve_og.png

 <attr>Super 
 Superklass, klicka på länk BaseValve för mer beskrivning om objektattributet. 
 </attr>
 
 </class>
 
##############################################################################

 <class> BaseDamper
 @Version
 @Author cs/je
 @summary Basklass för ett spjäll (ventil)
 @b Spjäll
 BaseDamper objektet innehåller en objektsbild och attribut för de vanligaste metoderna
 som man bör dokumentera sitt spjäll med.
 
 @b Objektbild
 @image orm_basedamper_og.png

 <attr> Description
  @summary Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
  Basklass för spjället
 </attr>
 <attr> Specification
  Specifikation för spjället
 </attr>
 <attr> DataSheet
  URL till datablad för spjället  
 </attr>
 <attr> CircuitDiagram
  URL till elschema för spjället  
 </attr>

 </class>

####################################################################################

<class> BaseActuatorA
 @Version
 @Author cs/je
 @summary Ställdon, analog styrning med 2 analoga och 2 digitala signaler
 @b Ställdon (analogstyrd)
 BaseActuatorA objektet hanteras en analog orderutgång, en analog positionsingång
 och två digitala ingångar för stoppgränslägen och Auto/Man mod. Alla ingångar
 går att konfigurera (välja bort).
 
 Används bl.a i objekt BaseCValve, BaseC3WayValve.
 
 @b Objektsbild
 @image orm_baseactuatora_og.png

 Skalan och staplar "Position" "Order" "Manual" följer inställningar i attributen PresMaxLimit,
 PresMinLimit i Order attributet (Ao signalen). Dessa attribut går att ändra tillfälligt online
 genom att klicka med musen i bilden.  

 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet CompModeAM, se
 detta objekt för mer info om hur man konfiguerar moder.
  
 @b Övervakning
 BaseActuatorA har flera övervakningar som genererar larm:
 
 -Positionsfel    Övervakning att skillnaden inte är för stor mellan analoga bör/ärposition. 

 -Gränslägesfel   Övervakning att gränslägen beter sig riktigt i förhållande till den
                  analoga ärpositionen och börpositionen.
 
 -Gränslägesfel   Övervakning att inte båda gränslägen är påverkade samtidigt.


 @h1 Konfigurering
 BaseActuatorA objektet hanterar 8 olika alternativ beroende på ställdonets utformning:


  1 TwoSwitches            Gränsläge öppen och stängd och ingen analog lägesåterföring/position.
  2 SwitchOpen             Bara gränsläge öppen och ingen analog lägesåterföring/position.
  3 SwitchClosed           Bara gränsläge stängd och ingen analog lägesåterföring/position.
  4 NoSwitches             Inga gränslägen och ingen analog lägesåterföring/position.
  5 PositionTwoSwitches    Allt, gränsläge öppen och stängd och analog lägesåterföring/position.
  6 PositionSwitchOpen     Gränsläge öppen och analog lägesåterföring/position.
  7 PositionSwitchClosed   Gränsläge stängd och analog lägesåterföring/position.
  8 PositionNoSwitches     Inga gränslägen men analog lägesåterföring/position.


  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - Order         Ao
  - Position      Ai (valbart) 
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)

  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseActuatorAFo.
 @image orm_baseactuatorafo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>Order
 Analogutgång för ventilens styrorder/börposition.
 </attr>
 <attr>Position
 Analogingång för återföringen av ventilens ärposition.
 </attr>
 <attr>SwitchOpen
  Digitalingång stoppgränsläge för öppet läge.
 </attr>
 <attr>SwitchClosed
  Digitalingång Stoppgränsläge för stängt läge.
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man och dynamik i bilder och larm för lokal mod, dvs
  lokal mod styrreferens hanteras inte av detta mod objekt.
 </attr>
 <attr>MaxPosDiff
  Inställning för max skillnad är/bör position. Blir skillnaden större utgår larm.
 </attr>
 <attr>DiffAlarmDelay
  Tidsfördröjning i sekunder larm vid positionsfel.
 </attr>
 <attr>DiffAlarmText
  Larmtext för positionsfel (A-larm).
 </attr>
 <attr>SwitchAlarmDelay
  Tidsfördröjning i sekunder larm vid gränslägesfel.
 </attr>
 <attr>SwitchAlarmText
  Larmtext för gränslägesfel (A-larm).
 </attr>
 <attr>PosSwitchOpen
  Inställningsposition för öppet gränsläge som jämförs med ärpositionen för övervakning
  gränslägesfel.
 </attr>
 <attr>PosSwitchClosed
  Inställningsposition för stängt gränsläge som jämförs med ärpositionen för övervakning
  gränslägesfel.
 </attr>
 <attr>IndError 
 Går hög om A-larm är aktivt eller ingång Error för PLC funktionsobjektet är hög,
 objektsymbol börjar blinka rött
 </attr>
 <attr>IndWarning 
 Går hög om B-larm är aktivt eller ingång Warning för PLC funktionsobjektet är hög,
 objektsymbol blir gul (fast).
 </attr>
 <attr>SwitchError
  Gränslägesfel detekterat.
 </attr>
 <attr>DiffPosError
  För stort positionsfel detekterat.
 </attr>
 <attr>PosEnum
  Uppräkningsattribut för att hålla reda på positioner.
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
 IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

####################################################################################

<class>BaseActuatorAFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseActuatorA
 Funktionsobjekt för BaseActuatorA 
 @image orm_baseactuatorafo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseActuatorA
 i planthierarkin.
 
 @b Se även
 @classlink CompModeAM basecomponent_compmodeamfo.html 
 <attr>ExtOrder 	
   Ingång för den analoga styrreferensen som gäller om INTE objektet är i
   manuell mod. I manuell mod hämtas styrreferensen från OpRefMan.
 </attr>
 <attr>LocalMode 	
   Ingång för att styra "Lokala" dynamiken i objektsbild/symbol och generera ett B-larm
   att lokalt gäller (går att koppla ur), annars gör den ingenting. 
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol börjar blinka rött och ventil indikering
   i objektsbilden röd, dvs denna ingång används när man av någon anledning vill styra dynamiken
   i bilder från funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol och ventil indikering i objektsbilden
   blir gul, dvs denna ingång används när man av någon anledning vill styra dynamiken i bilder
   från funktionsobjektets ingångar.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas eller status för attributen IndError, IndWarning.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

<class> BaseActuatorIncrDecr
 @Version
 @Author cs/je
 @summary Ställdon, digital styrning med 4 digitala signaler och 1 analog
 @b Ställdon (digitalstyrd)
 BaseActuatorIncrDecr objektet hanteras en analog positionsingång, två digitala
 utgångar för öka/minska och två digitala ingångar för ventilens stoppgränslägen
 samt Auto/Man/lokal mod. Alla ingångar går att konfigurera (välja bort).
 
 Knappar i bilder kan konfigureras för olika händelser såsom Öka/Minska, Upp/Ner,
 Fram/Back och Öppna/Stäng.
 
 Detta Actuator/ställdon objekt används huvudsakligen för ventiler och spjäll, bl.a
 i objekt BaseValveIncrDecr.
 
 @b Objektsbild
 @image orm_baseactuatorincrdecr_og.png

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeD2, Se detta objekt för mer info om hur man konfiguerar moder.
  
 @b Övervakning och felhantering
 BaseActuatorIncrDecr har flera övervakningar som genererar larm:
 
 
 -Gränslägesfel   Övervakning att gränslägen beter sig riktigt i förhållande till den
                  analoga ärpositionen.
 
 -Gränslägesfel   Övervakning att inte båda gränslägen är påverkade samtidigt

 OBS! Att ovanstående larm inte påverkar mod.
 
 Övervakning tidfel (timeout) när gränslägen används sker via det inbyggda objektet CompModeD2
 där man ställer in gångtiden i attribut OrderTimeLimit. Detta fel påverkar normalt mod
 Auto/Man att inta läget manuellt, dvs auto återställs automatiskt till manuellt när det blir
 fel. Se CompModeD2 objektet för mer info hur man kan välja bort denna funktion.
 
 Om man väljer att inte använda objektets hantering av moder, utan lägger denna hantering
 utanför objektet,är det viktigt återställa order vid felstatus, dvs man bör ta ner styrorder 
 på funktionsobjektets ingångar vid fel för att förhindra oönskade återstarter. Använd bl a 
 attribut ErrorIncr och ErrorDecr i CompModeD2 som fångar upp tidfel när 
 gränslägen/Limitswitches är konfigurerade. 
 
 @h1 Konfigurering
 BaseActuatorIncrDecr objektet hanterar 8 olika alternativ beroende på ställdonets utformning:

  1 TwoSwitches            Gränsläge öppen och stängd och ingen analog lägesåterföring/position.
  2 SwitchOpen             Bara gränsläge öppen och ingen analog lägesåterföring/position.
  3 SwitchClosed           Bara gränsläge stängd och ingen analog lägesåterföring/position.
  4 NoSwitches             Inga gränslägen och ingen analog lägesåterföring/position.
  5 PositionTwoSwitches    Allt, gränsläge öppen och stängd och analog lägesåterföring/position.
  6 PositionSwitchOpen     Gränsläge öppen och analog lägesåterföring/position.
  7 PositionSwitchClosed   Gränsläge stängd och analog lägesåterföring/position.
  8 PositionNoSwitches     Inga gränslägen men analog lägesåterföring/position.

  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - OrderIncr     Do
  - OrderDecr     Do
  - Position      Ai (valbart) 
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseActuatorIncrDecrFo.
 @image orm_baseactuatorincrdecrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>OrderIncr
 Digitalutgång för ventilens styrorder öppna (öka, upp, fram)
 </attr>
 <attr>OrderDecr
 Digitalutgång för ventilens styrorder stäng (minska, ner, back)
 </attr>
 <attr>Position
 Analogingång för återföringen av ventilens ärposition.
 </attr>
 <attr>SwitchOpen
  Digitalingång stoppgränsläge för öppet läge.
 </attr>
 <attr>SwitchClosed
  Digitalingång Stoppgränsläge för stängt läge.
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/lokal och dynamik i bilder och larm för lokal mod.
  Se länk CompModeD2 för mer info.
  
  OBS! Att INGA gränslägesfel påverkar mod, dvs. felhantering som ska påverka mod
  måste programmeras.
 </attr>
 <attr>SwitchAlarmDelay
  Tidsfördröjning i sekunder larm vid gränslägesfel.
 </attr>
 <attr>SwitchAlarmText
  Larmtext för gränslägesfel (A-larm).
 </attr>
 <attr>PosSwitchOpen
  Inställningsposition för öppet gränsläge som jämförs med ärpositionen för övervakning
  gränslägesfel.
 </attr>
 <attr>PosSwitchClosed
  Inställningsposition för stängt gränsläge som jämförs med ärpositionen för övervakning
  gränslägesfel.
 </attr>
 <attr>IndError 
 Går hög om A-larm är aktivt eller ingång Error för PLC funktionsobjektet är hög,
 objektsymbol börjar blinka rött
 </attr>
 <attr>IndWarning 
 Går hög om B-larm är aktivt eller ingång Warning för PLC funktionsobjektet är hög,
 objektsymbol blir gul (fast).
 </attr>
 <attr>SwitchError
  Gränslägesfel detekterat.
 </attr>
 <attr>PosEnum
  Uppräkningsattribut för att hålla reda på positioner.
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
 IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseActuatorIncrDecrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseActuatorIncrDecr
 Funktionsobjekt för ActuatorIncrDecr 
 @image orm_baseactuatorincrdecrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseActuatorIncrDecr
 i planthierarkin.
 
 @b Se även
  @classlink CompModeD2 basecomponent_compmoded2.html 
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeD2 objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera
   med knappar men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtOrderIncr
   Ingång för att styra OrderIncr utgången (öka) när automatik mod är valt i objeksbilden
   eller när moden styrs via ExtControl.
 </attr>
 <attr> ExtOrderDecr
   Ingång för att styra OrderDecr utgången (minska) när automatik mod är valt i objeksbilden
   eller när moden styrs via ExtControl.
 </attr>
 <attr> LocalMode 	
   Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
   Dvs ingångar LocalIncr, LocalDecr i funktionsobjektet styr ventilen. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Larmet går att välja bort via inbyggda CompModeD2 objektets attribut OpDisableLocalAlarm.
   
   Lokal mod går att välja bort via inbyggda CompModeD2 objektets attribut OpNoLocal.  
 </attr>
 <attr> LocalIncr	
  Ingång för att styra orderIncr utgången (öka) i lokal mod.
 </attr>
 <attr> LocalDecr	
   Ingång för att styra orderDecr utgången (minska) i lokal mod.
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol börjar blinka rött och ventil indikering
   i objektsbilden röd, dvs denna ingång används när man av någon anledning vill styra
   dynamiken i bilder från funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol och ventil indikering i objektsbilden
   blir gul, dvs denna ingång används när man av någon anledning vill styra dynamiken i bilder
   från funktionsobjektets ingångar.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas eller status för attributen IndError, IndWarning.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

<class> BaseValveIncrDecr
 @Version
 @Author cs/je
 @summary Ventil, digital styrning med 4 digitala signaler och 1 analog
 @b Reglerventil (digitalstyrd)
 BaseValveIncrDecr objektet hanterar en analog positionsingång, två digitala
 utgångar för öka/minska och två digitala ingångar för ventilens stoppgränslägen
 samt Auto/Man/lokal mod. Alla ingångar går att konfigurera (välja bort).
 
 Knappar i bilder kan konfigureras för olika händelser såsom Öka/Minska, Upp/Ner,
 Fram/Back och Öppna/Stäng.
 
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i BaseActuatorIncrDecr
 och CompModeD2 objekten. Objektet som sådan tillför egentligen bara ventilsymbolen i
 objektsbilden, attribut och URL länkar för ventilen/ställdonets egenskaper och data.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/ValveIncrDecr
 @image orm_cvalve_gs.gif

 Dynamik:
 
  - Originalfärgen när ventilen INTE är stängd eller när inga gränslägen
    och ingen positionsgivare är konfigurerad.
  - Vit färg när ventilen anses stängd.
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basevalveincrdecr_og.png

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeD2 som ligger i objekt BaseActuatorIncrDecr, Se dessa objekt för mer info.
  
 @b Övervakning och felhantering
 Övervakning och viss felhantering hanteras utav BaseActuatorIncrDecr objektet, Se
 detta objekt för mer info.

 @h1 Konfigurering
 BaseValveIncrDecr objektet hanterar 8 olika alternativ beroende på ställdonets utformning:

  1 TwoSwitches            Gränsläge öppen och stängd och ingen analog lägesåterföring/position.
  2 SwitchOpen             Bara gränsläge öppen och ingen analog lägesåterföring/position.
  3 SwitchClosed           Bara gränsläge stängd och ingen analog lägesåterföring/position.
  4 NoSwitches             Inga gränslägen och ingen analog lägesåterföring/position.
  5 PositionTwoSwitches    Allt, gränsläge öppen och stängd och analog lägesåterföring/position.
  6 PositionSwitchOpen     Gränsläge öppen och analog lägesåterföring/position.
  7 PositionSwitchClosed   Gränsläge stängd och analog lägesåterföring/position.
  8 PositionNoSwitches     Inga gränslägen men analog lägesåterföring/position.

  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - OrderIncr     Do
  - OrderDecr     Do
  - Position      Ai (valbart) 
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseValveIncrDecrFo.
 @image orm_basevalveincrdecrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseCValveSim.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>Actuator
  Actuator objekt som hanterar ventilens ställdon, mod Auto/Man/lokal, dynamik i bilder
  och larm. Se länk BaseActuatorIncrDecr för mer info.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>


######################################################################################## 

<class>BaseValveIncrDecrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseValveIncrDecr
 Funktionsobjekt för BaseValveIncrDecr 
 @image orm_basevalveincrdecrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseValveIncrDecr
 i planthierarkin.
 
 PLC programmet i detta objekt är egentligen bara ett gränssnitt mot objektet
 BaseActuatorIncrDecr.
   
 @b Se även
  @classlink CompModeD2 basecomponent_compmoded2.html
  @classlink BaseActuatorIncrDecr basecomponent_baseactuatorincrdecr.html 
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeD2 objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera
   med knappar men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtOrderIncr
   Ingång för att styra orderIncr utgången (öka) i automatik mod (extern).  
 </attr>
 <attr> ExtOrderDecr
   Ingång för att styra orderDecr utgången (minska) i automatik mod (extern).
 </attr>
 <attr> LocalMode 	
    Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder
    kopplas bort. Dvs ingångar LocalIncr, LocalDecr i funktionsobjektet styr ventilen. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Larmet går att välja bort via inbyggda CompModeD2 objektets attribut OpDisableLocalAlarm.
   
   Lokal mod går att välja bort via inbyggda CompModeD2 objektets attribut OpNoLocal.  
 </attr>
 <attr> LocalIncr	
  Ingång för att styra orderIncr utgången (öka) i lokal mod.
 </attr>
 <attr> LocalDecr	
   Ingång för att styra orderDecr utgången (minska) i lokal mod.
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol börjar blinka rött och ventil indikering
   i objektsbilden röd, dvs denna ingång används när man av någon anledning vill styra
   dynamiken i bilder från funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol och ventil indikering i objektsbilden
   blir gul, dvs denna ingång används när man av någon anledning vill styra dynamiken i bilder
   från funktionsobjektets ingångar.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas eller status för attributen IndError, IndWarning i objekt 
   BaseActuatorIncrDecr.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

<class> BaseCValve
 @Version
 @Author cs/je
 @summary Ventil, analog styrning med 2 analoga signaler och 2 digitala
 @b Reglerventil (analogstyrd)
 BaseCValve objektet hanterar en analog orderutgång och en analog positionsingång och
 två digitala ingångar för ventilens stoppgränslägen samt Auto/Man mod. Alla ingångar
 går att konfigurera (välja bort).
 
 Auto/man mod kan konfigureras på flera sätt, se objekt CompModeAM. 
 
 Lokal mod styrning hanteras INTE av detta objekt förutom indikering i bilder och att
 ett larm genereras när lokal mod aktiveras "utifrån".   
  
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i BaseActuatorA
 och CompModeAM objekten. Objektet som sådan tillför egentligen bara ventilsymbolen i
 objektsbilden, attribut och URL länkar för ventilen/ställdonets egenskaper och data.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/CValve
 @image orm_cvalve_gs.gif

 Dynamik:
 
  - Originalfärgen när ventilen INTE är stängd eller när inga gränslägen
    och ingen positionsgivare är konfigurerad.
  - Vit färg när ventilen anses stängd.
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basecvalve_og.png

 Skalan och staplar "Position" "Order" "Manual" följer inställningar i objekt BaseActuatorA
 attributen PresMaxLimit, PresMinLimit i Order attributet (Ao signalen). Dessa attribut går
 att ändra tillfälligt online genom att klicka med musen i bilden.  

 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet
 CompModeAM som ligger i objekt BaseActuatorA, Se dessa objekt för mer info.
  
 @b Övervakning och felhantering
 Övervakning och viss felhantering hanteras utav BaseActuatorA objektet, Se
 detta objekt för mer info.

 @h1 Konfigurering
 BaseCValve objektet hanterar 8 olika alternativ beroende på ställdonets utformning:

  1 TwoSwitches            Gränsläge öppen och stängd och ingen analog lägesåterföring/position.
  2 SwitchOpen             Bara gränsläge öppen och ingen analog lägesåterföring/position.
  3 SwitchClosed           Bara gränsläge stängd och ingen analog lägesåterföring/position.
  4 NoSwitches             Inga gränslägen och ingen analog lägesåterföring/position.
  5 PositionTwoSwitches    Allt, gränsläge öppen och stängd och analog lägesåterföring/position.
  6 PositionSwitchOpen     Gränsläge öppen och analog lägesåterföring/position.
  7 PositionSwitchClosed   Gränsläge stängd och analog lägesåterföring/position.
  8 PositionNoSwitches     Inga gränslägen men analog lägesåterföring/position.

  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - Order         Ao
  - Position      Ai (valbart) 
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseCValveFo.
 @image orm_basecvalvefo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseCValveSim.
 
 @b Se även
 @classlink CompModeAM basecomponent_compmodeam.html
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>Actuator
  Actuator objekt som hanterar ventilens ställdon, mod Auto/Man, dynamik i bilder
  och larm. Se länk BaseActuatorA för mer info.
 </attr>
 <attr>Valve
  Valve objekt som hanterar attribut för de vanligaste metoderna som man bör
  dokumentera sin ventil med. Se länk BaseValve för mer info.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseCValveFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseCValve
 Funktionsobjekt för BaseCValve 
 @image orm_basecvalvefo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseCValve
 i planthierarkin.
 
 PLC programmet i detta objekt är egentligen bara ett gränssnitt mot objektet
 BaseActuatorA.
   
  @b Se även
  @classlink CompModeAM basecomponent_compmodeam.html
  @classlink BaseActuatorA basecomponent_baseactuatora.html 
 <attr> ExtOrder 	
  Objektets ingång för den analoga styrreferensen som gäller i automatik mod (externt).
 </attr>
 <attr> LocalMode 	
   Ingången styr dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   OBS att ingången inte påverkar andra moder eller refernsutgången på något sätt. 
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol börjar blinka rött och ventil indikering
   i objektsbilden röd, dvs denna ingång används när man av någon anledning vill styra
   dynamiken i bilder från funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol och ventil indikering i objektsbilden
   blir gul, dvs denna ingång används när man av någon anledning vill styra dynamiken i bilder
   från funktionsobjektets ingångar.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas eller status för attributen IndError, IndWarning i objekt BaseActuatorA.
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

####################################################################################

<class> BaseC3WayValve
 @Version
 @Author cs/je
 @summary 3 vägsventil, analog styrning med 2 analoga signaler och 2 digitala
 @b Trevägsventil (analogstyrd)
 BaseC3WayValve objektet hanterar en analog orderutgång och en analog positionsingång och
 två digitala ingångar för ventilens stoppgränslägen samt Auto/Man mod. Alla ingångar
 går att konfigurera (välja bort).
 
 Auto/man mod kan konfigureras på flera sätt, se objekt CompModeAM. 
 
 Lokal mod styrning hanteras INTE av detta objekt förutom indikering i bilder och att
 ett larm genereras när lokal mod aktiveras "utifrån".   
  
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i BaseActuatorA
 och CompModeAM objekten. Objektet som sådan tillför egentligen bara ventilsymboler i
 objektsbilden och objektsymbolen.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/C3WayValve
 @image orm_c3wayvalve_gs.gif

 Dynamik:
 
   En trevägsventil har tre portar där en port alltid är öppen till en annan (shuntventil).
   Portarna (trianglar) som kan stängas är märkta med linjer.
 
  - Originalfärgen när ventilens alla portar INTE är stängda eller när inga gränslägen
    och ingen positionsgivare är konfigurerad.
  - Vit färg på den port (triangel) som är helt stängd.
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basec3wayvalve_og.png

 Skalan och staplar "Position" "Order" "Manual" följer inställningar i objekt BaseActuatorA
 attributen PresMaxLimit, PresMinLimit i Order attributet (Ao signalen). Dessa attribut går
 att ändra tillfälligt online genom att klicka med musen i bilden.  

 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet
 CompModeAM som ligger i objekt BaseActuatorA, Se dessa objekt för mer info.
  
 @b Övervakning och felhantering
 Övervakning och viss felhantering hanteras utav BaseActuatorA objektet, Se
 detta objekt för mer info.

 @h1 Konfigurering
 BaseC3WayValve objektet hanterar 8 olika alternativ beroende på ställdonets utformning, se
 superklass BaseCValve för mer info.

 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler, se superklass BaseCValve
 för mer info.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseCValveFo.
 @image orm_basecvalvefo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseCValveSim.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk BaseCValve för mer beskrivning om BaseC3WayValve objektets attribut mm. 
 </attr>

</class>

####################################################################################

<class> BaseCDamper
 @Version
 @Author cs/je
 @summary Spjäll, analog styrning med 2 analoga signaler och 2 digitala
 @b Spjäll (analogstyrd)
 BaseCDamper objektet hanterar en analog orderutgång och en analog positionsingång och
 två digitala ingångar för spjällets stoppgränslägen samt Auto/Man mod. Alla ingångar
 går att konfigurera (välja bort).
 
 Auto/man mod kan konfigureras på flera sätt, se objekt CompModeAM. 
 
 Lokal mod styrning hanteras INTE av detta objekt förutom indikering i bilder och att
 ett larm genereras när lokal mod aktiveras "utifrån".   
  
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i BaseActuatorA
 och CompModeAM objekten. Objektet som sådan tillför egentligen bara ventilsymbolen i
 objektsbilden, attribut och URL länkar för ventilen/ställdonets egenskaper och data.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/CDamper
 @image orm_cdamper_gs.gif

 Dynamik:
 
  - Originalfärgen när spjällett INTE är stängd eller när inga gränslägen
    och ingen positionsgivare är konfigurerad.
  - Vit färg när ventilen anses stängd.
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basecvalve_og.png

 Skalan och staplar "Position" "Order" "Manual" följer inställningar i objekt BaseActuatorA
 attributen PresMaxLimit, PresMinLimit i Order attributet (Ao signalen). Dessa attribut går
 att ändra tillfälligt online genom att klicka med musen i bilden.  

 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet
 CompModeAM som ligger i objekt BaseActuatorA, Se dessa objekt för mer info.
  
 @b Övervakning och felhantering
 Övervakning och viss felhantering hanteras utav BaseActuatorA objektet, Se
 detta objekt för mer info.

 @h1 Konfigurering
 BaseCDamper objektet hanterar 8 olika alternativ beroende på ställdonets utformning:

  1 TwoSwitches            Gränsläge öppen och stängd och ingen analog lägesåterföring/position.
  2 SwitchOpen             Bara gränsläge öppen och ingen analog lägesåterföring/position.
  3 SwitchClosed           Bara gränsläge stängd och ingen analog lägesåterföring/position.
  4 NoSwitches             Inga gränslägen och ingen analog lägesåterföring/position.
  5 PositionTwoSwitches    Allt, gränsläge öppen och stängd och analog lägesåterföring/position.
  6 PositionSwitchOpen     Gränsläge öppen och analog lägesåterföring/position.
  7 PositionSwitchClosed   Gränsläge stängd och analog lägesåterföring/position.
  8 PositionNoSwitches     Inga gränslägen men analog lägesåterföring/position.

  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - Order         Ao
  - Position      Ai (valbart) 
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseCDamperFo.
 @image orm_basecdamperfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseCDamperSim.

 @b Se även
 @classlink CompModeAM basecomponent_compmodeam.html
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>Actuator
  Actuator objekt som hanterar spjällets ställdon, mod Auto/Man, dynamik i bilder
  och larm. Se länk BaseActuatorA för mer info.
 </attr>
 <attr>Damper
  Valve objekt som hanterar attribut för de vanligaste metoderna som man bör
  dokumentera sitt spjäll med. Se länk BaseDamper för mer info.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseCDamperFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseCDamper
 Funktionsobjekt för BaseCDamper 
 @image orm_basecdamperfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseCDamper
 i planthierarkin.
 
 PLC programmet i detta objekt är egentligen bara ett gränssnitt mot objektet
 BaseActuatorA.
   
  @b Se även
  @classlink CompModeAM basecomponent_compmodeam.html
  @classlink BaseActuatorA basecomponent_baseactuatora.html 
 <attr> ExtOrder 	
  Objektets ingång för den analoga styrreferensen som gäller i automatik mod (externt).
 </attr>
 <attr> LocalMode 	
   Ingången styr dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   OBS att ingången inte påverkar andra moder eller refernsutgången på något sätt. 
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol börjar blinka rött och ventil indikering
   i objektsbilden röd, dvs denna ingång används när man av någon anledning vill styra
   dynamiken i bilder från funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol och ventil indikering i objektsbilden
   blir gul, dvs denna ingång används när man av någon anledning vill styra dynamiken i bilder
   från funktionsobjektets ingångar.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas eller status för attributen IndError, IndWarning i objekt BaseActuatorA.
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

####################################################################################

<class> BasePropValve
 @Version
 @Author cs/je
 @summary Proportionalventil, 1 analog styrsignal
 @b Proportionalventil (analogstyrd)
 BasePropValve objektet hanterar en analog orderutgång samt Auto/Man mod. Auto/man
 mod kan konfigureras på flera sätt, se objekt CompModeAM. 
 
 Lokal mod styrning hanteras INTE av detta objekt förutom indikering i bilder och att
 ett larm genereras när lokal mod aktiveras "utifrån".   
  
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i CompModeAM
 objektet. Objektet som sådan tillför egentligen bara objektsbilden, attribut och
 URL länkar för ventilens egenskaper och data.
 
 @b Objektsymbol
 Det finns ingen grafisk objektsymbol för detta objekt (endast i objektsbilden).

 @b Objektsbild
  @image orm_basepropvalve_og.png

 Dynamik för objektsymbol i objektsbilden ovan:
 
  - Grön när det INTE är fel eller varning.
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd färg när det är fel.
 
    Via ingångar Error (röd) och Warning (gul) i funktionsobjektet kan man styra
    färger i objektsymbolen. 

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Skalan och staplar "Order" "manual" följer inställningar i attributen PresMaxLimit,
 PresMinLimit i Order attributet (Ao signalen). Dessa attribut går att ändra tillfälligt
 online genom att klicka med musen i bilden.  

 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet CompModeAM,
 Se detta objekt för mer info.
  
 @b Övervakning och felhantering
 Det finns ingen övervakning och felhantering för detta objekt förutom ett larm att
 objektet är i lokal mod (går att konfigurera bort).

 @h1 Konfigurering

 @b Signaler
 Objektet innehåller en signal som ska kopplas till en I/O kanal:

  - Order         Ao
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BasePropValveFo.
 @image orm_basepropvalvefo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 Inget simuleringsobjekt finns för detta objekt.

 @b Se även
 <attr>Super 
  Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>Order
  Analogutgång för ventilens styrorder/referens.
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man och dynamik i bilder och larm för lokal mod. OBS
  lokal mod styrreferens hanteras inte. Se länk CompModeAM för mer info.
 </attr>
 <attr>IndError 
  Går hög när ingång Error för PLC funktionsobjektet är hög, objektsymbol blir röd.
 </attr>
 <attr>IndWarning 
  Går hög när ingång Warning för PLC funktionsobjektet är hög, objektsymbol blir gul.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BasePropValveFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseCDamper
 Funktionsobjekt för BaseCDamper 
 @image orm_basecdamperfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseCDamper
 i planthierarkin.
 
 PLC programmet i detta objekt är egentligen bara ett gränssnitt mot objektet
 BaseActuatorA.
   
  @b Se även
  @classlink CompModeAM basecomponent_compmodeam.html
  @classlink BaseActuatorA basecomponent_baseactuatora.html 
 <attr> ExtOrder 	
  Objektets ingång för den analoga styrreferensen som gäller i automatik mod.
 </attr>
 <attr> LocalMode 	
   Ingången styr dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Lokal mod går att välja bort via inbyggda CompModeAM objektets attribut OpNoLocal.
   Larmet går att välja bort via inbyggda CompModeAM objektets attribut OpDisableLocalAlarm.

   OBS att ingången inte påverkar andra moder eller refernsutgången på något sätt!
 </attr>
 <attr>Error 
   Ingång Error (1:a) gör att ventilens objektsymbol blir röd i objektsbilden , dvs denna
   ingång används när man av någon anledning vill styra dynamiken i bilder från
   funktionsobjektets ingångar.
 </attr>
 <attr>Warning 
   Ingång Warning (1:a) gör att ventilens objektsymbol blir gul i objektsbilden , dvs denna
   ingång används när man av någon anledning vill styra dynamiken i bilder från
   funktionsobjektets ingångar.
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

####################################################################################

<class> BaseMValve
 @Version
 @Author cs/je
 @summary Magnetventil, digital styrning med 3 digitala signaler
 @b Magnetventil 
 BaseMValve objektet hanteras en digital utgång för öppna/stäng och två digitala ingångar
 för ventilens gränslägen samt Auto/Man/lokal mod. Alla ingångar går att konfigurera (välja bort).
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/MValve eller MValveNoSwitches
 @image orm_mvalve_gs.gif

 Dynamik:
 
  - Originalfärgen när ventilen är öppen.
  - Vit färg när ventilen är stängd.
  - Grå färg när ventilen inget gränsläge är påverkat.
  - Gul färg när det är varning, till exempel i lokalt mod. 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
        
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basemvalve_og.png

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeDM, Se detta objekt för mer info om hur man konfiguerar moder.
  
 @b Övervakning och felhantering
 BaseMValve har flera övervakningar som genererar larm när man använder gränslägen:
 
 
 -Gränslägesfel   Övervakning att gränslägen beter sig riktigt i förhållande till styrorder.
 
 Övervakning tidfel (timeout) när gränslägen används ställs in i tidsattributet SwitchAlarmDelay.
 Detta fel påverkar INTE mod.

 Om man väljer att inte använda objektets hantering av moder, utan lägger denna hantering
 utanför objektet,är det viktigt återställa order vid felstatus, dvs man bör ta ner styrorder 
 på funktionsobjektets ingångar vid fel för att förhindra oönskade återstarter.
 
 @h1 Konfigurering
 BaseMValve objektet hanterar 4 olika alternativ för Di signaler gränslägen:

  1 TwoSwitches            Gränsläge öppen och stängd.
  2 SwitchOpen             Bara gränsläge öppen.
  3 SwitchClosed           Bara gränsläge stängd.
  4 NoSwitches             Inga gränslägen.

  OBS! valet NoSwitches innebär att också att objektsymbol MValveNoSwitches ska användas


  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - Order         Do
  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMValveFo.
 @image orm_basemvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering använder man funktionsobjektet BaseMValveSim.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>Order
 Digitalutgång för ventilens styrorder öppna
 <attr>SwitchOpen
  Digitalingång stoppgränsläge för öppet läge.
 </attr>
 <attr>SwitchClosed
  Digitalingång Stoppgränsläge för stängt läge.
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/Lokalt och dynamik i bilder och larm för lokal mod.
  Se länk CompModeDM för mer info.
  
  OBS! Att INGA gränslägesfel påverkar mod, dvs. felhantering som ska påverka mod
  måste programmeras.
 </attr>
 <attr>SwitchAlarmDelay
  Tidsfördröjning i sekunder larm vid gränslägesfel.
 </attr>
 <attr>SwitchAlarmText
  Larmtext för gränslägesfel (A-larm).
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt, objektsymbol börjar blinka rött
 </attr>
 <attr>IndWarning 
  Går hög om B-larm är aktivt, objektsymbol blir gul (fast).
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. OBS att ingen påverkan av moder görs, dvs auto går inte över i manuellt
  om ExtInterlock går hög.
 </attr>
 <attr>PosEnum
  Uppräkningsattribut för att hålla reda på positioner.
 </attr>
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
 IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
 Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseMValveFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseMValve
 Funktionsobjekt för BaseMValve 
 @image orm_basemvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseMValve
 i planthierarkin.
 
 @b Se även
  @classlink CompModeDM basecomponent_compmodedm.html 
 <attr> ExtOrder
   Ingång för att styra order utgången (öppna) i automatik mod.  
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång, ska vara falsk annars tas orderutgång ner i ALLA moder. OBS att ingen
  påverkan av moder görs, dvs auto går inte över i manuellt om ExtInterlock går hög.
 </attr>
 <attr> LocalMode 	
    Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
    Dvs ingång LocalOrder styr ventilen. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   LocalUsed måste konfigureras i CompModeDM objektet för att kunna sätta lokal mod.
 </attr>
 <attr> LocalOrder	
  Ingång för att styra order utgången (öppna) i lokal mod.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

<class> BaseM3WayValve
 @Version
 @Author cs/je
 @summary 3vägs magnetventil, digital styrning med 3 digitala signaler
 @b 3-vägs magnetventil  
 BaseM3WayValve objektet hanteras en digital utgång för öppna/stäng och två digitala ingångar
 för ventilens gränslägen samt Auto/Man/lokal mod. Alla ingångar går att konfigurera
 (välja bort).
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/M3WayValve
 @image orm_m3wayvalve_gs.gif

 Dynamik:
 
   En trevägsventil har tre portar där en port alltid är öppen till en annan (shuntventil).
   Portarna (trianglar) som kan stängas är märkta med linjer.
 
   En öppen port färgas normalt med originalfärgen, dvs när porten överst längst till höger har
   originalfärgen räknas det som en "öppen ventil" och när den understa porten har originalfärgen
   räknas det som en "stängd ventilen". Den vänstra översta porten (inlopp) har alltid normalt
   originalfärgen.

  - Originalfärgen växlar mellan högra porten (öppen) och understa porten(stängd). 
  - Vit färg när porten (triangel) anses stängd.
  - Grå färg när ventilen inte är stängd eller öppen om gränslägen finns (mitt i mellan).
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.
  
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod (om inte lokal!)
    L    Lokal mod
        
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basem3wayvalve_og.png

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeDM, Se detta objekt för mer info om hur man konfiguerar moder.
  
 @b Övervakning och felhantering
 BaseM3WayValve har flera övervakningar som genererar larm när man använder gränslägen:
 
 
 -Gränslägesfel   Övervakning att gränslägen beter sig riktigt i förhållande till styrorder.
 
 Övervakning tidfel (timeout) när gränslägen används ställs in i tidsattributet SwitchAlarmDelay.
 Detta fel påverkar INTE mod.

 OBS! När man styr ventilens Auto/man mod externt eller lokalt är det viktigt att "återkoppla"
 till sitt program (återställa order), dvs man bör ta ner styrorder på funktionsobjektets
 ingångar vid fel för att förhindra oönskade rörelser i maskin. 
 
 @h1 Konfigurering
 BaseM3WayValve objektet hanterar 4 olika alternativ beroende på ventilens utformning, se
 superklass BaseMValve för mer info.

 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler, se superklass BaseMValve
 för mer info.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMValveFo.
 @image orm_basemvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering använder man funktionsobjektet BaseMValveSim.
 
 @b Se även
 @classlink CompModeDM basecomponent_compmodedm.html 
 <attr>Super 
 Superklass, klicka på länk BaseMValve för mer beskrivning om BaseM3WayValve objektets attribut mm.
 </attr>

</class>

####################################################################################

<class> BaseMDamper
 @Version
 @Author cs/je
 @summary Spjäll, digital styrning med 3 digitala signaler
 @b Spjäll (digitalstyrd)
 BaseMDamper objektet hanteras en digital utgång för öppna/stäng och två digitala ingångar
 för spjällets gränslägen samt Auto/Man/lokal mod. Alla ingångar går att konfigurera
 (välja bort).
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/MDamper
 @image orm_mdamper_gs.gif

 Dynamik:
 
  - Originalfärgen när spjället är öppen om gränsläge finns, annars när den öppnar.
  - Vit färg när spjället är stängd om gränslägen finns, annars när den inte öppnar.
  - Grå färg när spjället inte är stängd eller öppen om gränslägen finns (mitt i mellan).
  - Gul färg när det är varning (bl.a lokalt läge). 
  - Röd blinkande färg när det är fel.

    Aktuell mod visas med bokstäver:
    
    M    Manuell mod (om inte lokal!)
    L    Lokal mod
        
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basemdamper_og.png

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeDM, Se detta objekt för mer info om hur man konfiguerar moder.
  
 @b Övervakning och felhantering
 BaseMDamper har flera övervakningar som genererar larm när man använder gränslägen:
 
 
 -Gränslägesfel   Övervakning att gränslägen beter sig riktigt i förhållande till styrorder.
 
 Övervakning tidfel (timeout) när gränslägen används ställs in i tidsattributet SwitchAlarmDelay.
 Detta fel påverkar INTE mod.

 OBS! När man styr ventilens Auto/man mod externt eller lokalt är det viktigt att "återkoppla"
 till sitt program (återställa order), dvs man bör ta ner styrorder på funktionsobjektets
 ingångar vid fel för att förhindra oönskade rörelser i maskin. 
 
 @h1 Konfigurering
 BaseMDamper objektet hanterar 4 olika alternativ beroende på ventilens utformning, se
 superklass BaseMValve för mer info.

 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler, se superklass BaseCValve
 för mer info.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMValveFo.
 @image orm_basemvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering använder man funktionsobjektet BaseMValveSim.
 
 @b Se även
 @classlink CompModeDM basecomponent_compmodedm.html 
 <attr>Super 
 Superklass, klicka på länk BaseMValve för mer beskrivning om BaseMDamper objektets attribut mm.
 </attr>

</class>

####################################################################################

<class> BaseDirValve
 @Version
 @Author cs/je
 @summary Riktningsventil, digital styrd med 2 signaler
 Riktningsventil, 2-lägesstyrd med mittenläge.
 BaseDirValve objektet hanterar två digitala utgångar och Auto/Man mod för att
 styra en ventil med mittenläge (5/3 ventil).
 
 Knappar i bilder kan konfigureras för olika händelser såsom Öka/Minska, Upp/Ner,
 Fram/Back och Öppna/Stäng.
 
 Funktionen (PLC programmen) för detta objekt ligger i själva verket i CompModeD2M objektet.
  
 @b Objektsymbol
 Det finns ingen grafisk symbol för detta objekt
  
 @b Objektsbild
 @image orm_basedirvalve_og.png

 Bilden visar när man manuellt beordrat öka, dvs utgången OrderIncr är 1.

 @b Ingen mod styrning
 @image orm_basedirvalve_example1_og.png
 
 Bilden ovan visar en konfiguration där ventilen inte har någon mod styrning (inga knappar i bilden).
 Dvs ingångar ExtOrderIncr, ExtOrderDecr i funktionsobjektet styr.
 
 Genom att konfigurera det inbyggda CompModeD2M objektet attributet OpAutoOnly till 1 får man denna
 bild/funktion. 
 
 Ventilen visas i ett läge där den är förreglad via ingången ExtInterlock i funktionsobjektet
 (röd indikator Interlock i bilden).  
 
 @b Mod
 Dom olika moder Auto/Manuell som kan förekomma hanteras utav mod objektet CompModeD2M, se
 detta objekt för mer info.
  
 @b Övervakning och felhantering
 Ingen direkt övervakning och felhantering hanteras utav objektet.

 @h1 Konfigurering
 @b Component Configuration
 
  - IncrDecr     Väljer knappar i objektsbild med text Öka/Minska
  - UpDown       Väljer knappar i objektsbild med text Upp/Ner
  - ForwBack     Väljer knappar i objektsbild med text Fram/Back
  - OpenClose    Väljer knappar i objektsbild med text Öppna/Stäng 
  
 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - OrderIncr     Do
  - OrderDecr     Do
  
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseDirValve.
 @image orm_basedirvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 Inget simuleringsobjekt finns för detta objekt.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
 Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
 (ConfigureComponent method) 
 </attr>
 <attr>OrderIncr
 Digitalutgång för ventilens styrorder öka (öppna, upp, fram)
 </attr>
 <attr>OrderDecr
 Digitalutgång för ventilens styrorder minska (stäng, ner, back)
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man och dynamik i bilde.
  Se länk CompModeD2M för mer info.
 </attr>
 <attr>IndWarning 
 Går hög när ingången ExtInterlock går hög i funktionsobjektet, objektsymbolen blir också gul
 i objektsbilden.
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. OBS att ingen påverkan av moder görs, dvs auto går inte över i manuellt
  om ExtInterlock går hög.
 </attr>
 <attr>PositionEnum
  Uppräkningsattribut för att hålla reda på positioner.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseDirValveFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseDirValve
 Funktionsobjekt för BaseDirValve 
 @image orm_basedirvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseDirValve
 i planthierarkin.
 
 @b Se även
  @classlink CompModeD2M basecomponent_compmoded2m.html
 <attr> ExtOrderIncr
   Ingång för att styra orderIncr utgången (öka) i automatik mod.  
 </attr>
 <attr> ExtOrderDecr
   Ingång för att styra orderDecr utgången (minska) i automatik mod.
 </attr>
 <attr>ExtInterlock 
   Förreglingsingång, ska vara falsk annars tas orderutgångar ner i ALLA moder. OBS att ingen
   påverkan av moder görs, dvs auto går inte över i manuellt om ExtInterlock går hög.
   
   Om ingången är 1 sätter den också IndWarning till 1 som i sin tur gör objektsymbolen gul i
   objektsbilden.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

####################################################################################

<class> BaseManValve
 @Version
 @Author cs/je
 @summary Handventil med två gränslägen.
 Handventil med två gränslägen.
 BaseManValve objektet hanterar två digitala ingångar för öppet och stängt läge. 
 Ingångar går att konfigurera (välja bort).
 
 @b Objektsymbol
 Grafiska symboler för detta objekt är:
 
   BaseComponent/
  -ManValve
  -ManValveNoSwitches  
  -ManValveSwitchClosed
  -ManValveSwitchOpen
  -ManValveTwoSwitches

 Konfigurationsvalet bestämmer vilken symbol som bör användas.
  
 @image orm_manvalve_gs.gif

 Dynamik:
 
  - Originalfärgen när ventilen är öppen.
  - Vit färg när ventilen är stängd.
  - Grå färg när ventilen inte är stängd eller öppen om gränslägen finns (mitt i mellan).
  - Röd blinkande färg när det är fel (båda gränslägen påverkade).

    Objektets metoder (menyval) öppnas med höger musknapp.
 
 @b Objektsbild
 @image orm_basemanvalve_og.png

 Om ventilen inte har några gränslägen kan man manuellt i objektbilden sätta öppen eller stängt
 läge. För att välja denna funktion ska attribut OpIndication ställas till 1, dessutom ska
 objektsymbolen ManValveNoSwitches användas. 

 @b Inga gränslägen och manuell styrd dynamik i bilder
 @image orm_basemanvalve_example1_og.gif
 
 Bilden ovan visar en konfiguration där ventilen inte har några gränslägen men manuell
 möjlighet (knappar i bilden) att visa öppet eller stängt läge.
 
 Genom att konfigurera attributet OpIndication till 1 får man denna bild/funktion. 
  
 @b Övervakning och felhantering
 BaseManValve övervakar och genererar larm:
  
 -Gränslägesfel   Övervakning att inte båda gränslägen är påverkade samtidigt.

 @h1 Konfigurering
 BaseManValve objektet hanterar 4 olika alternativ för Di signaler gränslägen:

  1 TwoSwitches            Gränsläge öppen och stängd.
  2 SwitchOpen             Bara gränsläge öppen.
  3 SwitchClosed           Bara gränsläge stängd.
  4 NoSwitches             Inga gränslägen.

  OBS! valet NoSwitches innebär att också att objektsymbol ManValveNoSwitches ska användas

  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - SwitchOpen    Di (valbart)
  - SwitchClosed  Di (valbart)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseManValveFo.
 @image orm_basemanvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 Inget simulering finns för detta objekt.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method) 
 <attr>SwitchOpen
  Digitalingång stoppgränsläge för öppet läge.
 </attr>
 <attr>SwitchClosed
  Digitalingång Stoppgränsläge för stängt läge.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt, objektsymbol börjar blinka rött
 </attr>
 <attr>PosEnum
  Uppräkningsattribut för att hålla reda på positioner.
 </attr>
 <attr>IndClosed
  Indikerar att ventilen är stängd när inställningsattribut OpIndication används (1:a).
 </attr>
 <attr>OpIndication
  Om ventilen inte har några gränslägen kan man manuellt i objektbilden välja öppen eller stängt
  läge, för att få denna denna funktion ska attribut ställas till 1, dessutom ska objektsymbolen
  ManValveNoSwitches användas. 
 </attr> 
 <attr>OpIndBackup
  Backup för att minnas ventilens läge IndClosed när OpIndication används (1:a).
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseManValveFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseManValve
 Funktionsobjekt för BaseManValve 
 @image orm_basemanvalvefo_fo.png
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseManValve
 i planthierarkin.
 
 @b Se även
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>

 </class>

##############################################################################

 <class> BaseCircuitBreaker
 @Version
 @Author cs/je
 @Summary Övervakning effektbrytare (MCCB).
 Objekt BaseCircuitBreaker hanterar övervakningen och en tillhörande objektsbild för
 en effektbrytare typ MCCB eller liknande.
 
 Effekbrytare används för att skydda den elektriska anläggningen mot kortslutning,
 överströmmar och som huvudbrytare/säkring osv. 
 
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 brytaren ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet.
 Detta påverkar inte larmutgången Tripped i PLC funktionsobjektet.
 
 @b Objektbild
 @image orm_basecircuitbreaker_og.png

 Indikatorn Tripped (normalt grön) i bilden blir röd när brytaren är frånslagen, röda knappen
 trycks in och den grön går utåt, brytarens kontaktsymbol intar öppet läge.

 Indikator Supervision disabled visar grönt om övervakningen (larm) är bortkopplad.

 @b Exempel
 @image orm_component_example1.png
 Bilden visar när en BaseCircuitBreaker används som en huvudbrytare/säkring ihop
 med andra komponenter.

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal NotTripped som ska kopplas till Di-kanalen.

 @b Övervakning
 BaseCircuitBreaker har en larmutgång och en inställning som kan ändras:
 
 -AlarmText     Larmtext som kan ändras

 -Tripped       Larmutgång i PLC funktionsobjektet, status om larm utlöst är 
                aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseCircuitBreakerFo.
 @image orm_basecircuitbreakerfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 Det behövs inget simuleringsobjekt för BaseCircuitBreaker, men det finns en
 simuleringsbild från vilken Tripped signalen kan påverkas.
 @image orm_basecircuitbreakersim_og.png
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>
 <attr>NotTripped
 Digital Di ingången som är 0 vid utlöst brytare. Kan inverteras i kanal/kortobjektet
 "InvMask".
 </attr>
 <attr>AlarmText
 Larmtext när larmutgång aktiveras (A-larm). Kan kopplas bort via ingång SupDisabled
 på PLC funktionsobjektet.
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS att larmutgången AlarmStatus och färgstyrning i bilder INTE
 påverkas.
 <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> BaseCircuitBreakerFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för CircuitBreaker
 Funktionsobjekt för CircuitBreaker. 

 @image orm_basecircuitbreakerfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseCircuitBreaker i
 planthierarkin.

 @b Se även
 <attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
 larmutgången Tripped INTE kopplas bort.
 </attr>
 <attr>Tripped 
 Larmutgång som är hög vid utlöst brytare.
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>

##############################################################################

 <class> BaseSafetySwitch
 @Version
 @Author cs/je
 @Summary Övervakning effektbrytare (MCCB).
 @b Säkerhetsbrytare (arbetsbrytare, startspärr)
 Objekt BaseSafetySwitch hanterar övervakningen och en tillhörande objektsbild för
 en säkerhetsbrytare.
 
 Säkerhetsbrytare används för att förhindra att en utrustning eller anläggningsdel
 oavsiktligt inkopplas medan elektriskt eller mekaniskt arbete utförs (personskydd).
 
 Objektet övervakar när en digital ingång går låg och A-larm genereras. Vill man att
 brytaren ska larma/aktiveras när ingången går hög får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet.
 Detta påverkar inte utgången On i PLC funktionsobjektet.
 
 @b Objektbild
 @image orm_basesafetyswitch_og.png

 Indikatorn On (normalt grön) i bilden blir grå när brytaren är frånslagen, vredet vrids över
 till 0-läget och ett rött hänglås visas, brytarens kontaktsymbol intar öppet läge.

 Indikator Supervision disabled visar grönt om övervakningen (larm) är bortkopplad.

 @b Exempel
 @image orm_component_example1.png
 Bilden visar där en säkerhetsbrytare används för att koppla bort en elmotor från 
 elanläggningen (personskydd).
 
 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal On som ska kopplas till Di-kanalen.

 @b Övervakning
 BaseSafetySwitch har en utgång och en inställning som kan ändras:
 
 -AlarmText     Larmtext som kan ändras

 -On            Utgång i PLC funktionsobjektet, status om  brytaren är till (1:a) eller inte (0:a)
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseSafetySwitchFo.
 @image orm_basesafetyswitchfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 Det behövs inget simuleringsobjekt för BaseSafetySwitch, men det finns en
 simuleringsbild från vilken On signalen kan påverkas.
 @image orm_basesafetyswitchsim_og.png
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>
 <attr>On
 Digital Di ingången som är 1 vid tillslagen brytare. Kan inverteras i kanal/kortobjektet
 "InvMask".
 </attr>
 <attr>AlarmText
 Larmtext när larmutgång aktiveras (A-larm). Kan kopplas bort via ingång SupDisabled
 på PLC funktionsobjektet.
 <attr>SupDisabled 
 Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
 PLC funktionsobjektet. OBS att larmutgången AlarmStatus och färgstyrning i bilder INTE
 påverkas.
 <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> BaseSafetySwitchFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseSafetySwitch
 Funktionsobjekt för BaseSafetySwitch. 

 @image orm_basesafetyswitchfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseSafetySwitch i
 planthierarkin.

 @b Se även
 <attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
 utgången On INTE kopplas bort.
 </attr>
 <attr>On 
 Utgång som är hög vid tillslagen brytare.
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>

##############################################################################

 <class> BaseOverloadRelay
 @Version
 @Author cs/je
 @Summary Övervakning överströmsrelä (motorskydd).
 @b Överströmsrelä (motorskydd)
 Objekt BaseOverloadRelay hanterar övervakningen och en tillhörande objektsbild för
 ett överströmsrelä/motorskydd eller liknande (normalt monterat på en kontaktor). 
 
 Objektet övervakar när en digital ingång går hög och A-larm genereras. Vill man att
 skyddet ska larma/aktiveras när ingången går låg får man ändra attributet "InvMask"
 på kanal/kortobjektet för Di signalen.

 Man kan hindra larm att aktiveras via ingång DisableSup i PLC funktionsobjektet, OBS!
 att detta INTE påverkar larmutgången Overload i PLC funktionsobjektet.
 
 @b Objektbild
 @image orm_baseoverloadrelay_og.png

 Indikatorn Overload blir röd när skyddet löser ut.

 @b Exempel
 @image orm_component_example2.gif
 Bilden visar när en BaseOverloadRelay används som motorskydd ihop med en kontaktor.

 @h1 Konfiguration
 @b Signal
 Objektet innehåller en Di signal Overload som ska kopplas till Di-kanalen.

 @b Övervakning
 BaseOverloadRelay har en larmutgång och en inställning som kan ändras:
 
 -AlarmText     Larmtext överströmsrelä utlöst som kan ändras

 -Overload      Larmutgång i PLC funktionsobjektet, status om larm utlöst är aktiverat (1:a) eller inte (0:a)   

 @b Plc kod
 För PLC programmering används funktionsobjektet BaseOverloadRelayFo.
 @image orm_baseoverloadrelayfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 Inget simuleringsobjekt finns för detta objekt.
 
 @b Se även
 <attr>Super 
 Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>
 <attr>Overload
 Digital Di ingången som är 1 vid utlöst överströmsskydd. Kan inverteras i kanal/kortobjektet
 "InvMask".
 </attr>
 <attr>AlarmText
 Larmtext när larmutgång aktiveras (A-larm) vid utlöst skydd. Kan kopplas bort via ingång
 DisabledSup på PLC funktionsobjektet.
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att larmutgången Overload i PLC funktionsobjektet och färgstyrning
  i bilder INTE påverkas.
 <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> BaseOverloadRelayFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseOverloadRelay
 Funktionsobjekt för BaseOverloadRelay. 

 @image orm_baseoverloadrelayfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseOverloadRelayFo i
 planthierarkin.

 @b Se även
 <attr>DisableSup 
 Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
 larmutgången Overload INTE kopplas bort.
 </attr>
 <attr>Overload
 Larmutgång som är hög vid larm/utlöst överström/motorskydd.
 </attr>
 <attr> PlcConnect
 Referens till objektet i planthierarkin.
 </attr>
 
 </class>

##############################################################################

 <class> BaseContactor
 @Version
 @Author cs/je
 @Summary Kontaktor.
 @b Kontaktor
 Objekt BaseContactor hanterar styrning, övervakning och en tillhörande objektsbild
 för en kontaktor, relä eller liknande.
 
 Kontaktorer, relän används normalt när en styrspänning fjärrifrån styr slutande och
 öppnande av en annan elektriskt krets (normalt högre spänning och ström).

 Objektet hanterar en eller två utgångar för att manövrera en kontaktorn/brytare
 och en digital ingång för kontaktorsvaret, dessa går att konfigurera (välja bort).
  
 Konfiguerar man kontaktorn med två Do utgångar ger dessa en tillslagspuls och en
 frånslagspuls alternativt tillslagspuls och en inverterad frånutgång utan puls. Se
 "Exempel styrsätt" nedan för mer info.

 Kontaktorns olika manöverfunktioner blir alltså:

  1 En utgång som drar kontaktorn och släpper kontaktorn, dvs det vanligaste styrsättet.
  
  2 Två utgångar med puls där ena drar kontaktorn (självhållning) och den andra släpper/bryter
    upp kontaktorn.
  
  3 Två utgångar, en med till puls som drar kontaktorn/brytaren och den andra som släpper
    kontaktorn/brytaren om utgången faller (0:a). 
 
 Använder man kontaktorsvar och man inte får/tappar kontaktorsvar genereras ett larm när man 
 använder en utgång (alternativ 1 ovan). Man kan hindra larm att aktiveras via ingång 
 DisableSup i PLC funktionsobjektet, OBS! Att detta INTE påverkar larmutgången Error i 
 funktionsobjektet. Vill man ha larm i alternativ 2 och 3 ovan får man programmera det själv.
 
 @b Objektbild
 @image orm_basecontactor_og.png
 
 Indikatorer:

 - Order     Visar status på orderutgången (tillslag av kontaktorn).
 - Feedback  Visar status på kontaktorsvaret om ett sådant finns.
 - TimeLimit Visar "TimeOut" tid i sekunder på kontaktorsvaret innan larm aktiveras.

 Indikator Order och TimeLimit tas bort ur bilden när man använder två utgångar, dvs när man
 har konfigurerat kontaktorn TwoOrderFeedback (pulsstyrning).
  
 Indikator Feedback blir röd i minst 2s vid fel på kontaktorsvaret.   

 @b Exempel komponenter 
 @image orm_component_example1.png
 Bilden visar en objektsbild när en BaseContactor används som en huvudkontaktor för en 
 frekvensomriktare ihop med andra elektriska komponenter.
 
 @h1 Konfiguration
 BaseContactor objektet hanterar 5 olika alternativ:

  1 OrderFeedback          Manövrering av kontaktor och kontaktorsvar.
  2 OrderNoFeedback        Manövrering av kontaktor men inget kontaktorsvar.
  3 FeedabckNoOrder        Ingen manövrering av kontaktor men kontaktorsvar.
  4 NoOrderNoFeedback      Inga IO signaler alls!
  5 TwoOrderFeedback       Manövrering av kontaktor med två utgångar (puls) och kontaktorsvar.


  När kontaktorn är konfigurerad som alternativ 5 med två Do utgångar (puls) blir funktionen
  så här:
 
  -Di ingång för kontaktorsvar (feedback) måste användas (status visas i bilder mm).
  -Larm kontaktorsvar (feedback) och error utgången i funktionsbobjektet används inte.
  -Frånorder kan konfigureras att vara puls eller inte puls med inverterad funktion.
  -Indikator order i objektsbilder tas bort.
  
  Alternativ 5 använder man när kontaktorns elkonstruktionen bygger på till/från puls
  styrning. Dvs när man INTE vill att kontaktorn ska gå ifrån om PLC dör eller styrning
  samtidigt sker från flera oberoende "manöversystem" eller liknande. Se "Exempel styrsätt"
  nedan för mer info.
 
 @b Signaler
 Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - Order         Do (valbart) 
  - OrderOff      Do (valbart, används bara vid konfiguration TwoOrderFeedback) 
  - Feedback      Di (valbart)
  
 Ska ingången inverteras för rätt funktion får man ändra attributet "InvMask" på
 kanal/kortobjektet för Di signalen.

 @b Övervakning och felhantering
 BaseContactor har en larmutgång och inställningar som kan ändras:
 
 -AlarmText    Larmtext för kontaktorsvar som kan ändras.
 
 -FbTimeLimit  Kontaktorsvarstid innan larm aktiveras om svar uteblir.

 -Error        Larmutgång i PLC funktionsobjektet, larm vid fel på kontaktorsvar (aktiverad minst 2s).   

 OBS!
 Att Error utgången i PLC funktionsobjektet ska användas för att återställa beordring för att
 förhindra oönskat tillslag av kontaktorn vid kontaktorsvarfel, dvs det är programmerarens
 uppgift att ta hänsyn till detta fel!

 OBS!
 När kontaktorn är konfigurerad (TwoOrderFeedback) med två Do utgångar (puls) blir funktionen så här:
 
  -Larm kontaktorsvar (feedback) används inte, dvs attributen AlarmText och FbTimeLimit.
  -Error utgången används inte pga att övervakning av kontaktorsvar kopplas bort.
  -Utgång PulseControl [pco] i funktionsobjektet går hög (används bara i speciella fall).

   Orderingångar [on] och [off] bör styras av kod som genererar "edge-pulser" pga. kontaktorns
   inbyggda pulslogik.

 @b Exempel styrsätt
 Exemplen 1 till 4 nedan visar objektet/kontaktorns olika tänkta styrsätt och vad som kan vara bra
 att veta. Först beskrivs den enklaste funktionen och därefter mera komplexa styrningar med
 pulshantering på styrutgångarna.
 
 Eftersom elektriska manöverkretsar kan se ut "hur som helst" bör man alltid studera dessa och anpassa
 PLC koden för kontaktor objektet så man undviker oönskade till och frånslag (felmanövreringar). 

 @bExempel 1
 En Do utgång och felhantering: 
 @image orm_component_example7.gif
  
  Bilden visar när kontaktorn är konfigurerad med en Do utgång vilket innebär att off ingången och
  pco utgången på funktionsobjektet INTE används.
  
  Exemplet visar en styrning när den elektriska manöverkretsen för en kontaktor har krav på att
  tillslaget och frånslaget ALLTID ska ske från PLC/Proview.  

  Den interna felhantering i funktionsobjektet sätter utgången err hög när kontaktorsvaret inte
  kommer/tappas inom en viss tid (FbTimeLimit) och A-larm genereras. Larmet går att koppla bort
  genom att sätta ingången dis hög.
    
  Grafen visar vad som händer när kontaktorsvaret försvinner (gul ruta med texten Feedback lost),
  dvs tiden löper ut och err utgången ser till att ingången on på funktionsobjketet går låg och 
  därmed går Do Order också låg.
  
  Om man INTE tar ner signalen på on ingången när err utgången går hög ligger err utgången
  och Do order hög hela tiden. Dvs man bör alltid se till att man programmerar sin kod på
  sådant sätt att man går låg på ingången on vid fel om man vill förhindra oönskade tillslag
  efter ett fel i den elektriska manöverkretsen.

 @bExempel 2
 Tillpuls och frånslagspuls:
 @image orm_component_example8.gif
  
  Bilden visar när kontaktorn är konfigurerad med två utgångar (puls) vilket innebär att dis
  ingången och err utgången på funktionsobjektet INTE används pga att interna larmhanteringen
  i objektet alltid kopplas bort när två Do utgångar används. Interna attributet OpNoOffPuls är
  satt till 0 (default) vilket innebär att OrderOff utgången ger puls.  
  
  Exemplet visar en styrning när den elektriska manöverkretsen för en kontaktor styrs av pulser.
  Detta innebär att om PLC/Proview haltar (IO dör) kan en dragen kontaktorn forfarande ligga
  dragen.

  Eftersom den interna felhantering kopplas bort i funktionsobjektet när man använder två utgångar
  får man själv tänka ut vilken felhanteringen man vill ha. Exempel 3-4 nedan visar hur detta kan
  gå till.
  
  Styrning via ingångar on (A i bild) och off (B i bild) bör aktiveras av "edge-pulser". Grafen
  visar när styrsignal on ligger hög längre än en edge-puls för att förtydliga hur
  kontaktorobjektet arbetar.
  
  Tillslagspulsen är alltid 1s och frånslagspulsen 1,5s oavsett hur kort eller lång tid ingångar
  on/off är höga på funktionsobjektet. Frånslagspuls kan inte ske på första PLC programvarvet
  (first scan) pga kod i funktionsobjektet, dvs vill man ha en frånslagspuls vid programstart får
  man vänta ett varv innan man sätter off ingången hög.
  
  Det finns inte heller någon förregling mellan on och off ingångarna vilket innebär att man kan
  få de pulsade Do utgångarna att pulsa samtidigt om dessa ingångar är höga samtidigt.
  
  Grafen visar vad som händer när kontaktorsvaret försvinner (gul ruta med texten Feedback lost),
  dvs det händer ingenting! Exemplen 3-4 nedan visar hur Do utgångar påverkas vid kontaktorsvar fel.
   
 @bExempel 3
 Tillpuls och frånslagspuls från två ställen:
 @image orm_component_example9.gif
  
  Bilden visar när kontaktorn är konfigurerad med två utgångar (puls) och interna attributet
  OpNoOffPuls är satt till 0 (default) vilket innebär att OrderOff utgången ger puls.
       
  Exemplet visar en styrning när den elektriska manöverkretsen för en kontaktor styrs av pulser
  och man utanför PLC systemet också manuellt via tryckknappar kan manövrera kontaktorn, dvs
  kontaktorn styrs av två olika "manöversystem". Normalt när man styr på detta sättet har man ingen
  övervakning på kontaktorsvaret pga den yttre styrningen medvetet kan slå ifrån/till kontaktorn.
  
  Eftersom den interna felhantering kopplas bort i funktionsobjektet när man använder två utgångar
  får man själv tänka ut vilken felhanteringen man vill ha. Koden i bilden med wait objektet
  FbTimeOut visar hur detta kan gå till.
  
  Funktionen blir alltså med denna kod så här:
  
   - Pulstyrda PLC Do utgångar för till och frånslag som aktiveras av "edge-pulser" på ingångar 
     on och off.
   - Två olika manöversystem, PLC och tryckknappar direkt i den elektriska manöverkretsen.
   - Övervakning av kontaktorsvaret när man slagit till kontaktorn via PLC.
   - Ingen övervakning av kontaktorsvaret när man slagit till kontaktorn via tryckknappen 
     "Button on"
  
  Kontaktorn i objekten/aggregaten BaseMotorAggr, BaseFcPPO3MotorAggr, BaseFcPPO5MotorAggr och
  ABB_ACS800MotorAggr fungerar i princip som denna Plc kod, dvs ingångar on (A i bild) och off 
  (B i bild) "edge-pulserna" i grafen speglar när operatör trycker på knapparna start och stopp 
  i objektsbilden för dessa aggregat.
  
 @bExempel 4
 Tillpuls och frånslag utan puls
 @image orm_component_example10.gif

  Bilden visar när kontaktorn är konfigurerad med två utgångar och interna attributet OpNoOffPuls är
  satt till 1 vilket innebär att Do Order ger tillslagspuls och Do OrderOff följer statusen på
  funktionsobjektets ingång on. Ingångar dis, off och utgång err på funktionsobjektet används INTE
  vid denna konfiguration.
  
  Exemplet visar en styrning när kravet är tillslagspuls i den elektriska manöverkretsen för en
  effekbrytare samtidigt som man vill ha ett frånslag om PLC/Proview haltar (IO dör).

  Eftersom den interna felhantering kopplas bort i funktionsobjektet när man använder två
  utgångar får man själv tänka ut vilken felhanteringen man vill ha. Koden i bilden med wait
  objektet FbTimeOut visar hur detta kan gå till.
    
  Grafen visar vad som händer när kontaktorsvaret försvinner (gul ruta med texten Feedback lost),
  dvs tiden löper ut. Wait objektets utgång går hög, vilket leder till att ingången on på
  funktionsobjektet går låg och därmed går Do OrderOff också låg.
  
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseContactorFo.
 @image orm_basecontactorfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Simulering
 För simulering använder man funktionsobjektet BaseContactorSim.
 
 @b Se även
 <attr>Super 
  Superklass, klicka på länk Component för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method) 
 </attr>
 <attr>Order
  Digitalutgång (1:a) för att manövrera, slå till kontaktorn. Beroende på konfiguration
  ligger utgången hög så länge funktionsobjektets ingång on är 1 eller ger en tillpuls
  på 1 sekund när man konfigurerat TwoOrderFeedback.
 </attr>
 <attr>OrderOff
  Digitalutgång för att manövrera, slå ifrån kontaktorn. Fungerar på två sätt beroende
  på statusen på attribut OpNoOffPulse, om OpNoOffPulse är 0 ger OrderOff en frånpuls
  på en sekund och är OpNoOffPulse satt till en 1:a följer OrderOff statusen på
  funktionsobjektets ingång on (ingen puls).
  
  Denna utgång och funktion används bara när konfigurationen TwoOrderFeedback är vald, dvs
  när funktionsobjektet utgång PulseControl är 1.
 </attr>
 <attr>Feedback
  Digitalingång som ska vara 1 vid dragen kontaktor (kontaktorsvar). Kan inverteras i
  kanal/kortobjektet "InvMask".
 </attr>
 <attr>IndError 
  Styr indikator Feedback i bild att bli röd när Error utgången i PLC funktionsobjektet blir hög.
 </attr>
 <attr>IndFeedback 
  Styr indikator för kontaktorsvaret Feedback i bild. Finns inget kontaktorsvar konfigurerat används
  order utgången istället för att visa tillslagen kontaktor.
 </attr>
<attr> FbTimeLimit
  Tidsfördröjning i sekunder innan Error utgången aktiveras om inte kontaktorsvaret kommer
  när Orderutgången går hög. När konfigurationen TwoOrderFeedback är vald används inte
  denna tidsinställning och funktion.
</attr>
<attr>AlarmText
 Larmtext uteblivet kontaktorsvar när larmutgång aktiveras (A-larm) i PLC funktionsobjektet. Kan
 kopplas bort via ingång SupDisabled på PLC funktionsobjektet. När konfigurationen TwoOrderFeedback
 är vald används inte larmet och funktionen.
</attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attribut IndError.
 </attr>
 <attr> OpNoOffPulse
  Konfiguerar kontaktorns Do utgång OrderOff att inte ge frånpuls vid frånorder, dvs Do
  utgången OrderOff följer statusen på funktionsobjektets ingång on. Detta alternativ
  används när man önskar den pulsmanövrerade kontaktorn att gå ifrån om PLC/IO dör. Se
  exempel under rubrik konfiguration.
  
  Attributet har bara betydelse när konfigurationen TwoOrderFeedback är vald, dvs när
  funktionsobjektet utgång PulseControl är 1.
</attr>
 <attr> PlcConnect
 Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

##############################################################################

 <class> BaseContactorFo
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för kontaktor
 Funktionsobjekt för kontaktor. 

 @image orm_basecontactorfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet BaseContactor i
 planthierarkin.

 @b Se även
 @classlink BaseMotorAggr basecomponent_basemotoraggr.html
 <attr>On 
  Ingång för att manövrera, slå till kontaktorn normalt eller med puls beroende på
  konfiguration, dvs Do utgången Order som slår till kontaktorn följer denna ingång
  slaviskt eller vid uppflanken ge en tillpuls på 1 sekund om konfigurationen
  TwoOrderFeedback är vald.

  Om konfigurationen TwoOrderFeedback och inställningsattribut OpNoOffPulse i objekt
  BaseContactor är 1 följer Do utgången OrderOff slaviskt denna ingång. Funktionen används
  när kontaktorn slås till av pulsad Do utgång och går ifrån när en annan Do utgång faller.

  OBS! Att när två Do utgångar används bör man ta hänsyn till kontaktorsvaret i sin kod
  pga Do utgångarna är pulsade. Se exempel i klasshjälpen om objekt BaseContactor.
 </attr>
 <attr>Off 
  Ingång för att manövrera, slå ifrån kontaktorn med puls när man konfigurerat
  TwoOrderFeedback (två Do utgångar), annars har denna ingång ingen betydelse.
   
  Vid uppflanken ges frånpuls på 1,5 sekunder på utgången Do OrderOff.
  Om inställningsattribut OpNoOffPulse i objekt BaseContactor är 1 har denna ingång
  ingen betydelse, dvs Do utgången OrderOff påverkas inte.

  OBS! Att när två Do utgångar används bör man ta hänsyn till kontaktorsvaret i sin kod
  pga Do utgångarna är pulsade. Se exempel i klasshjälpen om objekt BaseContactor.
 </attr>
 <attr>DisableSup 
  Ingång som anger om larmövervakning ska kopplats bort (1:a) eller inte (0:a). OBS! Att 
  larmutgången Error INTE kopplas bort.
 </attr>
 <attr>Feedback 
  Utgång som är hög när kontaktorn är dragen/till. Finns inget kontaktorsvar konfigurerat används
  Order utgången istället för att sätta status.
 <attr>Error 
  Utgång som blir hög när kontaktorsvaret Feedback uteblir (frånslagsfördröjd i 2s).
  
  OBS! Denna utgång ska användas till att återställa beordring på ingång On för att förhindra
  oönskade återstarter.
 </attr>
 <attr>PulseControl 
  Utgång som alltid är hög när två Do utgångar är konfigurerade att pulsmanövrera kontaktorn.
  Kan användas i plc koden med ytterligare logik för att ta ner order på styringångar [on] och [off].
  Används bl.a i objekt BaseMotorAggr för att utvärdera vilken konfiguration som är vald och därmed
  kunna avgöra hur återställngsfunktionen ska vara, se Plc kod för BaseMotorAggr om mer info önskas.
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

##############################################################################

 <class> RunTimeCounter
 @Version
 @Author cs/je
 @Summary Tidmätning.
 @b Tidmätning
 Objekt RunTimeCounter hanterar tidmätning med en tillhörande objektsbild för att mäta
 drifttiden för en komponent typ motor eller liknande (ungefär som en bils kilometerräknare).

 Tidmätaren har en totalmätning och en så kallad trippmätning. Trippmätningen räknar tiden
 från senaste nollställningen (reset). Denna nollställning kan ske manuellt via knappen
 Reset i bild eller via ingång "res" på funktionsobjektet. Om knappen är dimmad betyder
 det att ingången på funktionsobjektet styr nollställningen.
 
 OBS! objektet har inga backupobjekt som minns tidräkningen, dvs de attribut man vill ha
 backup på får man själv lägga in i PLC programmet eller i objektet , se exempel nedan.
 
 @b Objektbild
 @image orm_runtimecounter_og.png
 
 Bilden visar den totala, tripp och förra tripptidräkningen.
 
 Indikatorer och visningsfält:

  - Running    Grön när driften är startad (tiden RunTime räknas upp).

  - RunTime    Drifttiden.
  - Usage      % av tiden som är drifttiden.
  - Starts     Antal gånger driften startats.
  - ResetTime  Tidpunkt när senaste nollställningen av trippräknaren gjordes.
  - StartTime  Start tidpunkt när tidmätningen påbörjades.
 
 @b Exempel
 @image orm_runtimecounter_example1.gif
 Bilden visar ett exempel på vilka vitala attribut i objektet som man bör ta 
 backup på för att hålla reda på drifttiden
 
  - TotalNOfStarts
  - TotalRunTime
  - TotalTime
 
 @h1 Konfiguration

 @b Signaler
 Objektet innehåller INGA signaler som ska kopplas till I/O kanaler, Dvs ingången
 för att mäta drifttiden sker via PLC funktionsobjektets ingång running. OBS! Att denna
 ingång måste användas/anslutas för att antalet starter ska räknas upp.

 @b Plc kod
 För PLC programmering används funktionsobjektet RunTimeCounterFo. Funktionsobjektet
 innehåller inge Plc kod, endast C-kod.
 @image orm_runtimecounterfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.
 
 @b Se även
 <attr> Description
  Textfält synlig i XTT som bör beskriva vilket objekt som drifttidsmätningen avser.
 </attr>
 <attr> TripReset
  Nollställning (1:a) av RunTime tiden för trippräknaren, kan användas oavsett om ingången
  "res" på funktionsobjektet används eller inte. TripReset är inte flanktriggad och nollställs
  inte av objektet.
 </attr>
 <attr> StartTime
  Starttid sen tidräkningen påbörjades. Attributet har ingen backup.
 </attr>
 <attr> ResetTime
  Tidpunkt för senaste återställningen (reset) av trippräknaren.
 </attr>
 <attr> TotalNOfStarts
  Totala antalet starter. Attributet har ingen backup.
 </attr>
 <attr> TotalRunTime
  Totala drifttiden. Attributet har ingen backup.
 </attr>
 <attr> TotalTime
  Totala tiden som tidräkning pågått. Attributet har ingen backup.
 </attr>
 <attr> TotalUsage
  Totala drifttiden jämförd med totala tiden i procent.
 </attr>
 <attr> TripNOfStarts
  Antalet starter sen senaste återställning av trippräknaren gjorts. Attributet har ingen backup.
 </attr>
 <attr> TripRunTime
  Drifttiden sen senaste återställning av trippräknaren gjorts. Attributet har ingen backup.
 </attr>
 <attr> TripTime
  Totala tripptiden sen senaste återställning av trippräknaren gjorts. Attributet har ingen backup.
 </attr>
 <attr> TripUsage
  Totala drifttiden i % av tripptiden TripTime.
 </attr>
 <attr> OldTripNOfStarts
  Förra gamla antalet starter av trippräknaren. Attributet har ingen backup.
 </attr>
 <attr> OldTripRunTime
  Förra gamla drifttiden av trippräknaren. Attributet har ingen backup.
 </attr>
 <attr> OldTripTime
  Förra gamla totala tripptiden av trippräknaren. Attributet har ingen backup.
 </attr>
 <attr> OldTripUsage
  Förra gamla totala drifttiden i % av gamla tripptiden TripTime.
 </attr>
 <attr> Running
  Anger om driften är startad (1:a) eller inte (0:a), dvs utgången start i funktionsobjektet.
 </attr>
 <attr> AccTripReset
  Används ej.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 
 </class>

#############################################################################################

 <class> RunTimeCounterFo
 @Version
 @Author  je
 @summary PLC funktionsobjekt för RunTimeCounter
 Funktionsobjekt för RunTimeCounter (drifttidmätning).
 
 Objektet har ingen Plc kod, dvs funktionen löses via C kod.

 @image orm_runtimecounterfo_fo.gif

 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet RunTimeCounter i planthierarkin.

 @b Se även
 <attr>Running 
  Ingång när driftens gångtid mm räknas upp. OBS! Denna ingång måste ha en signal ansluten för
  att antal starter ska räknas upp (starts). 
 </attr>
 <attr>Reset 
  Ingång som nollställer pågående trippmätning så ny kan påbörjas. Ingången är flanktriggad, dvs
  nollställning sker endast på uppflanken. Är denna ingång kopplad dimmas reset knappen i
  objektbilden.
 </attr>
  <attr>Start 
  Utgång, 1:a när driften är startad och tidräkning "run" sker.  
 </attr>
 <attr> PlcConnect
  Referens till objektet i planthierarkin.
 </attr>
 
 </class>

####################################################################################

<class> BaseMotorAggr
 @Version
 @Author cs/je
 @summary Motoraggregat, kontaktorstyrd
 @b Motoraggregat kontaktorstyrd
 BaseMotorAggr objektet hanterar en motor som styrs av en kontaktor med många olika
 kringkomponenter (12st olika konfigurationer) och körsätten Auto/Man/Lokal mod som
 också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och kontaktorn:
  
 - Effektbrytare (MCCB)
 - Överströmsskydd (motorskydd)
 - Säkerhetsbrytare  
 - Säkring  
  
 Kontaktorn kan konfigureras med två utgångar om pulsmanöver start/stopp önskas. Används
 två utgångar bör man INTE styra start/stopp från funktionsobjektets ingångar ExtStart och
 OpLocStart pga att egna "tydliga" ingångar för stopp saknas. Dvs detta styrsätt bör bara
 användas när start och stoppknappen i objektsbilden används. Se klasshjälp om BaseContactor
 där info om pulsstyrning tas upp utförligare och speciellt exempel 3 under rubrik "Exempel
 styrsätt" som visar principen hur kontaktorn i detta aggregat fungerar vid pulsstyrning.

 Knappar i objektsbilden kan göras osynliga genom att konfigurera attribut i inbyggda
 CompModeD objektet, se CompModeD objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeD olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
  
 Om man vill styra en fläkt eller pump bör man välja BasePumpAggr eller BaseFanAggr
 objekten istället som har anpassade objektsymboler för dessa drifter.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/MotorAggr.
 @image orm_motoraggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad). 
  - Röd färg när det är fel (motorskydd utlöst mm).
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basemotoraggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn är röd när motorn är förreglad att starta, objektsymbol blir gul.

  - Start indikatorn bredvid startknappen är grön när driften körs.

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Motorindikator och objektsymbol är grön när motor är startad.

  - Contactor är grön när kontaktorn är dragen. dvs om driftsvar/feedback är konfigurerat
    annars är det styrsignalen (Do) som styr färgen.

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).


 Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @b Exempel
 @image orm_component_example3.gif
 Bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet. Auto mod
 aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp dimmas) och styr
 sedan utgången/kontaktorn via ingång ExtStart.
  
 Denna konfiguration utan auto/man knappar fås genom att konfigurera aggregatet CbCoSs och
 i det inbyggda modobjektet CompModeD sätta OpExtAndIntMan till 1. 
 
 @h1 Konfigurering
 BaseMotorAggr objektet hanterar 12 olika alternativ beroende på den elektriska utformningen:

  - Circuitbreaker       Effektbrytare (MCCB)
  - Contactor            Kontaktor  
  - OverloadRelay        Överströmsskydd (motorskydd)
  - Safetyswitch         Säkerhetsbrytare  
  - Fuse                 Säkring  

  1  CbCoOrSs    Circuitbreaker, contactor, oveloadrelay, safetyswitch.
  2  CbCoSs      Circuitbreaker, contactor, safetyswitch.
  3  CbCoOr      Circuitbreaker, contactor, oveloadrelay.
  4  CbCo        Circuitbreaker, contactor.
  5  CoOrSs      Contactor, overloadrelay, safetyswitch.
  6  CoOr        Contactor, oveloadrelay.
  7  CoSs        Contactor, safetyswitch.
  8  Co          Contactor.
  9  FuCoOrSs    Fuse, contactor, oveloadrelay, safetyswitch.
  10 FuCoOr      Fuse, contactor, oveloadrelay.
  11 FuCoSs      Fuse, contactor, safetyswitch.
  12 FuCo        Fuse, contactor.

  OBS! Motorn kan konfigureras med temperaturövervakning (tempswitch, Tempsensor)via
  "ConfigureComponent" metoden via inbyggda motorobjektet BaseMotor.

  OBS! Använder man temperaturövervakning i motorobjektet ska man vara medveten att denna
  förregling kopplas bort om funktionsobjektets ingången DisableSup [dis] är 1, dvs motorn
  kan starta även vid hög temp!
    
  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - CircuitBreaker.NotTripped     Di (valbart)
  - OverloadRelay.Overload        Di (valbart)
  - SafetySwitch.On               Di (valbart)
  
  - Contactor.Order               Do (valbart via "ConfigureComponent" metoden)
  - Contactor.OrderOff            Do (valbart via "ConfigureComponent" metoden val TwoOrderFeedback)    
  - Contactor.Feedback            Di (valbart via "ConfigureComponent" metoden) 
  - Motor.TempSwich.Switch        Di (valbart via "ConfigureComponent" metoden)
  - Motor.TempSensor.Value        Ai (valbart via "ConfigureComponent" metoden)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

  OBS! Att göra Disable på en IO signal/komponent innebär att man kan få en felaktig
  objektsbild och därför ska man bara konfigurera/Disable komponenter via
  "ConfigureComponent" metoden för hela aggregatet.
  
  OBS! att valet där kontaktorn har två styrutgångar med pulsfunktion (TwoOrderFeedback)
  bara är tänkt att användas när start och stoppknappen i objektsbilden används för att
  styra driften.

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeD.
 
 Modfunktion:
 
 -Felhantering för manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.

 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan: (attributen ligger i inbyggda CompModeD objektet)
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 

 OBS! Endast en åt gången av dessa tre inställningsattribut i CompModeD får ha värdet 1, Är flera
 satta till 1 samtidigt fungerar inte objektet som tänkt:
  
  -OpExtAndIntMan
  -OpIntOnly
  -OpExtOnly

 Se objekt CompModeD för mer info om hur man konfiguerar moder.
  
 OBS! Konfiguerar man CompModeD för extern styrning (inga knappar auto/man) och vid lokal
 körning bör man använda aggregatets funktionsobjektsutgång Error [err] för att ta ner
 styrorder så att oönskade återstarter förhindras vid/efter fel.
 
 @b Övervakning och felhantering
 Aggregatet innehåller en hel del övervakning och larm. Varje komponent har oftast en larmtext
 som kan ändras, se hjälpen för de inbyggda objekten för mer info. 

 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska hindra
 felmanövrering utgår diverse larm.

 Om kontaktorsvar (Di) används på kontaktorn går objektets auto/man mod över i man för att
 förhindra återstart vid fel på kontaktorsvaret. Detta gäller ALLTID när objektet har hand om
 Auto/Man mod. Gäller ej alternativ OpExtAndIntMan och OpExtOnly där det är programmerarens uppgift
 att koda förhindra återstart.

 Om ingången ExtInterlock [ilk] på funktionsobjektet är hög förreglas utgången till kontaktorn
 och detta gäller i alla moder. Det normala beteendet när ingången går hög är att tvinga objektet
 i manuell mod, vill man ligga kvar i auto mod oavsett ExtInterlock kan man konfigurera detta genom
 att sätta attributet OpNoAutoToMan till 1 i inbyggda objektet CompModeD.
  
 OBS! Om inställningsattributet OpNoAutoToMan är satt till 1 och OpExtAndIntMan eller OpExtOnly är
 1 är det programmerarens uppgift att använda funktionsobjektets utgång Error [err] för att ta ner
 styrorder på ingång ExtStart [est] alternativt ta ner ExtControl [eco] om denna används, detta för
 att förhindra oönskade återstarter vid fel (KONTAKTORN PULSAR ANNARS VID FEEDBACKFEL!).
 
 Om kontaktorn är konfigurerad med två utgångar (pulsmanöver) och kontaktorsvaret försvinner genereras
 en frånslagspuls (Do OrderOff i kontaktorn går till i 1,5 sekund).
  
 OBS! Används lokal mod ska man ta ner manuell styrorder på funktionsobjektets ingång LocalStart
 [lst] för att förhindra oönskade återstarter vid fel, dvs använd funktionsobjektets utgång Error
 [err] för detta ändamål, se exempel nedan.

 @b Exempel felhanteringskod
 @image orm_component_example4.gif
 Bilden visar ett kodexempel när utgången err i funktionsobjektet används för att återställ lokal
 start, återställningskoden är gulmarkerad i bilden.
 
 Lokala manöverlådan innehåller en start-tryckknapp DI24.Ch19, stopp-tryckknapp DI24.Ch20 och en
 omkopplare med två lägen, DI24.Ch10 för fjärrstyrningsläget och Di24.Ch11 för lokalläget. 
 
 Err utgången påverkar en Dv "Driftklar" som i sin tur återställer den lokala starten SR_R
 vippa LokStart. Denna kod förhindrar oavsiktlig start från yttre logik efter ett fel i objektet,
 exempelvis utlöst motorskydd.
 
 OBS! Att denna återställningsfunktion är programmerarens uppgift att koda, dvs utgången err är
 till för det. Om Auto/Man mod är konfigurerad att styras utanför objektet (ingångar eco, est) bör
 man också ta hänsyn till err utgången för att förhindra oavsiktlig start efter fel.
       
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMotorAggrFo.
 @image orm_basemotoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.


  Start/orderutgången för kontaktorn styrs av fyra olika körsätt:
  
  1 Ingång ExtStart [est] från funktionsobjektet och intern auto/man mod.
  2 Ingång ExtStart [est] från funktionsobjektet och extern auto/man mod [eco].
  3 Knappar Start/stopp från objektsbilden i manuell mod.
  4 Ingång LokalStart [lst]från funktionsobjektet och LocalMode [loc].


 @b Simulering
 För simulering använder man funktionsobjektet BaseMotorAggrSim.
 
 @b Se även
 @classlink CompModeD basecomponent_compmoded.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
 Superklass, klicka på länk Aggregate för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
 </attr>
 <attr>Ready 
  Attribut (1:a) som visar när aggregatet är redo för start/stopp oavsett mod. Dvs ingen rådande
  förregling eller utlöst skydd hindrar start. Indikator Ready i bild blir grön i objektsbilden.
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. Dessutom tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan
  är 1 i aggregatets modobjekt CompModeD.
 </attr>
 <attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
 </attr>
 <attr>IndWarning 
  Går hög om ett B-larm är aktivt i aggregatet, objektsymbol blir gul.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt i aggregatet, objektsymbol blir röd.
 </attr>
 <attr>RunTimeCounter
  Drifttidsmätning, klicka på länk RunTimeCounter för mer beskrivning om objektattributet. 
 </attr>
 <attr>Contactor
  Kontaktor, går att konfigurera med två Do utgångar för pulsstyrning, klicka på länk BaseContactor
  för mer beskrivning om objektattributet.
 </attr>
 <attr>CircuitBreaker
  Effektbrytare, klicka på länk BaseCircuitBreaker för mer beskrivning om objektattributet. 
 </attr>
 <attr>SafetySwitch
  Säkerhetsbrytare, klicka på länk BaseSafetySwitch för mer beskrivning om objektattributet. 
 </attr>
 <attr>OverloadRelay
  Överströmsskydd, klicka på länk BaseOverloadRelay för mer beskrivning om objektattributet. 
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/lokal och dynamik i bilder och larm för lokal mod.
  Se länk CompModeD för mer info.
  
  OBS! Att mod konfigurationen med text On/Off på knappar inte stöds i aggregatets 
  objektsbilder, dvs texten Start/Stopp visas alltid oavsett vilket alternativ som är valt.
 </attr>
 <attr>Motor
  Motor med temperaturövervakning, klicka på länk BaseMotor för mer beskrivning om objektattributet.
 </attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
  IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>


######################################################################################## 

<class>BaseMotorAggrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseMotorAggr
 Funktionsobjekt för BaseMotorAggr,BaseFanAggr och BasePumpAggr.
 @image orm_basemotoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseMotoroAggr
 i planthierarkin.
 
 @b Se även
  @classlink CompModeD basecomponent_compmoded.html 
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeD objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera
   med knappar start/stopp men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtStart
   Ingång för att styra kontaktorns order utgången i automatik mod (extern).  
 </attr>
  <attr>ExtInterlock 
  Förreglingsingång, ska vara falsk annars tas orderutgång ner i ALLA moder. Dessutom tvingas auto
  mod till man mod om inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt CompModeD.
 </attr>
 <attr> LocMode 	
    Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
    Dvs ingång OpLocStart i funktionsobjektet styr motorn. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Larmet går att välja bort via inbyggda CompModeD objektets attribut OpDisableLocalAlarm.
   
   Lokal mod går att välja bort via inbyggda CompModeD objektets attribut OpNoLocal.  
 </attr>
 <attr> OpLocStart	
  Ingång för att styra kontaktorns order utgången i lokal mod.
 </attr>
 <attr>ResTrip 
  Ingång för drifttidmätning som nollställer pågående trippräknare så ny kan påbörjas. Ingången är
  flanktriggad, dvs nollställning sker endast på uppflanken.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>
 <attr> On
   Utgång (1:a) när drift är startad, normalt kontaktorsvaret om sådant är konfigurerat annars är det
   kontaktorns (Do) orderutgång som används.
 </attr>
 <attr>Err 
   Utgången går hög när objektet är förreglad eller komponenter larmar/löser ut. Bör användas för att
   återställa beordringar på funktionsobjektets startingångar ExtStart och OpLocalStart för att förhindra
   oönskade återstarter vid fel. 
 </attr>

 </class>

####################################################################################

<class> BaseFanAggr
 @Version
 @Author cs/je
 @summary Fläktaggregat, kontaktorstyrd
 @b Fläktaggregat kontaktorstyrd
 BaseFanAggr objektet hanterar en fläktmotor som styrs av en kontaktor med många olika
 kringkomponenter (12st olika konfigurationer) och körsätten Auto/Man/Lokal mod som
 också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och kontaktorn:
  
 - Effektbrytare (MCCB)
 - Överströmsskydd (motorskydd)
 - Säkerhetsbrytare  
 - Säkring  

 Fläktobjektet är i princip en kopia av BaseMotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
  
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/FanAggr.
 @image orm_fanaggr_gs.gif

 Dynamik för symbolen:
 
  - Grön när fläkten är startad (originalfärgen går att ändra).
  - Grå när fläkten är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad). 
  - Röd färg när det är fel (motorskydd utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när fläkten är startad. 
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefanaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när fläkten kan startas.

  - Interlock indikatorn är röd när fläkten är förreglad att starta, objektsymbol blir gul.

  - Start indikatorn bredvid startknappen är grön när driften körs.

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Motorindikator och objektsymbol är grön när fläkten är startad.

  - Contactor är grön när kontaktorn är dragen. dvs om driftsvar/feedback är konfigurerat
    annars är det styrsignalen (Do) som styr färgen.

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).


 Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering
 Se BaseMotorAggr objektet.
    
 @b Signaler
  Se BaseMotorAggr objektet.

 @b Mod
 Se BaseMotorAggr och CompModeD objekten.
 
 @b Övervakning och felhantering
 Se BaseMotorAggr objektet.      
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMotorAggrFo.
 @image orm_basemotoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 Se BaseMotorAggr objektet för mer tips om kodning.

 @b Simulering
 För simulering använder man funktionsobjektet BaseMotorAggrSim.
 
 @b Se även
 @classlink BaseMotorAggr basecomponent_basemotoraggr.html
 @classlink CompModeD basecomponent_compmoded.html
 <attr>Super 
 Superklass, klicka på länk BaseMotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Fan
  Dokumentation och bild för fläkten (ej motorn), klicka på länk BaseFan för mer
  beskrivning om objektattributet.
 </attr>
 
</class>

####################################################################################

<class> BasePumpAggr
 @Version
 @Author cs/je
 @summary Pumpaggregat, kontaktorstyrd
 @b Pumpaggregat kontaktorstyrd
 BasePumpAggr objektet hanterar en pumpmotor som styrs av en kontaktor med många olika
 kringkomponenter (12st olika konfigurationer) och körsätten Auto/Man/Lokal mod som
 också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och kontaktorn:
  
 - Effektbrytare (MCCB)
 - Överströmsskydd (motorskydd)
 - Säkerhetsbrytare  
 - Säkring  

 Pumpobjektet är i princip en kopia av BaseMotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
  
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/PumpAggr.
 @image orm_pumpaggr_gs.gif

 Dynamik för symbolen:
 
  - Grön när pumpen är startad (originalfärgen går att ändra).
  - Grå när pumpen är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad). 
  - Röd färg när det är fel (motorskydd utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när pumpen är startad. 
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basepumpaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när pumpen kan startas.

  - Interlock indikatorn är röd när pumpen är förreglad att starta, objektsymbol blir gul.

  - Start indikatorn bredvid startknappen är grön när driften körs.

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Motorindikator och objektsymbol är grön när fläkten är startad.

  - Contactor är grön när kontaktorn är dragen. dvs om driftsvar/feedback är konfigurerat
    annars är det styrsignalen (Do) som styr färgen.

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).


 Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering
 Se BaseMotorAggr objektet.
    
 @b Signaler
  Se BaseMotorAggr objektet.

 @b Mod
 Se BaseMotorAggr och CompModeD objekten.
 
 @b Övervakning och felhantering
 Se BaseMotorAggr objektet.      
 
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMotorAggrFo.
 @image orm_basemotoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 Se BaseMotorAggr objektet för mer tips om kodning.

 @b Simulering
 För simulering använder man funktionsobjektet BaseMotorAggrSim.
 
 @b Se även
 @classlink BaseMotorAggr basecomponent_basemotoraggr.html
 @classlink CompModeD basecomponent_compmoded.html
 <attr>Super 
 Superklass, klicka på länk BaseMotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Pump
  Dokumentation och bild för pumpen (ej motorn), klicka på länk BasePump för mer
  beskrivning om objektattributet.
 </attr>
 
</class>

####################################################################################

<class> BaseMotorIncrDecrAggr
 @Version
 @Author cs/je
 @summary Motoraggregat, 2-kontaktorstyrd
 @b Motoraggregat 2-kontaktorstyrd (skifta rotationsriktning motor)
 BaseMotorIncrDecrAggr objektet hanterar en motor som styrs av två kontaktorer (fasväxling) med
 många olika kringkomponenter (12st olika konfigurationer). Körsätten Auto/Man/Lokal mod och
 stoppgränslägen hanteras också av objektet.  

 Möjliga komponenter förutom motorn och kontaktorerna:
  
 - Effektbrytare (MCCB)
 - Överströmsskydd (motorskydd)
 - Säkerhetsbrytare  
 - Säkring  

 Kontaktorerna kan konfigureras med två utgångar för pulsmanöver start/stopp som INTE ska
 användas i BaseMotorIncrDecrAggr, Dvs man får INTE välja detta alternativ för kontaktorn
 (kontaktorkonfiguration TwoOrderFeedback).

 Knappar Öka/Minska (Incr/Decr) i obektsbilden kan även konfigureras att visa Upp/Ner,
 Fram/Back eller Öppna/Stäng och med funktionen att musknapp måste hållas inne hela
 tiden (fjäderretur).

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeD2 objektet, se CompModeD2 objektet för mer info.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
  
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/MotorIncrDecrAggr.
 @image orm_motoraggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad). 
  - Röd färg när det är fel (motorskydd utlöst mm).
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basemotorincrdecraggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn är röd när motorn är förreglad att starta, objektsymbol blir gul.

  - Incr/decr indikatorerna bredvid incr/decr knapparna är gröna när driften körs.

  - Limit switches indikatorerna bredvid incr/decr knapparna är gröna när respektive
    stoppgränsläge är nådd.
  
  - Lokal mod indikatorn visar gult när lokal styrning pågår. Incr, Decr, Stop knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Motorindikator och objektsymbol är grön när motor är startad.

  - Contactor Incr/Decr är grön när respektive kontaktorn är dragen. dvs om driftsvar/feedback
    är konfigurerat annars är det styrsignalen (Do) som styr färgen.

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).


 Knappar Auto/Man växlar mod i fjärrstyrning och Incr/Decr/Stop knappar används för att
 manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappar Incr/Öka Decr/Minska har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Incr/Öka Decr/Minska och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @b Exempel
 @image orm_component_example5.gif
 Bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet. Auto mod
 aktiveras genom att sätta ingång ExtControl till 1 (knappar Open/Close/Stop dimmas) och styr
 sedan utgångar/kontaktorer via ingångar ExtIncr och ExtDecr.
  
 Denna konfiguration/bild utan auto/man knappar och knapptexten Open/Close fås genom att
 konfigurera aggregatet som OpenClose med CbCoSs och via det inbyggda modobjektet CompModeD2
 sätta OpExtAndIntMan till 1. 
 
 @h1 Konfigurering
 BaseMotorIncrDecrAggr objektet hanterar 48 (4 ggr 12) olika alternativ beroende på den
 elektriska utformningen och vilka texter manuella knapparna ska ha i objektsbilden:

  "ConfigureComponent" menyval för texter på knappar:
  
  1 IncrDecr       Knappar med text Öka/Minska Incr/Decr. (grundinställning)
  2 ForwBack       Knappar med text Fram/Back  Forward/Back.
  3 UpDown         Knappar med text Upp/Ner  Up/Down.
  4 OpenClose      Knappar med text Öppna/Stäng Open/Close.    

  Därefter väljs komponentval 1 till 12:  

  - Circuitbreaker       Effektbrytare (MCCB)
  - Contactor            Kontaktor  
  - OverloadRelay        Överströmsskydd (motorskydd)
  - Safetyswitch         Säkerhetsbrytare  
  - Fuse                 Säkring  

  1  CbCoOrSs    Circuitbreaker, contactor, oveloadrelay, safetyswitch. (grundinställning)
  2  CbCoSs      Circuitbreaker, contactor, safetyswitch.
  3  CbCoOr      Circuitbreaker, contactor, oveloadrelay.
  4  CbCo        Circuitbreaker, contactor.
  5  CoOrSs      Contactor, overloadrelay, safetyswitch.
  6  CoOr        Contactor, oveloadrelay.
  7  CoSs        Contactor, safetyswitch.
  8  Co          Contactor.
  9  FuCoOrSs    Fuse, contactor, oveloadrelay, safetyswitch.
  10 FuCoOr      Fuse, contactor, oveloadrelay.
  11 FuCoSs      Fuse, contactor, safetyswitch.
  12 FuCo        Fuse, contactor.

  OBS! Motorn kan konfigureras med temperaturövervakning (tempswitch, Tempsensor) via
  "ConfigureComponent" metoden via inbyggda motorobjektet BaseMotor.
  
  OBS! Använder man temperaturövervakning i motorobjektet ska man vara medveten att denna
  förregling kopplas bort om funktionsobjektets ingången DisableSup [dis] är 1, dvs motorn
  kan starta även vid hög temp!
  
  OBS! Kontaktorerna kan konfigureras med två utgångar (till och från) som pulsar men
  det är inte aktuellt för BaseMotorIncrDecrAggr objektet, dvs detta val ska INTE användas.
  
  Eventuella stoppgränslägen kopplas in på ingångar i funktionsobjektet. Sätts attributet
  OpNoLimitSwitch till 1 i inbyggda objektet CompModeD2 tas indikatorer Limit switches bort
  i objektsbilden. 

  Stoppknapp kan konfigureras bort samtidigt som Incr/Decr knapparna då måste hållas intryckta
  med musen för att styrorder ska ligga kvar. Sätts attributet OpNoStopButton till 1 i inbyggda
  objektet CompModeD2 fås denna funktion.
  
  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - CircuitBreaker.NotTripped     Di (valbar)
  - OverloadRelay.Overload        Di (valbar)
  - SafetySwitch.On               Di (valbar)
  - ContactorIncr.Order           Do (valbar)
  - ContactorDecr.Order           Do (valbar)
  - ContactorIncr.Feedback        Di (valbar)
  - ContactorDecr.Feedback        Di (valbar)
  - Motor.TempSwich.Switch        Di (valbar)
  - Motor.TempSensor.Value        Ai (valbar)
 
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.
  
  OBS! Att valet där kontaktorn har två styrutgångar med pulsfunktion (TwoOrderFeedback)
  INTE är tänkt att användas i detta objekt för att styra driften.
  
 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeD2. Se objekt CompModeD2 för mer info om hur man konfiguerar moder.

 Modfunktion:
 
 -Öka och minska order eller Upp/Ner, Fram/Back och Öppna/Stäng.
 -Felhantering för manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.

 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan: (attributen ligger i inbyggda CompModeD2 objektet)
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 

 OBS! Endast en åt gången av dessa tre inställningsattribut i CompModeD2 får ha värdet 1, Är flera
 satta till 1 samtidigt fungerar inte objektet som tänkt:
  
  -OpExtAndIntMan
  -OpIntOnly
  -OpExtOnly

 Se objekt CompModeD2 för mer info om hur man konfiguerar moder.
  
 OBS! Konfiguerar man CompModeD2 för extern styrning (inga knappar auto/man) och vid lokal
 körning bör man använda aggregatets funktionsobjektsutgång Error [err] för att ta ner
 styrorder så att oönskade återstarter förhindras vid/efter fel.

 @b Övervakning och felhantering
 Aggregatet innehåller en hel del övervakning och larm. Varje komponent har oftast en larmtext
 som kan ändras, se hjälpen för de inbyggda objekten för mer info. 

 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska hindra
 felmanövrering utgår diverse larm.

 Om kontaktorsvar (Di) används på kontaktorn går objektets auto/man mod över i man för att
 förhindra återstart vid fel på kontaktorsvaret. Detta gäller ALLTID när objektet har hand om
 Auto/Man mod. Gäller ej alternativ OpExtAndIntMan och OpExtOnly där det är programmerarens uppgift
 att koda förhindra återstart.

 Om stoppgränslägen (Limit switch) används tillåts styrorder pågå tills tid OrderTimeLimit löpt ut. 
 Löper tiden ut går utgång Error hög och larm genereras och eventuellt går auto mod över i man.
 Attributet OrderTimeLimit är förinställt på 10s och ligger i inbyggda objektet CompModeD2.

 Om ingången ExtInterlock [ilk] på funktionsobjektet är hög förreglas utgångar till kontaktorna
 och detta gäller i alla moder. Det normala beteendet när ingången går hög är att tvinga objektet
 i manuell mod, vill man ligga kvar i auto mod oavsett ExtInterlock kan man konfigurera detta genom
 att sätta attributet OpNoAutoToMan till 1 i inbyggda objektet CompModeD2.
  
 OBS! Om inställningsattributet OpNoAutoToMan är satt till 1 och OpExtAndIntMan eller OpExtOnly är
 1 är det programmerarens uppgift att använda funktionsobjektets utgång Error [err] för att ta ner
 styrorder på ingång ExtIncr [ein] och ExtIncr [ede] alternativt ta ner ExtControl [eco] om denna
 används, detta för att förhindra oönskade återstarter vid fel
 (KONTAKTORN PULSAR ANNARS VID FEEDBACKFEL!).

 OBS! Används lokal mod ska man ta ner manuell styrorder på funktionsobjektets ingång LocalIncr
 [lin] och LocalDecr [lde] för att förhindra oönskade återstarter vid fel, dvs använd
 funktionsobjektets utgång Error [err] för detta ändamål, se exempel nedan.

 @b Exempel felhanteringskod
 @image orm_component_example4.gif
 Bilden visar ett kodexempel när utgången err i funktionsobjektet används för att återställ lokal
 start, återställningskoden är gulmarkerad i bilden. OBS! Att kodexemplet är ifrån ett BaseMotorAggr
 objekt, men principen är densamma för BaseMotorIncrDecrAggr.
 
 Lokala manöverlådan innehåller en start-tryckknapp DI24.Ch19, stopp-tryckknapp DI24.Ch20 och en
 omkopplare med två lägen, DI24.Ch10 för fjärrstyrningsläget och Di24.Ch11 för lokalläget. 
 
 Err utgången påverkar en Dv "Driftklar" som i sin tur återställer den lokala starten SR_R
 vippa LokStart. Denna kod förhindrar oavsiktlig start från yttre logik efter ett fel i objektet,
 exempelvis utlöst motorskydd.
 
 OBS! Att denna återställningsfunktion är programmerarens uppgift att koda, dvs utgången err är
 till för det. Om Auto/Man mod är konfigurerad att styras utanför objektet (ingångar eco, ein, ede)
 bör man också ta hänsyn till err utgången för att förhindra oavsiktlig start efter fel.
       
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseMotorDecrIncrAggrFo.
 @image orm_basemotorincrdecraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.


  Start/orderutgången för kontaktorn styrs av fyra olika körsätt:
  
  1 Ingångar ExtIncr [ein] och ExtDecr [ede] från funktionsobjektet och intern auto/man mod.
  2 Ingångar ExtIncr [ein] och ExtDecr från funktionsobjektet och extern auto/man mod [eco].
  3 Knappar Incr/Öka och Decr/Minska från objektsbilden i manuell mod.
  4 Ingång LokalIncr [lin] och LokalDecr [lde] från funktionsobjektet och LocalMode [loc].

 @b Simulering
 För simulering använder man funktionsobjektet BaseMotorAggrSim.
 
 @b Se även
 @classlink CompModeD2 basecomponent_compmoded2.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
 Superklass, klicka på länk Aggregate för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
 </attr>
 <attr>Ready 
  Attribut (1:a) som visar när aggregatet är redo för start/stopp oavsett mod. Dvs ingen rådande
  förregling eller utlöst skydd hindrar start. Indikator Ready i bild blir grön i objektsbilden.
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. Dessutom tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan
  är 1 i aggregatets modobjekt CompModeD2.
 </attr>
 <attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
 </attr>
 <attr>IndWarning 
  Går hög om ett B-larm är aktivt i aggregatet, objektsymbol blir gul.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt i aggregatet, objektsymbol blir röd.
 </attr>
 <attr>RunTimeCounter
  Drifttidsmätning, klicka på länk RunTimeCounter för mer beskrivning om objektattributet. 
 </attr>
 <attr>ContactorIncr
  Kontaktor för Increment/öka, klicka på länk BaseContactor för mer beskrivning om objektattributet. 
 </attr>
 <attr>ContactorIncr
  Kontaktor för Decrement/minska, klicka på länk BaseContactor för mer beskrivning om objektattributet. 
 </attr>
 <attr>CircuitBreaker
  Effektbrytare, klicka på länk BaseCircuitBreaker för mer beskrivning om objektattributet. 
 </attr>
 <attr>SafetySwitch
  Säkerhetsbrytare, klicka på länk BaseSafetySwitch för mer beskrivning om objektattributet. 
 </attr>
 <attr>OverloadRelay
  Överströmsskydd, klicka på länk BaseOverloadRelay för mer beskrivning om objektattributet. 
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/lokal och dynamik i bilder och larm för lokal mod.
  Se länk CompModeD2 för mer info.
 </attr>
 <attr>Motor
  Motor med temperaturövervakning, klicka på länk BaseMotor för mer beskrivning om objektattributet.
 
  OBS! Att motorkonfiguration med tempsensor/switch inte stöds i aggregatets objektsbilder, dvs
  temperaturvisning, indikeringar syns ej. 
 </attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
  IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>

######################################################################################## 

<class>BaseMotorIncrDecrAggrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseMotorIncrDecrAggr
 Funktionsobjekt för BaseMotorIncrDecrAggr.
 @image orm_basemotorincrdecraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseMotoroAggr
 i planthierarkin.
 
 @b Se även
  @classlink CompModeD2 basecomponent_CompModeD2.html 
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeD2 objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera med
   knappar (öka/minska mm) men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtIncr
   Ingång för att styra Incr/Öka kontaktorns order utgången i automatik mod (extern).  
 </attr>
 <attr> ExtDecr
   Ingång för att styra Decr/Minska kontaktorns order utgången i automatik mod (extern).  
 </attr>
  <attr>ExtInterlock 
  Förreglingsingång, ska vara falsk annars tas orderutgångar ner i ALLA moder. Dessutom tvingas auto
  mod till man mod om inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt CompModeD2.
 </attr>
 <attr> LimitSwitchIncr 	
  Används som ingång för stoppgränsläge Incr/Öka (öka, upp, fram, öppna). Sann/hög signal förreglar
  KontaktorIncr.
  </attr>
 <attr> LimitSwitchDecr 	
  Används som ingång för stoppgränsläge Decr/Minska (minska, ner, back, stäng). Sann/hög signal förreglar
  KontaktorDecr.
 </attr>
 <attr> LocMode 	
   Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
   Dvs ingångar OpLocIncr och OpLocalDecr i funktionsobjektet styr motorn. 
   
  Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
  Larmet går att välja bort via inbyggda CompModeD2 objektets attribut OpDisableLocalAlarm.
   
  Lokal mod går att välja bort via inbyggda CompModeD2 objektets attribut OpNoLocal.  
 </attr>
 <attr> OpLocalIncr	
  Ingång för att styra kontaktorns Incr/Öka order utgången i lokal mod.
 </attr>
 <attr> OpLocalDecr	
  Ingång för att styra kontaktorns Decr/Miska order utgången i lokal mod.
 </attr>
 <attr>ResTrip 
  Ingång för drifttidmätning som nollställer pågående trippräknare så ny kan påbörjas. Ingången är
  flanktriggad, dvs nollställning sker endast på uppflanken.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>
 <attr> OnIncr
   Utgång (1:a) när drift är startad Incr/Öka, normalt kontaktorsvaret om sådant är konfigurerat annars
   är det incr-kontaktorns (Do) orderutgång som används.
 </attr>
 <attr> OnDecr
   Utgång (1:a) när drift är startad Decr/Minska, normalt kontaktorsvaret om sådant är konfigurerat annars
   är det decr-kontaktorns (Do) orderutgång som används.
 </attr>
 <attr>Err 
   Utgången går hög när objektet är förreglad eller komponenter larmar/löser ut. Bör användas för att
   återställa beordringar på funktionsobjektets startingångar ExtIncr, ExtDecr, OpLocalDecr och 
   OpLocalIncr för att förhindra oönskade återstarter vid fel. 
 </attr>

 </class>
 
####################################################################################

<class> BaseFcPPO5MotorAggr
 @Version
 @Author cs/je
 @summary Motoraggregat, frekvensstyrd, Profibus/dp PPO5
 @b Motoraggregat frekvensstyrd, Profibus/dp PPO5
 BaseFcPPO5MotorAggr objektet hanterar en motor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO5 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. Genom att använda PPO5 protokollet kan ärvärden för ström och
 moment läsas av och enklare parametrering göras under drift. 
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  
  
 Kontaktorn kan konfigureras med två utgångar om pulsmanöver start/stopp önskas. Se klasshjälp
 om BaseContactor där info om pulsstyrning tas upp utförligare och speciellt exempel 3 under
 rubrik "Exempel styrsätt" som visar principen hur kontaktorn i detta aggregat fungerar vid
 pulsstyrning.
 
 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
  
 Om man vill styra en fläkt eller pump bör man välja BaseFcPPO5PumpAggr eller BaseFcPPO5FanAggr
 objekten istället som har anpassade objektsymboler för dessa drifter.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/FcPPO5MotorAggr.
 @image orm_motoraggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo5motoraggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @b Exempel
 @image orm_component_example6.gif
 Bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet. Auto mod
 aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp dimmas) och styr
 sedan frekvensomriktaren via ingång ExtStart.
  
 Denna konfiguration/bild utan auto/man knappar fås genom att konfigurerad aggregatet CbCoFcSl och
 via det inbyggda modobjektet CompModeA sätta OpExtAndIntMan till 1.
 
 OBS! Att startspärren som används egentligen är en komponent av typen säkerhetsbrytare (BaseSafetSwitch),
 dvs det är bara objektbilder som skiljer sig åt när man använder startspärr eller säkerhetsbrytare.
 
 @h1 Konfigurering
 BaseFcPPO5MotorAggr objektet hanterar 24 olika alternativ beroende på den elektriska utformningen:

  - Circuitbreaker       Effektbrytare (MCCB)
  - Contactor            Kontaktor  
  - Frequencyconverter   Frekvensomriktare
  - Safetyswitch         Säkerhetsbrytare, arbetsbrytare (BaseSafetySwitch)  
  - Startlock            Startspärr, arbetsbrytare (BaseSafetySwitch)  
  - Fuse                 Säkring (snabba!)

  1  CbCoFcSs        Circuitbreaker, contactor, frequencyconverter and safetyswitch.
  2  CbCoFcSl        Circuitbreaker, contactor, frequencyconverter and startlock.
  3  CbCoFc          Circuitbreaker, contactor and frequencyconverter.
  4  CbFcSs          Circuitbreaker, frequencyconverter and safetyswitch.
  5  CbFcSl          Circuitbreaker, frequencyconverter and startlock.
  6  CbFc            Circuitbreaker and frequencyconverter.
  7  CoFcSs          Contactor, frequencyconverter and safetyswitch.
  8  CoFcSl          Contactor, frequencyconverter and startlock.
  9  CoFc            Contactor and frequencyconverter.
  10 FcSs            Frequencyconverter and safetyswitch.
  11 FcSl            Frequencyconverter and startlock.
  12 Fc              Frequencyconverter.
  13 FuCbCoFcSs      Fuse, circuitbreaker, contactor, frequencyconverter and safetyswitch.
  14 FuCbCoFcSl      Fuse, circuitbreaker, contactor, frequencyconverter and startlock.
  15 FuCbCoFc        Fuse, circuitbreaker, contactor and frequencyconverter.
  16 FuCbFcSs        Fuse, circuitbreaker, frequencyconverter and safetyswitch.
  17 FuCbFcSl        Fuse, circuitbreaker, frequencyconverter and startlock.
  18 FuCbFc          Fuse, circuitbreaker and frequencyconverter.
  19 FuCoFcSs        Fuse, contactor, frequencyconverter and safetyswitch.
  20 FuCoFcSl        Fuse, contactor, frequencyconverter and startlock.
  21 FuCoFc          Fuse, contactor and frequencyconverter.
  22 FuFcSs          Fuse, Frequencyconverter and safetyswitch.
  23 FuFcSl          Fuse, Frequencyconverter and startlock.
  24 FuFc            Fuse, Frequencyconverter.
  

  OBS! Motorn kan konfigureras med temperaturövervakning (tempswitch, Tempsensor)via
  "ConfigureComponent" metoden via inbyggda motorobjektet BaseMotor.

  OBS! Använder man temperaturövervakning i motorobjektet ska man vara medveten att denna
  förregling kopplas bort om funktionsobjektets ingången DisableSup [dis] är 1, dvs motorn
  kan starta även vid hög temp!

  Inmatningsfält Speed (OpRefMan i CompModeA) max och min värde som operatör kan mata in i
  objektsbilden styrs av attribut OpMinRefMan och OpMaxRefMan i inbyggda objektet CompModeA.
    
  Enheten/texten för Speed värdet man skriver in kan visas/ändras, dvs det är texten i
  inbyggda objektet BaseFcPPO5 attribut ActSpeed.Unit som visas i bilden.
    
  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - CircuitBreaker.NotTripped     Di (valbart)
  - SafetySwitch.On               Di (valbart)

  - Contactor.Order               Do (valbart) 
  - Contactor.OrderOff            Do (valbart)
  - Contactor.Feedback            Di (valbart) 
  - Motor.TempSwich.Switch        Di (valbart)
  - Motor.TempSensor.Value        Ai (valbart)

  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

  Valet där kontaktorn har två styrutgångar med pulsfunktion (TwoOrderFeedback) används
  när en kontaktor har självhållning. Se klasshjälp om BaseContactor för mer info.
 
 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeA.
 
 OBS! Med lokal mod menas INTE omriktarens lokala mod utan avser lokal manöverlåda
 vid driften/motor om sådan finns.
 
 Modfunktion:
 
 -Felhantering för manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.

 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan: (attributen ligger i inbyggda CompModeA objektet)
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 

 OBS! Endast en åt gången av dessa tre inställningsattribut i CompModeA får ha värdet 1, Är flera
 satta till 1 samtidigt fungerar inte objektet som tänkt:
 
  -OpExtAndIntMan
  -OpIntOnly
  -OpExtOnly
  
 Se objekt CompModeA för mer info om hur man konfiguerar moder.
  
 OBS! Konfiguerar man CompModeA för extern styrning (inga knappar auto/man) och vid lokal
 körning bör man använda aggregatets funktionsobjektsutgång Error [err] för att ta ner
 styrorder så att oönskade återstarter förhindras vid/efter fel.
 
 @b Övervakning och felhantering
 Aggregatet innehåller en hel del övervakning och larm. Varje komponent har oftast en larmtext
 som kan ändras, se hjälpen för de inbyggda objekten för mer info. 

 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska hindra
 felmanövrering utgår diverse larm.

 Objektets auto/man mod går över i MAN mod om elkraften försvinner, säkerhetsbrytare frånslagen,
 skydd löser ut eller omriktaren inte är driftklar för fjärrstyrning, detta för att förhindra oönskade
 återstarter. Denna funktion går att koppla bort via inbyggda CompModeA objektets inställningsattribut
 OpNoAutoToMan.

 Ingången PowerInterlock [pil] på funktionsobjektet förreglar manövrering av huvudkontaktorn från
 bild (knappar dimmas).
 
 Ingången ExtInterlock [ilk] på funktionsobjektet förreglar startorder till omriktaren, knappar
 Start/Stopp dimmas.
   
 Om ingången PowerInterlock [pil] eller ExtInterlock [ilk] på funktionsobjektet är hög förreglas
 startorder till frekvensomriktare och detta gäller i alla moder. Det normala beteendet när dessa
 ingångar går höga är att tvinga objektet i manuell mod, vill man ligga kvar i auto mod oavsett
 dessa ingångar kan man konfigurera detta genom att sätta attributet OpNoAutoToMan till 1 i inbyggda
 objektet CompModeA.

 OBS! Om inställningsattributet OpNoAutoToMan är satt till 1 är det programmerarens uppgift att
 använda funktionsobjektets utgång Error [err] för att ta ner styrorder på ingång ExtStart [est]
 alternativt ta ner ExtControl [eco] om denna används, detta för att förhindra oönskade återstarter
 vid fel.
 
 OBS! Används lokal mod ska man ta ner manuell styrorder på funktionsobjektets ingång LocalStart
 [lst] för att förhindra oönskade återstarter vid fel, dvs använd funktionsobjektets utgång Error
 [err] för detta ändamål, se exempel nedan.

 @b Exempel felhanteringskod
 @image orm_component_example4.gif
 Bilden visar ett kodexempel när utgången err i funktionsobjektet används för att återställ lokal
 start, återställningskoden är gulmarkerad i bilden. OBS! Att kodexemplet är ifrån ett BaseMotorAggr
 objekt, men principen är densamma för BaseFcPPO5MotorAggr.
 
 Lokala manöverlådan innehåller en start-tryckknapp DI24.Ch19, stopp-tryckknapp DI24.Ch20 och en
 omkopplare med två lägen, DI24.Ch10 för fjärrstyrningsläget och Di24.Ch11 för lokalläget. 
 
 Err utgången påverkar en Dv "Driftklar" som i sin tur återställer den lokala starten SR_R
 vippa LokStart. Denna kod förhindrar oavsiktlig start från yttre logik efter ett fel i objektet,
 exempelvis utlöst motorskydd.
 
 OBS! Att denna återställningsfunktion är programmerarens uppgift att koda, dvs utgången err är
 till för det. Om Auto/Man mod är konfigurerad att styras utanför objektet (ingångar eco, est) bör
 man också ta hänsyn till err utgången för att förhindra oavsiktlig start efter fel.
       
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseFcPPO5MotorAggrFo.
 @image orm_basefcppo5motoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 Startorder (via kontrollord ControllWordCW) och analoga referensutgång (RefSpeed) via Profibus till
 omriktaren styrs av fyra olika körsätt:
  
  1 Ingång ExtStart [est] från funktionsobjektet och intern auto/man mod.
  2 Ingång ExtStart [est] från funktionsobjektet och extern auto/man mod [eco].
  3 Knappar Start/stopp från objektsbilden i manuell mod.
  4 Ingång LokalStart [lst]från funktionsobjektet och LocalMode [loc].

  Analoga styrreferensen tas ifrån ingång RefSpeedExt [REX] i auto/extern mod, ingång RefSpeedLoc
  [RLO] i lokal mod eller internt via bild (OpRefMan) i man mod. Objektet rampar INTE signalen på
  något sätt och om/när startorder tas ner nollas analoga referensen direkt.

 @b Simulering
 För simulering använder man funktionsobjektet BaseFcPPO5MotorAggrSim.

 @b Profibus/dp
 För frekvensomriktarens Profibus/dp kommunikation med protokollet PPO5 ska man använda modulobjektet
 BaseFcPPO5PbModule. Se klasshjälp för BaseFcPPO5PbModule objektet där en utförligare beskrivning hur
 man skapar ett modulobjekt i nodehierarkin och konfigurerar profibus för en frekvensomriktare. 
 
 Koppla därefter modulen till aggregatets inbyggda objekt BaseFcPPO5 (FrequencyConverter) med hjälp
 av IoConnect funktionen.

 INSTÄLLNINGAR PPO5:
 
 PPO5 protokollets PZD data (prozessdaten) PZD3 och PZD4 måste också konfigureras i omriktaren, dvs:
 
  -PZD3  Ställs in för current/ström i omriktaren
  -PZD4  Ställs in för Torque/moment i omriktaren 
  
 Anpassning/skalning mellan Proview och omriktarens IO signaler måste också göras i objekt/profibusmodul
 BaseFcPPO5PbModule kanalobjekten ChanAi och ChanAo för aggregatet, signaler som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    
  -I_PZD3    Ström
  -I_PZD4    Moment
 
 Inbyggda BaseFcPPO5 frekvensomriktarobjektets Ao signal RefSpeed attribut PresMaxLimit och
 PresMinLimit anger objektsbildens speed-grafens visningsområde. Dessa går att ändra under drift
 genom att klicka på grafen. Ärvärden för ström och moment Ai signaler ActTorque och ActCurrent
 behandlas på likvärdigt sätt.
  
 Se objekt BaseFcPPO5PbModule för mer info och exempel.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
 Superklass, klicka på länk Aggregate för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
 </attr>
 <attr>Ready 
  Attribut (1:a) som visar när aggregatet är redo för start/stopp oavsett mod. Dvs ingen rådande
  förregling eller utlöst skydd hindrar start. Indikator Ready i bild blir grön i objektsbilden.
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. Dessutom tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan
  är 1 i aggregatets modobjekt CompModeA.
 </attr>
 <attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
 </attr>
 <attr> OpPowerOn
  Beordring huvudkontaktor till, påverkas normalt via knapp On/Till i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
 </attr>
 <attr> OpPowerOff
  Beordring huvudkontaktor från, påverkas normalt via knapp Off/Från i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
 </attr>
 <attr>PowExtInterlock 
  Förreglingsingång på funktionsobjektet för elkraft, dimmar knappar Till/Från för huvudkontaktorn.
  Ska vara falsk annars tas orderutgång ner i ALLA moder. Dessutom tvingas normalt auto mod till man
  mod. Se mer viktig info om denna signal i hjälpen för tillhörande funktionsobjekt. 
 </attr>
 <attr>PowOnOffDim 
  Styr att knappar Till/Från för kontaktor/elkraft att dimmas, går hög när objektet anser det olämpligt
  att manövrera elkraften, bl.a frånslagen säkerhetsbrytare, övertemp i motor mm. 
 </attr>
 <attr>IndWarning 
  Går hög om ett B-larm är aktivt i aggregatet, objektsymbol blir gul.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt i aggregatet, objektsymbol blir röd.
 </attr>
 <attr>RunTimeCounter
  Drifttidsmätning, klicka på länk RunTimeCounter för mer beskrivning om objektattributet. 
 </attr>
 <attr>AlarmTextToOften
  Larmtext när försök att starta upp (huvudkontaktor) omriktaren sker för ofta (B-larm). Kan kopplas
  bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>AlarmTextPowOnNotOk
  Larmtext när tillslag av huvudkontaktor för omriktaren görs och den är förreglad att gå till
  (B-larm). Kan kopplas bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>AlarmTextStartNoOk
  Larmtext när starförsök (run) till omriktaren görs och den är förreglad att starta (B-larm).
  Kan kopplas bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>CircuitBreaker
  Effektbrytare, klicka på länk BaseCircuitBreaker för mer beskrivning om objektattributet. 
 </attr>
 <attr>Contactor
  Kontaktor, klicka på länk BaseContactor för mer beskrivning om objektattributet. 
 </attr>
 <attr>FrequencyConverter
  Frekvensomriktare, klicka på länk BaseFcPPO5 (Profibus) för mer beskrivning om objektattributet. 
 </attr>
 <attr>SafetySwitch
  Säkerhetsbrytare eller startspärr, klicka på länk BaseSafetySwitch för mer beskrivning om
  objektattributet. 
 </attr>
 <attr>Motor
  Motor med temperaturövervakning, klicka på länk BaseMotor för mer beskrivning om objektattributet.
 
  OBS! Att motorkonfiguration med tempsensor/switch inte stöds i aggregatets objektsbilder, dvs
  temperaturvisning, indikeringar syns ej. 
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/lokal och dynamik i bilder och larm för lokal mod.
  Se länk CompModeA för mer info.
  
  OBS! Att mod konfigurationen med text On/Off på knappar inte stöds i aggregatets 
  objektsbilder, dvs texten Start/Stopp visas alltid oavsett vilket alternativ som är valt.
 </attr>
 <attr>DefTrend 
  Trendobjekt visas enligt trendmetoden, referens till omriktarens PlotGroup objekt.
 </attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
  IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>


######################################################################################## 

<class>BaseFcPPO5MotorAggrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseFcPPO5MotorAggr
 Funktionsobjekt för BaseFcPPO5MotorAggr, BaseFcPPO5FanAggr och BaseFcPPO5PumpAggr.
 @image orm_basefcppo5motoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseFcPPO5MotoroAggr
 i planthierarkin.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html 
 @classlink BaseFcPPO5PbModule basecomponent_basefcppo5pbmodule.html
 <attr> RefSpeedExt
   Analog ingång för hastighetsreferensen till omriktaren i Auto/extern mod. Se Ao kanalobjektet
   O_REF i profibusmodulen BaseFcPPO5PbModule för mer info om skalning/anpassning mot omriktaren.
 </attr>
 <attr> RefSpeedLoc
   Analog ingång för hastighetsreferensen till omriktaren i lokal mod. Se Ao kanalobjektet O_REF
   i profibusmodulen BaseFcPPO5PbModule för mer info om skalning/anpassning mot omriktaren.
   
  OBS! Med lokal mod menas INTE omriktarens lokala mod utan avser lokal manöverlåda
  vid driften/motor om sådan finns, dvs ingång OpLocStart [lst] aktiverar denna referens.
 </attr>
 <attr>PowerInterlock 
  Förreglingsingång för elkraft, dimmar knappar Till/Från för huvudkontaktorn. Ska vara falsk
  annars tas orderutgång ner i ALLA moder. Dessutom tvingas auto mod till man mod om
  inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt CompModeA.
  
  OBS! Att förreglingen INTE hindrar huvudkontaktorns orderutgång utan bara dimmar knappar och
  förreglar startsignalen till omriktaren.
 </attr>
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeA objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera
   med knappar start/stopp men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtStart
   Ingång för att styra kontaktorns order utgången i automatik mod (extern).  
 </attr>
  <attr>ExtInterlock 
  Förreglingsingång för startorder, ska vara falsk annars tas orderutgång ner i ALLA moder. Dessutom
  tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt
  CompModeA. Signalen dimmar också start/stopp knappar i objektsbilden.
 </attr>
 <attr> LocMode 	
    Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
    Dvs ingång OpLocStart i funktionsobjektet styr motorn. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Larmet går att välja bort via inbyggda CompModeA objektets attribut OpDisableLocalAlarm.
   
   Lokal mod går att välja bort via inbyggda CompModeA objektets attribut OpNoLocal.  
 </attr>
 <attr> OpLocStart	
  Ingång för att styra kontaktorns order utgången i lokal mod.
 </attr>
 <attr>ResTrip 
  Ingång för drifttidmätning som nollställer pågående trippräknare så ny kan påbörjas. Ingången är
  flanktriggad, dvs nollställning sker endast på uppflanken.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>
 <attr> On
   Utgång (1:a) när drift är startad (run), signal från omriktaren statusord SW bit 2.
 </attr>
 <attr>Err 
   Utgången går hög när objektet är förreglad eller komponenter larmar/löser ut. Bör användas för att
   återställa beordringar på funktionsobjektets startingångar ExtStart och OpLocalStart så att oönskade
   återstarter förhindras vid/efter fel.
 </attr>

 </class>

####################################################################################

<class> BaseFcPPO5FanAggr
 @Version
 @Author cs/je
 @summary Fläktaggregat, frekvensstyrd, Profibus/dp PPO5
 @b Fläktaggregat frekvensstyrd, Profibus/dp PPO5
 BaseFcPPO5FanAggr objektet hanterar en fläktmotor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO5 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. Genom att använda PPO5 protokollet kan ärvärden för ström och
 moment läsas av och enklare parametrering göras under drift. 
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
 
 Fläktobjektet är i princip en kopia av BaseFcPPO5MotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
   
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/BaseFcPPO5FanAggr.
 @image orm_fanaggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när fläkten är startad. 
   
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo5fanaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering

 BaseFcPPO5FanAggr objektet har diverse olika konfigurationer och inställningar som behöver gås igenom:
 
 
 - 24 olika komponentalternativ beroende på den elektriska utformningen.
 
 - Objektsbild (inställningar i bilden)

 - Profibus/dp konfiguration (BaseFcPPO5PbModule))
 
 - IO signaler (som ska/kan kopplas)
 
 - Övervakning och felhantering (larmtexter mm)
 
 - Mod (körsätt, objekt CompModeA)
 
 - Plc kod (funktionsobjektet BaseFcPPO5MotorAggrFo)
 
 Se objektet BaseFcPPO5MotorAggr för konfiguration.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
  Superklass, klicka på länk BaseFcPPO5MotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Fan
  Dokumentation och bild för fläkten (ej motorn), klicka på länk BaseFan för mer
  beskrivning om objektattributet.
 </attr>

</class>

####################################################################################

<class> BaseFcPPO5PumpAggr
 @Version
 @Author cs/je
 @summary Pumpaggregat, frekvensstyrd, Profibus/dp PPO5
 @b Pumpaggregat frekvensstyrd, Profibus/dp PPO5
 BaseFcPPO5PumpAggr objektet hanterar en pumpmotor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO5 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. Genom att använda PPO5 protokollet kan ärvärden för ström och
 moment läsas av och enklare parametrering göras under drift. 
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
 
 Pumpobjektet är i princip en kopia av BaseFcPPO5MotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
   
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/BaseFcPPO5PumpAggr.
 @image orm_pumpaggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när pumpen är startad. 
   
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo5pumpaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering

 BaseFcPPO5PumpAggr objektet har diverse olika konfigurationer och inställningar som behöver gås igenom:
 
 
 - 24 olika komponentalternativ beroende på den elektriska utformningen.
 
 - Objektsbild (inställningar i bilden)

 - Profibus/dp konfiguration (BaseFcPPO5PbModule))
 
 - IO signaler (som ska/kan kopplas)

 - Övervakning och felhantering (larmtexter mm)
 
 - Mod (körsätt, objekt CompModeA)
 
 - Plc kod (funktionsobjektet BaseFcPPO5MotorAggrFo)
 
 Se objektet BaseFcPPO5MotorAggr för konfiguration.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
  Superklass, klicka på länk BaseFcPPO5MotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Pump
  Dokumentation och bild för pumpen (ej motorn), klicka på länk BasePump för mer
  beskrivning om objektattributet.
 </attr>

</class>

####################################################################################

<class> BaseFcPPO5
 @Version
 @Author cs/je
 @summary Frekvenomriktare, Profibus/dp, PPO5 protokollet
 @b Frekvensomriktare, Profibus/dp kommunikation med PPO5 protokollet 
 BaseFcPPO5 objektet hanterar en motor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO5 protokollet (Parameter/Process data object).
 Objektet använder PPO5 möjligheter att skriva och läsa av parametrar i omriktaren.
 
 Till detta objekt hör PLC funktionsobjektet BaseFcPPO5Fo och ett Profibus/modulobjekt
 BaseFcPPO5PbModule som beskrivs under rubrik konfiguration nedan samt slavobjekt Pb_DP_Slave.
 
 Objektet har också en objektsbild som visar status på omriktaren och processvärden i graf och
 stapelform samt en merbild för att läsa/skriva parametrar. Det finns även ett trendobjekt som
 visar hastighet, moment och ström i en bild.
  
 @b Objektsymbol
 Det finns ingen symbol för detta objekt.

 @b Objektsbild
 @image orm_basefcppo5_og.png

 Indikatorer:
 
  - Ready är grön när motorn kan startas.
  
  - Run är grön när motorn körs (snurrar).
 
  - Switch-On inhibit är röd när omriktaren är förreglad att starta.
  
  - Warning är gul om omriktaren vill varna för något, annars grå. Varningen läses av på
    omriktarens display.
   
  - Local control är gul om omriktaren är ställd för körning via omriktarens displayenhet.
    Dvs omriktaren tar inte emot styrorder via Profibus, bara lokalt på omriktaren.
    
  - Tripped är röd om omriktaren löst ut, Reset knappen bredvid indikatorn återställer
    omriktaren om den är konfigurerad för fjärråterställning.  
 
  - Bus-com visninsfältet visar status på profibuskommunikationen mellan omriktaren och styrsystemet.
    
  - Status bredvid omriktarsymbolen är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).
     
 Knappar:
 
  - Knapp More... leder till bild för att läsa och skriva parametrar i omriktaren.
  
  - Knapp Reset återställer trippad omriktare om den är konfigurerad för fjärråterställning.
  
  
 Frekvensomriktarobjektets Ao signal RefSpeed attribut PresMaxLimit och PresMinLimit anger i bilden
 speed-grafens visningsområde. Dessa går att ändra genom att klicka på grafen/värdena.
 
 Visningsområde ärvärden för current/ström och torque/moment Ai signaler ActTorque och ActCurrent
 behandlas på likvärdigt sätt.

 @b Objektsbild More...
 @image orm_basefcppo5_og_more.gif

 Bild som hantera enkel kommunikation för att läsa och skriva parametrar i omriktaren. Se manual för
 omriktaren för möjliga parametrar.

 @h1 Konfigurering
 Se rubrik Plc kod, Simulering och Profibus/dp nedan.
      
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseFcPPO5Fo.
 @image orm_basefcppo5fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseFcPPO5Sim.

 @b Profibus/dp
 För frekvensomriktarens Profibus/dp kommunikation med protokollet PPO5 ska man använda modulobjektet
 BaseFcPPO5PbModule. Se klasshjälp för BaseFcPPO5PbModule objektet där en utförligare beskrivning hur
 man skapar ett modulobjekt i nodehierarkin och konfigurerar profibus för en frekvensomriktare. 
 
 Koppla därefter modulen till objekt BaseFcPPO5 planthierarkin med hjälp av IoConnect funktionen.

 @b Inställningar PPO5
 (se objekt BaseFcPPO5PbModule för mer info och exempel)
 
 PPO5 protokollets PZD data (prozessdaten) PZD3 och PZD4 ska också konfigureras i omriktaren för ström
 och moment, dvs:
 
  -PZD3  Ställs in för current/ström i omriktaren
  -PZD4  Ställs in för Toque/moment i omriktaren 

 Dessa signaler är namnsatta i objektet till ActCurrent och ActTorque och kopplade till objektbildens
 graf och trend som visar moment och strömkurvor.
   
 Anpassning/skalning mellan Proview och omriktarens IO signaler måste också göras i kanalobjekten
 ChanAi och ChanAo för frekvensomriktaren, dvs signaler i BaseFcPPO5Module som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    
  -I_PZD3    Ström
  -I_PZD4    Moment
 
 Övriga knutna lediga IO signaler är: 

  - PZD5 till PZD9 är lediga integer insignal (Ii, 16 bit).  
  - OPZD3 till OPZD5 är lediga analoga utsignaler (Ao, 16 bit).
  - OPZD6 är ledig integer utsignal (Io, 16 bit).

  Dessa signaler kan användas fritt för PLC programmering t.ex. för att momentbegränsa motorn.
 
 OBS! Att INTE alla data som specificeras i PPO5 protokollet finns tillgänglig i planthierarki objektet
 BaseFcPPO5, dessa är:
 
  - I_PZD10 är ledig integer input kanal (ChanIi, 16 bit). 
  - O_PZD7 till O_PZD10 är lediga analoga output kanaler (ChanAo, 16 bit). 
  
  Dessa signaler ligger alltså oknutna i BaseFcPPO5PbModule objektet.
  
 @b Se även
 <attr> Description
  Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
 </attr>
 <attr> Specification
  Textfält synlig i XTT som specificerar frekvensomriktaren
 </attr>
 <attr> InIdPar
  Används vid parameterläsning ID, se omriktarmanual.
 </attr>
 <attr> InIndPar
  Används vid parameterläsning IND, se omriktarmanual.
 </attr>
 <attr> InValuePar
  Används vid parameterläsning VALUE, se omriktarmanual.
 </attr>
 <attr> StatusWordSW
  Fördefinierad insignal statusord SW, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> ActSpeed
  Fördefinierad insignal hastighetsärvärde ACT, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> ActTorque
  Odefinierad insignal PZD4 som ska parametreras till ärmoment i omriktare, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> ActCurrent
  Odefinierad insignal PZD3 som ska parametreras till ärström i omriktare, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> PZD5
  Odefinierad ledig insignal PZD5 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> PZD6
  Odefinierad ledig insignal PZD6 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> PZD7
  Odefinierad ledig insignal PZD7 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> PZD8
  Odefinierad ledig insignal PZD8 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> PZD9
  Odefinierad ledig insignal PZD9 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> OutIdPar
  Används vid parameterskrivning ID, se omriktarmanual.
 </attr>
 <attr> OutIndPar
  Används vid parameterskrivning IND, se omriktarmanual.
 </attr>
 <attr> OutValuePar
  Används vid parameterskrivning VALUE, se omriktarmanual.
 </attr>
 <attr> ControlWordCW
  Fördefinierad utsignal styr-kontrollord CW, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> RefSpeed
  Fördefinierad utsignal hastighet/referens börvärde REF, se omriktarmanual och objekt BaseFcPPO5PbModule.
 </attr>
 <attr> OPZD3
  Odefinierad ledig utsignal PZD3 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> OPZD4
  Odefinierad ledig utsignal PZD4 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> OPZD5
  Odefinierad ledig utsignal PZD5 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> OPZD6
  Odefinierad ledig utsignal PZD6 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr>IndWarning 
  Går hög om omriktaren varnar för något eller den inte är redo för fjärrstyrning.
 </attr>
 <attr>IndError 
  Går hög om omriktaren trippar.
 </attr>
 <attr>OpReset 
  Beordring om återställning vid trippad omriktaren. Påverkas normalt via knapp Reset i objektsbild,
  nollställs alltid.
 </attr>
 <attr>OpWritePar
  Knapp Write i objektsbild More som beordrar skrivning av parameter i omriktaren, nollställs alltid
 </attr>
 <attr>OpReadPar
  Knapp Read i objektsbild More som beordrar skrivning av parameter i omriktaren, nollställs alltid
 </attr>
 <attr>OpBackupPar
  Knapp Write i objektsbild More för backup/permanenta parametrar som skrivits till omriktaren,
  nollställs alltid.
 </attr>
 <attr>CommOk 
  Går hög när proview har kontakt/kommunikation med omriktaren via profibus/dp. 
 </attr>
 <attr>AlarmOk 
  Omriktare uppstartad alternativt redo och i fjärrstyrningsmod, dvs att larma är okej.
 </attr>
 <attr>PowerStartUp 
  Omriktare startar upp (tidsfördröjning), styr indikatorer att blinka i objektbild mm. Se
  attribut PowerUpTime.
 </attr>
 <attr>ReadyRemote 
  Omriktare driftklar och redo för fjärrstyrning via Profibus.
 </attr>
 <attr>ConvertReady 
  Omriktare driftklar, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertRun 
  Omriktare startad, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertTripped 
  Omriktare utlöst, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertOnInhibit 
  Omriktare förreglad, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertWarning 
  Omriktare i varning, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertRemote 
  Omriktare i fjärrstyrningsmod, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>PowerUpTime 
  Tid i sekunder man anser omriktare tar för att komma igång (boota) vid spänningstillslag.
 </attr>
 <attr>RequestPar 
  Signal för hantering av skriv/läsning parametrar i omriktaren.
 </attr>
 <attr>WriteValuePar 
  Signal för hantering av skriv/läsning parametrar i omriktaren.
 </attr>
 <attr>ReadValuePar 
  Signal för hantering av skriv/läsning parametrar i omriktaren.
 </attr>
 <attr>ReadCodePar 
  Signal för hantering av skriv/läsning parametrar i omriktaren.
 </attr>
 <attr>ReadCodeSubPar 
  Signal för hantering av skriv/läsning parametrar i omriktaren.
 </attr>
 <attr>AlarmLocalMod 
  Larmtext för omriktare i lokal mod.
 </attr>
 <attr>AlarmTripped 
  Larmtext för utlöst omriktare.
 </attr>
 <attr>AlarmWarning
  Larmtext för omriktare i varningsläge.
 </attr>
 <attr>AlarmError
  Larmtext för omriktare i felläge (trasig).
 </attr>
 <attr>AlarmConnection
  Larmtext för omriktare när kommunikationen är nere.
 </attr>
 <attr>DefTrend 
  Trendobjekt visas enligt trendmetoden, referens till objektets PlotGroup objekt.
 </attr>
 <attr> HelpTopic
  Ämnesreferens till hjälpen för objektet  
 </attr>
 <attr> DataSheet
  URL till datablad för objektet  
 </attr>
 <attr> CircuitDiagram
  URL till elschema för objektet  
 </attr>
 <attr> Note
  Notering (synlig i objektsbild) för objektet  
 </attr>
 <attr> Photo
  URL till ett fotografi för objektet  
 </attr>
 <attr>TrendActSpeed 
  Trendobjekt för ärhastighet (varvtal oftast).
 </attr>
 <attr>TrendActTorque 
  Trendobjekt för ärmoment (vridmoment)
 </attr>
 <attr>TrendActCurrent
  Trendobjekt för ärström.
 </attr>
 <attr>TrendRefSpeed 
  Trendobjekt för börreferens/hastighet (bör varvtal oftast).
 </attr>
 <attr>PlotGroup 
  Trend plottgrupp för signaler som definierats i trendobjekten.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 <attr>IoConnect
  Referens till profibusmodulen i planthierarkin för signalutbyte med omriktaren.
 </attr>
 <attr>IoStatus
  Referens till profibusnodens status, dvs om kommunikationen är okej (syns bara i runtime).
 </attr>

</class>

######################################################################################## 

<class>BaseFcPPO5Fo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseFcPPO5
 Funktionsobjekt BaseFcPPO5Fo för styrning frekvensomriktare via Profibus/dp.
 @image orm_basefcppo5fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseFcPPO5
 i planthierarkin.
 
 @b Se även
 @classlink BaseFcPPO5PbModule basecomponent_basefcppo5pbmodule.html
 <attr>PowerOn 
  Ingången ska vara hög när man anser att omriktaren lever, dvs elkraft påslagen (huvudkontaktorsvar).
  Normalt villkor för att larmövervakning kopplas på oavsett omriktarstatus. När signal går hög löper
  en tid PowerUpTime och när denna tid löpt ut bör omriktaren normalt vara startklar. Tiden ställs in
  i objektet attribut PowerUpTime (default 15s). När tiden löper (start upp pågår) blinkar
  omriktarens statusindikeringar i bilder.
  
  Det går bra att strunta i denna insignal men då får man inte blink och larm när kommunikationen
  med omriktaren är nere/död.
 </attr>
 <attr> Start
  Ingång för startorder (run) till omriktaren vilket är bit 0 i kontrollordet O_CW, dvs omriktaren bör
  bli "enable operation" för referensen RefSpeed. När signal går hög/låg startar/stoppar motorn normalt
  med ramper inställda i omriktaren. Funktionen kallas för OFF1.
 </attr>
 <attr> RefSpeed
  Analog ingång för hastighetsreferensen till omriktaren, dvs styrordet O_REF. I denna Ao kanal O_REF
  attribut görs skalning och anpassning mot omriktarens referens.
 </attr>
 <attr> NoOff2
  Ingång för stopporder till omriktaren, 0 = stoppa genom att motorn rullar ut (ej ramp). Används normalt ej.
  Funktionen kallas för OFF2.
 </attr>
 <attr> NoOff3
  Ingång för nödstoppsorder till omriktaren, 0 = stoppa med ramp (ramptid i omriktare). Används normalt ej.
  Funktionen kallas för OFF3.
 </attr>
 <attr> EnableOperation
  Ingång för driftfrigivning till omriktaren, 0 = normalt rullar motorn ut. Används normalt ej.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> ReadyRemote
  Utgång (1:a) när omriktaren anses uppstartad och status är sådant att startorder från fjärr
  kan ske, dvs tid PowerUpTime löpt ut eller omriktare redo och omriktare ej trippad, ej
  local/intern mod mm.   
 </attr>
 <attr> Run
  Utgång (1:a) när drift är startad (enable run), statusord SW bit 2.
 </attr>
 
 </class>

####################################################################################

<class> BaseFcPPO5PbModule
 @Version
 @Author je
 @summary Profibus/dp modul för frekvensomriktare med PPO5.
 @b Profibus/dp PPO5 modul för en frekvensomriktare
 BaseFcPPO5Module objektet hanterar datautbyte mellan en frekvensomriktare och Proview
 via Profibus/dp med hjälp av standardprotokollet PPO5 (Parameter/Process data object).
 
 PPO5 protokollet är det PPO alternativ (av 1-5) som innehåller mest alternativ för IO utbyte
 och funktioner mellan ett styrsystem och en omriktare.
 
 Modulobjektet BaseFcPPO5Module (placerad nodehierarkin) ingår i frekvensomriktarobjekt
 BaseFcPPO5 (placerad planthierarkin) samt ett slavobjekt Pb_DP_Slave.
  
 Aggregat BaseFcPPO5MotorAggr (Fan & Pump också) använder denna modul för att kommunicera
 med en omriktare.

 @b Modulobjektet
 @image orm_component_example15.gif
 Gult område visar de viktigaste IO kanalerna och blått är själva objektmodulen.

 Proview tolkar/hanterar PPO standardorden (16 bitar) SW och CW som namnats I_SW och O_CW
 i bild ovan enligt följande: 
 
  Kontrollord CW: 
  
  BIT:  PPO NAMN:     PROVIEW TOLKNING AV FUNKTIONEN:
  
  0     OFF1          Start (run) om bit är 1, stoppar med ramp om bit är 0.
  1     OFF2          Nödstopp om bit är 0, stoppar med frirullning, dvs ingen ramp.
  2     OFF3          Nödstopp om bit är 0, stoppar med nödstoppsramp inställd i omriktare. 
  3     ENABLE        Driftfrigivning om bit är 1.
  4     RAMP ZERO     Rampgeneratorns utsignal tvingas till noll om bit är 0.
  5     RAMP HOLD     Rampgeneratorns utsignal fryses om bit är 0. 
  6     RAMP IN-ZERO  Rampgeneratorns insignal tvingas till noll om bit är 0. 
  7     RESET         Återställning trippad omriktare om bit är 1 (flanktriggad).
  8     ?             Se PPO protokollet.
  9     ?             Se PPO protokollet.        
  10    REMOTE CMD    Begäran om bit är 1 att styrning ska ske via fältbussen (Proview/PLC).
  11    ?             Se PPO protokollet.
  12-15 RESERVED      Reserverad för framtid funktion, Se PPO protokollet. 


  Statusord SW: 
  
  BIT:  PPO NAMN:      PROVIEW TOLKNING AV FUNKTIONEN:
  
  0     READY ON       Redo (switch on) om bit är 1.
  1     READY RUN      Driftklar om bit är 1.
  2     READY REF      Startad (run) följer styrreferensen om bit är 1.
  3     TRIPPED        Omriktare trippad (återställning krävs) om bit är 1, drift stoppad.
  4     OFF2           Nödstopp med frirullning aktiverad om bit är 1.
  5     OFF3           Nödstopp med stoppramp aktiverad om bit är 1.
  6     INHIBITED      Driftförreglad bit är 1.
  7     ALARM          Varningslarm om bit är 1 (stoppar ej drift) 
  8     AT_SETPOINT    Driftvarvtal uppnått om bit är 1, dvs bör/ärvärde är lika. 
  10    REMOTE         Om bit är 0 är omriktaren i lokal mod, dvs styrning via Proview/PLC ej tillåten.
  11    ?              Se PPO protokollet.
  12    ?              Se PPO protokollet.  
  13-14 RESERVED       Reserverad för framtid funktion, Se PPO protokollet. 
  15    ?              Se PPO protokollet. 
  
  OBS! Om omriktaren styrs med annan bit tolkning kommer kanske inte styrningen att fungera som tänkt,
  dvs kontrollera omriktarens PPO hantering för dessa viktiga styr och statusord att de överensstämmer
  med Proview tolkning.

 @h1 Konfigurering
 För frekvensomriktarens Profibus/dp kommunikation behöver man skapa objekt i nodehierarkin under ett
 Pb_Profiboard. Först skapar man ett Pb_DP_Slave objekt och detta gör att man kan konfigurera profibus
 och skapa ett tillhörande IO objektmodul BaseFcPPO5Module via en konfigurator "ConfigureSlave" metod.
 
 För att förtydliga hur man konfigurerar används en ABB omriktare som ett exempel och två bilder (skärm
 dumpar) nedan:
 
 -1 Skapa ett slavobjektet Pb_DP_Slave genom att "klicka in det" under ett Pb_Profiboard objekt.
 
 -2 Ange GSDfile för en ABB omriktare ($pwr_exe/abb_acs_pb_slave.gsd) i attribut GSDfile i Pb_DP_Slave
    objektet.   
 
 -3 Välj ut "Module Class" BaseFcPPO5Module via Profibus konfigurator "ConfigureSlave" metoden. Denna
    procedur skapar objektet BaseFcPPO5Module automatiskt med namnet M1 när man trycker på Ok knappen.

 -4 Via "ConfigureSlave" metoden i Proview ska man kontrollera och ställa in följande för en
    ABB omriktare ACS800:
            
    - PrmUserData Operation mode till till Vendor specific.
    - Protokoll till PPO5.
    - Pb_DP_Slave objektets attribut ByteOrdering ska vara Big Endian.

    - Cut-Off time bör vara 1 (hanterar vad som händer i omriktaren vid profibusfel).

 -5 Koppla en PLC tråd till attribut ThreadObject i objektet Pb_DP_Slave
    (även BaseFcPPO5Module ska ha en tråd).

 -6 Slaven/nodens adress ställs in i objekt Pb_DP_Slave attribut SlaveAddress direkt eller via
    "ConfigureSlave" metoden.
    
 -7 WdFact1 och WdFact2 definierar tiden i watchdog hanteringen för en profibusslav, dvs tiden
    innan omriktaren ska lösa ut (trippa) om den är konfigurerad att göra det i omriktaren.
 
    Tiden beräknas så här:
 
      t[ms] = 10 * WdFact1 * WdFact2
   
      Exempel, WdFact1 på 10 och WdFact2 på 5 blir watchdogtid på 0,5 sekunder.
 
    Tidsfaktorerna ställs in i objekt Pb_DP_Slave. 

 -8 Koppla därefter modulen till frekvensomriktarobjekt BaseFcPPO5 i planthierarkin med hjälp av
    IoConnect funktionen. Detta gör att allt signalutbyte som behövs nu är knutet.

 @b Bild inställningar via "ConfigureSlave" metoden
 @image orm_component_example11.gif
 Bilden, gult område visar vilka inställningar och val som beskrivs
 ovan när man konfigurerar slaven via "ConfigureSlave" metoden.

 @b Bild inställningar i objektet
 @image orm_component_example12.gif
 Bilden, gult område visar vilka inställningar i objektet som
 beskrivs ovan och som man kan ställa in direkt i objektet utan att
 använda "ConfigureSlave" metoden.
 
 Blått område visar objekten som behövs för att skapa BaseFcPPO5Module
 via "ConfigureSlave" metoden. 

 @b Inställningar PPO5
 PPO5 protokollets PZD data (prozessdaten) PZD3 och PZD4 ska också konfigureras i omriktaren för ström
 och moment, dvs:
 
  -PZD3  Ställs in för current/ström i omriktaren
  -PZD4  Ställs in för Toque/moment i omriktaren 

 Anpassning/skalning mellan Proview och omriktarens IO signaler måste också göras i kanalobjekten
 ChanAi och ChanAo för frekvensomriktaren, dvs signaler i BaseFcPPO5Module som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    
  -I_PZD3    Ström
  -I_PZD4    Moment

  Se exempel nedan på hur en ABB omriktare och Proview kan ställas in.
  
 OBS! Att INTE alla data som specificeras i PPO5 protokollet finns tillgänglig i planthierarki
 objektet BaseFcPPO5.

 @b Exempel inställningar i en omriktare
 Nedan inställningar visar vilka parametrar som behöver gås igenom för att få ett fungerande
 signalutbytet mellan Proview BaseFcPPO5Module och en ABB ACS800 frekvensomriktare. Vissa
 inställningar har bara med själva omriktaren att göra och är med som ytterligare hjälp för
 intressanta parametrar att beakta.

     INSTÄLLNINGAR I ACS800 OMRIKTAREN (text på engelska):
      
     Parameter  Value      Description
     group  
      10.01     COMM.CW     Ext1 start/stop/direction
      10.03     ?           Rotation of the motor
      11.02     EXT1        Reference select
      11.03     COMM.REF    Source for external reference 1
      11.04     ?           Minimum value for external reference 1
      11.05     ?           Maximum value for external reference 1
      16.04     COMM.CW     Source for the fault reset signal "tripped"
      21.03     RAMP        Motor stop function
      22.01     ACC/DEC 1   Acceleration and deceleration times
      22.02     ?           Acc time 1
      22.03     ?           Dec time 1
      51.01     Profibus/dp Modultype 
      51.02     ?           Node adress (via dipswitchar, om switchar är 0 ställs den in här.)
      51.06     104         PZD3 IN, Current/Ström
      51.08     105         PZD4 IN, Torque/Moment
      
      98.02     FIELDBUS    Serial communication
      98.07     ABB Drives  Communication profile 
     
      16.01     Ja          Run enable parameter/driftfrigivning
      20.01     ?           Limits min speed
      20.02     ?           Limits max speed
         
      Exempel parameter PZD4 IN:
      
      Parameter PZD4 IN ställs in i parametergrupp 51.08 och ska ställas in till 105,
      som betyder värde "01.05" som är motorns ärmoment. Dennas signal läses sen av
      i Proview, ingångskanal I_PZD4.
      
      Överföringshastigheten (Baude raten) grupp 52.03 och PPO typen grupp 52.04 ställs in
      automatiskt när kommunikation etableras.
            
      Via "ConfigureSlave" metoden i Proview ska man ställa in följande för en ABB omriktare ACS800:
            
      - PrmUserData Operation mode till till Vendor specific (info från GSD fil)
      - Protokoll till PPO5 (info från GSD fil)
      - Pb_DP_Slave objektets attribut ByteOrdering till Big Endian (default är Little Endian)


      Proview kanalobjekt ChanAi och ChanAo attribut som styr skalning/anpassning mot
      omriktarens analoga signaler som behöver ändras visas här: 
      
      I_ACT (varvtal/ärvärde)

        Omriktarens  Max/Min varvtal parameter 20.01 och 20.02 bestämmer vad I_ACT ska
        skalas till. Exempel +/- 1500r/m är inställt i omriktaren vilket ger:  

        - RawValRangeLow         -20000
        - RawValRangeHigh        +20000
      
        - ActValValRangeLow      -1500	
        - ActValRangeHigh        +1500
      
        Omriktarens varvtalsområde råvärde i omriktaren är alltid +/- 20000.
      

      I_PZD3 (ström)
           
        Omriktarens strömområde är 0-1000A.

        - RawValRangeLow         -10000 
        - RawValRangeHigh        +10000  (betyder 1000A)
      
        - ActValValRangeLow      -1000 	
        - ActValRangeHigh        +1000

        Omriktarens strömområde råvärde i omriktaren är alltid +/- 10000 vilket är 1000.0 Amper
        (Råvärde RawValRange på 1382 betyder 138,2A).


      I_PZD4 (moment)
           
        Omriktarens momentområde är i procent (råvärde RawValRange på +/- 32768)

        - RawValRangeLow         -32768 
        - RawValRangeHigh        +32767  (betyder 327.67%)
      
        - ActValValRangeLow      -327.68	
        - ActValRangeHigh        +327.67

        Omriktarens momentområde i manualen är otydlig men dessa inställningar fungerar!!!


      O_REF (Referens/börvärde)
           
        Omriktarens  referensområde i varvtal parameter 11.04 och 11.05 bestämmer vad O_REF ska
        skalas till. Exempel +/- 1500r/m referensområde önskas vilket ger:  

        - RawValRangeLow         -20000 
        - RawValRangeHigh        +20000
      
        - ActValValRangeLow      -1500	
        - ActValRangeHigh        +1500
      
        Omriktarens  varvtalsområdes råvärde i omriktaren är alltid +/- 20000.


      Övriga attribut i kanalobjekten som skalar signaler kan lämnas som de är, dvs:

        - SensorSigValRangeLow 	  
        - SensorSigValRangeHigh
        - ChannelSigValRangeLow 	
        - ChannelSigValRangeHigh 	
      
      Att ändra/förstå dessa attribut är inte lätt och exemplet nedan visar när O_REF attributet
      skalas om så en begränsning av max +/- 400r/m kan "nå" omriktaren, dvs om Ao RefSpeed.ActualValue
      värde överskrider 400 blir omriktarens referens i alla fall bara 400:
      
        - ActValValRangeLow      -400   (begränsningen i r/m)
        - ActValRangeHigh        +400   (begränsningen i r/m)
        - SensorSigValRangeLow   -20    (1/5 av ChannelSigValRangeLow, dvs procent av 2000r/m)
        - SensorSigValRangeHigh  +20    (1/5 av ChannelSigValRangeHigh,dvs procent av 2000r/m)
        - ChannelSigValRangeLow  -100   (procent)	
        - ChannelSigValRangeHigh +100   (procent)	
        - RawValRangeLow         -20000 (ska alltid vara -20000)
        - RawValRangeHigh        +20000 (ska alltid vara +20000)

        Omriktarens min/max parametrar/styrreferens 11.04 och 11.05 är inställda på +/- 2000r/m
        i detta exempel och ChannelSigValRange och SensorSigValRange attributen ovan är i
        procent för enkelhetens skull.
	
        OBS! Att ställa in Proview på detta sätt är inte att rekomendera, det är bättre att
        omriktarens inställningar får råda.

        Om startorder OFF1 bit 0 i kontrollordet CW går från hög till låg och hög igen måste
        motorn rampa ner till noll innan motorn startar/börjar rampa upp igen!
       
@b Se även
@classlink BaseFcPPO5MotorAggr basecomponent_basefcppo5motoraggr.html
@classlink Pb_DP_Slave profibus_pb_dp_slave.html
 <attr>Super 
 Superklass, klicka på länk Pb_module för mer beskrivning om objektattributet. 
 </attr>
 <attr> I_ID
  Ingångskanal för parameterläsning ID, se omriktarmanual.
 </attr>
 <attr> I_IND
  Ingångskanal för parameterläsning IND, se omriktarmanual.
 </attr>
 <attr> I_VALUE
  Ingångskanal för parameterläsning VALUE, se omriktarmanual.
 </attr>
 <attr> I_SW
  Fördefinierad ingångskanal statusord SW, se omriktarmanual.
 </attr>
 <attr> I_ACT
  Fördefinierad ingångskanal hastighetsärvärde ACT, se omriktarmanual.
 </attr>
 <attr> I_PZD3
  Odefinierad ingångskanal PZD3 som ska parametreras till ärström i omriktare, se omriktarmanual.
 </attr>
 <attr> I_PZD4
  Odefinierad ingångskanal PZD4 som ska parametreras till ärmoment i omriktare, se omriktarmanual.
 </attr>
 <attr> I_PZD5
  Odefinierad ledig ingångskanal PZD5 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> I_PZD6
  Odefinierad ledig ingångskanal PZD6 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> I_PZD7
  Odefinierad ledig ingångskanal PZD7 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> I_PZD8
  Odefinierad ledig ingångskanal PZD8 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> I_PZD9
  Odefinierad ledig ingångskanal PZD9 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
  </attr>
 <attr> I_PZD10
  Odefinierad ledig ingångskanal PZD10 som inte används överhuvudtaget i BaseFcPPO5, se omriktarmanual.
 </attr>
 <attr> O_ID
  Utgångskanal för parameterskrivning ID, se omriktarmanual.
 </attr>
 <attr> O_IND
  Utgångskanal för parameterskrivning IND, se omriktarmanual.
 </attr>
 <attr> O_VALUE
  Utgångskanal för parameterskrivning VALUE, se omriktarmanual.
 </attr>
 <attr> O_CW
  Fördefinierad utgångskanal styr-kontrollord CW, se omriktarmanual.
 </attr>
 <attr> O_REF
  Fördefinierad utgångskanal hastighet/referens börvärde REF, se omriktarmanual.
 </attr>
 <attr> O_PZD3
  Odefinierad ledig utgångskanal PZD3 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> O_PZD4
  Odefinierad ledig utgångskanal PZD4 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> O_PZD5
  Odefinierad ledig utgångskanal PZD5 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> O_PZD6
  Odefinierad ledig utgångskanal PZD6 som inte används i BaseFcPPO5 PlcPgm, se omriktarmanual.
 </attr>
 <attr> O_PZD7
  Odefinierad ledig utgångskanal PZD7 som inte används överhuvudtaget i BaseFcPPO5, se omriktarmanual.
 </attr>
 <attr> O_PZD8
  Odefinierad ledig utgångskanal PZD8 som inte används överhuvudtaget i BaseFcPPO5, se omriktarmanual.
 </attr>
 <attr> O_PZD9
  Odefinierad ledig utgångskanal PZD9 som inte används överhuvudtaget i BaseFcPPO5, se omriktarmanual.
 </attr>
 <attr> O_PZD10
  Odefinierad ledig utgångskanal PZD10 som inte används överhuvudtaget i BaseFcPPO5, se omriktarmanual.
 </attr>

</class>

####################################################################################

<class> BaseFcPPO3MotorAggr
 @Version
 @Author cs/je
 @summary Motoraggregat, frekvensstyrd, Profibus/dp PPO3
 @b Motoraggregat frekvensstyrd, Profibus/dp PPO3
 BaseFcPPO3MotorAggr objektet hanterar en motor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO3 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. PPO3 protokollet är begränsad att visa processvärden, endast
 hastigheten (oftast varvtal) kan läsas av och ingen parametrering kan göras under drift. Önskar
 man mer funktionalitet bör man använda BaseFcPPO5MotorAggr objektet istället.
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  

 Kontaktorn kan konfigureras med två utgångar om pulsmanöver start/stopp önskas. Se klasshjälp
 om BaseContactor där info om pulsstyrning tas upp utförligare och speciellt exempel 3 under
 rubrik "Exempel styrsätt" som visar principen hur kontaktorn i detta aggregat fungerar vid
 pulsstyrning.

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
  
 Om man vill styra en fläkt eller pump bör man välja BaseFcPPO3PumpAggr eller BaseFcPPO3FanAggr
 objekten istället som har anpassade objektsymboler för dessa drifter.
 
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/FcPPO3MotorAggr.
 @image orm_motoraggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo3motoraggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @b Exempel
 @image orm_component_example6.gif
 Bilden visar när auto/man mod styrs av ingång ExtControl i funktionsobjektet. Auto mod
 aktiveras genom att sätta ingång ExtControl till 1 (knappar start/stopp dimmas) och styr
 sedan frekvensomriktaren via ingång ExtStart.
  
 Denna konfiguration/bild utan auto/man knappar fås genom att konfigurerad aggregatet CbCoFcSl och
 via det inbyggda modobjektet CompModeA sätta OpExtAndIntMan till 1.
 
 OBS! Att startspärren som används egentligen är en komponent av typen säkerhetsbrytare (BaseSafetSwitch),
 dvs det är bara objektbilder som skiljer sig åt när man använder startspärr eller säkerhetsbrytare.
 
 @h1 Konfigurering
 BaseFcPPO3MotorAggr objektet hanterar 24 olika alternativ beroende på den elektriska utformningen:

  - Circuitbreaker       Effektbrytare (MCCB)
  - Contactor            Kontaktor  
  - Frequencyconverter   Frekvensomriktare
  - Safetyswitch         Säkerhetsbrytare, arbetsbrytare (BaseSafetySwitch)  
  - Startlock            Startspärr, arbetsbrytare (BaseSafetySwitch)  
  - Fuse                 Säkring (snabba!)

  1  CbCoFcSs        Circuitbreaker, contactor, frequencyconverter and safetyswitch.
  2  CbCoFcSl        Circuitbreaker, contactor, frequencyconverter and startlock.
  3  CbCoFc          Circuitbreaker, contactor and frequencyconverter.
  4  CbFcSs          Circuitbreaker, frequencyconverter and safetyswitch.
  5  CbFcSl          Circuitbreaker, frequencyconverter and startlock.
  6  CbFc            Circuitbreaker and frequencyconverter.
  7  CoFcSs          Contactor, frequencyconverter and safetyswitch.
  8  CoFcSl          Contactor, frequencyconverter and startlock.
  9  CoFc            Contactor and frequencyconverter.
  10 FcSs            Frequencyconverter and safetyswitch.
  11 FcSl            Frequencyconverter and startlock.
  12 Fc              Frequencyconverter.
  13 FuCbCoFcSs      Fuse, circuitbreaker, contactor, frequencyconverter and safetyswitch.
  14 FuCbCoFcSl      Fuse, circuitbreaker, contactor, frequencyconverter and startlock.
  15 FuCbCoFc        Fuse, circuitbreaker, contactor and frequencyconverter.
  16 FuCbFcSs        Fuse, circuitbreaker, frequencyconverter and safetyswitch.
  17 FuCbFcSl        Fuse, circuitbreaker, frequencyconverter and startlock.
  18 FuCbFc          Fuse, circuitbreaker and frequencyconverter.
  19 FuCoFcSs        Fuse, contactor, frequencyconverter and safetyswitch.
  20 FuCoFcSl        Fuse, contactor, frequencyconverter and startlock.
  21 FuCoFc          Fuse, contactor and frequencyconverter.
  22 FuFcSs          Fuse, Frequencyconverter and safetyswitch.
  23 FuFcSl          Fuse, Frequencyconverter and startlock.
  24 FuFc            Fuse, Frequencyconverter.
  

  OBS! Motorn kan konfigureras med temperaturövervakning (tempswitch, Tempsensor)via
  "ConfigureComponent" metoden via inbyggda motorobjektet BaseMotor.

  OBS! Använder man temperaturövervakning i motorobjektet ska man vara medveten att denna
  förregling kopplas bort om funktionsobjektets ingången DisableSup [dis] är 1, dvs motorn
  kan starta även vid hög temp!

  Inmatningsfält Speed (OpRefMan i CompModeA) max och min värde som operatör kan mata in i
  objektsbilden styrs av attribut OpMinRefMan och OpMaxRefMan i inbyggda objektet CompModeA.
    
  Enheten/texten för Speed värdet man skriver in kan visas/ändras, dvs det är texten i
  inbyggda objektet BaseFcPPO3 attribut ActSpeed.Unit som visas i bilden.
    
  @b Signaler
  Objektet innehåller signaler som ska kopplas till I/O kanaler.

  - CircuitBreaker.NotTripped     Di (valbart via Disable)
  - SafetySwitch.On               Di (valbart via Disable)
  
  - Contactor.Order               Do (valbart via "ConfigureComponent" metoden) 
  - Contactor.OrderOff            Do (valbart via "ConfigureComponent" metoden val TwoOrderFeedback)
  - Contactor.Feedback            Di (valbart via "ConfigureComponent" metoden) 
  - Motor.TempSwich.Switch        Di (valbart via "ConfigureComponent" metoden)
  - Motor.TempSensor.Value        Ai (valbart via "ConfigureComponent" metoden)
  
  Ska en ingång inverteras för rätt funktion får man ändra attributet "InvMask" på
  kanal/kortobjektet för Di signalen.

  OBS! Att göra Disable på en IO signal/komponent innebär att man kan få en felaktig
  objektsbild och därför ska man bara konfigurera/Disable komponenter via
  "ConfigureComponent" metoden för hela aggregatet. 

  Valet där kontaktorn har två styrutgångar med pulsfunktion (TwoOrderFeedback) används
  när en kontaktor har självhållning. Se klasshjälp om BaseContactor för mer info.

 @b Mod
 Dom olika moder Auto/Manuell/lokal som kan förekomma hanteras utav mod objektet
 CompModeA.
 
 OBS! Med lokal mod menas INTE omriktarens lokala mod utan avser lokal manöverlåda
 vid driften/motor om sådan finns.
 
 Modfunktion:
 
 -Felhantering för manövrering (5 larm).
 -Dimmar knappar i objektsbild så felmanövrering undviks.

 Körsätt som kan konfigureras:
 
 1 Fjärr mod auto/man  Driftens auto/manuell mod styrs av knappar i bilden.
 2 Fjärr mod extern    Driftens auto/manuell mod styrs av "extern" funktion via PLC programmet
 3 Fjärr mod extern    Driften styrs som 2, men knappar Start/Stopp kan användas i objektsbilden.
 4 Intern mod          Driften styrs endast men knappar Start/Stopp i objektsbilden.
 5 Lokal mod           Driften styrs via manöverlåda placerad lokalt vid driften.
 
 Körsätt enligt ovan: (attributen ligger i inbyggda CompModeA objektet)
 
 1 Är grundinställningen (default).
 2 Inga knappar i bild fås genom att sätta attribut OpExtOnly till 1.
 3 Är som 2, men Start/Stopp knappar är kvar i bilden, fås genom att sätta attribut OpExtAndIntMan till 1. 
 4 Fås genom att sätta attribut OpIntOnly till 1. 
 5 Hanteras via funktionsobjektets ingång Local, kan konfiguras bort genom att sätta attribut OpNoLocal till 1. 

 OBS! Endast en åt gången av dessa tre inställningsattribut i CompModeA får ha värdet 1, Är flera
 satta till 1 samtidigt fungerar inte objektet som tänkt:
 
  -OpExtAndIntMan
  -OpIntOnly
  -OpExtOnly
  
 Se objekt CompModeA för mer info om hur man konfiguerar moder.
  
 OBS! Konfiguerar man CompModeA för extern styrning (inga knappar auto/man) och vid lokal
 körning bör man använda aggregatets funktionsobjektsutgång Error [err] för att ta ner
 styrorder så att oönskade återstarter förhindras vid/efter fel.
 
 @b Övervakning och felhantering
 Aggregatet innehåller en hel del övervakning och larm. Varje komponent har oftast en larmtext
 som kan ändras, se hjälpen för de inbyggda objekten för mer info. 

 Försöker man påverka objektets olika moder mm och förreglingar är aktiva som ska hindra
 felmanövrering utgår diverse larm.

 Objektets auto/man mod går över i MAN mod om elkraften försvinner, säkerhetsbrytare frånslagen,
 skydd löser ut eller omriktaren inte är driftklar för fjärrstyrning, detta för att förhindra oönskade
 återstarter. Denna funktion går att koppla bort via inbyggda CompModeA objektets inställningsattribut
 OpNoAutoToMan.

 Ingången PowerInterlock [pil] på funktionsobjektet förreglar manövrering av huvudkontaktorn från
 bild (knappar dimmas).
 
 Ingången ExtInterlock [ilk] på funktionsobjektet förreglar startorder till omriktaren, knappar
 Start/Stopp dimmas.
   
 Om ingången PowerInterlock [pil] eller ExtInterlock [ilk] på funktionsobjektet är hög förreglas
 startorder till frekvensomriktare och detta gäller i alla moder. Det normala beteendet när dessa
 ingångar går höga är att tvinga objektet i manuell mod, vill man ligga kvar i auto mod oavsett
 dessa ingångar kan man konfigurera detta genom att sätta attributet OpNoAutoToMan till 1 i inbyggda
 objektet CompModeA.

 OBS! Om inställningsattributet OpNoAutoToMan är satt till 1 är det programmerarens uppgift att
 använda funktionsobjektets utgång Error [err] för att ta ner styrorder på ingång ExtStart [est]
 alternativt ta ner ExtControl [eco] om denna används, detta för att förhindra oönskade återstarter
 vid fel.
 
 OBS! Används lokal mod ska man ta ner manuell styrorder på funktionsobjektets ingång LocalStart
 [lst] för att förhindra oönskade återstarter vid fel, dvs använd funktionsobjektets utgång Error
 [err] för detta ändamål, se exempel nedan.

 @b Exempel felhanteringskod
 @image orm_component_example4.gif
 Bilden visar ett kodexempel när utgången err i funktionsobjektet används för att återställ lokal
 start, återställningskoden är gulmarkerad i bilden. OBS! Att kodexemplet är ifrån ett BaseMotorAggr
 objekt, men principen är densamma för BaseFcPPO3MotorAggr.
 
 Lokala manöverlådan innehåller en start-tryckknapp DI24.Ch19, stopp-tryckknapp DI24.Ch20 och en
 omkopplare med två lägen, DI24.Ch10 för fjärrstyrningsläget och Di24.Ch11 för lokalläget. 
 
 Err utgången påverkar en Dv "Driftklar" som i sin tur återställer den lokala starten SR_R
 vippa LokStart. Denna kod förhindrar oavsiktlig start från yttre logik efter ett fel i objektet,
 exempelvis utlöst motorskydd.
 
 OBS! Att denna återställningsfunktion är programmerarens uppgift att koda, dvs utgången err är
 till för det. Om Auto/Man mod är konfigurerad att styras utanför objektet (ingångar eco, est) bör
 man också ta hänsyn till err utgången för att förhindra oavsiktlig start efter fel.
       
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseFcPPO3MotorAggrFo.
 @image orm_basefcppo3motoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 Startorder (via kontrollord ControllWordCW) och analoga referensutgång (RefSpeed) via Profibus till
 omriktaren styrs av fyra olika körsätt:
  
  1 Ingång ExtStart [est] från funktionsobjektet och intern auto/man mod.
  2 Ingång ExtStart [est] från funktionsobjektet och extern auto/man mod [eco].
  3 Knappar Start/stopp från objektsbilden i manuell mod.
  4 Ingång LokalStart [lst]från funktionsobjektet och LocalMode [loc].

  Analoga styrreferensen tas ifrån ingång RefSpeedExt [REX] i auto/extern mod, ingång RefSpeedLoc
  [RLO] i lokal mod eller internt via bild (OpRefMan) i man mod. Objektet rampar INTE signalen på
  något sätt och om/när startorder tas ner nollas analoga referensen direkt.

 @b Simulering
 För simulering använder man funktionsobjektet BaseFcPPO3MotorAggrSim.

 @b Profibus/dp
 För frekvensomriktarens Profibus/dp kommunikation med protokollet PPO3 ska man använda modulobjektet
 BaseFcPPO3PbModule. Se klasshjälp för BaseFcPPO3PbModule objektet där en utförligare beskrivning hur
 man skapar ett modulobjekt i nodehierarkin och konfigurerar profibus för en frekvensomriktare. 
 
 Koppla därefter modulen till aggregatets inbyggda objekt BaseFcPPO3 (FrequencyConverter) med hjälp
 av IOconnect funktionen.

 INSTÄLLNINGAR PPO3:
 
 PPO3 protokollets data kallas för PZD (prozessdaten). Anpassning/skalning mellan Proview och
 omriktarens IO signaler måste också göras i objekt/profibusmodul BaseFcPPO3PbModule kanalobjekten
 ChanAi och ChanAo för aggregatet, signaler som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    

 Inbyggda BaseFcPPO3 frekvensomriktarobjektets Ao signal RefSpeed attribut PresMaxLimit och
 PresMinLimit anger objektsbildens speed-grafens visningsområde. Dessa går att ändra under drift
 genom att klicka på grafen.
  
 Se objekt BaseFcPPO3PbModule för mer info och exempel.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
 Superklass, klicka på länk Aggregate för mer beskrivning om objektattributet. 
 </attr>
 <attr>GraphConfiguration 
  Attribut för att hålla reda på vilket konfigurationsalternativ (bild) som är valt.
  (ConfigureComponent method)
 </attr>
 <attr>Ready 
  Attribut (1:a) som visar när aggregatet är redo för start/stopp oavsett mod. Dvs ingen rådande
  förregling eller utlöst skydd hindrar start. Indikator Ready i bild blir grön i objektsbilden.
 </attr>
 <attr>ExtInterlock 
  Förreglingsingång på funktionsobjektet, ska vara falsk annars tas orderutgång ner i
  ALLA moder. Dessutom tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan
  är 1 i aggregatets modobjekt CompModeA.
 </attr>
 <attr> LocalMode
  Påverkas via ingång i funktionsobjektet och är normalt en omkopplare i lokal
  manöverlåda. Denna mod gäller före alla andra.
 </attr>
 <attr> OpPowerOn
  Beordring huvudkontaktor till, påverkas normalt via knapp On/Till i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
 </attr>
 <attr> OpPowerOff
  Beordring huvudkontaktor från, påverkas normalt via knapp Off/Från i objektsbild, nollställs alltid.
  Funktionen på knappen i bilden är "SetDig".
 </attr>
 <attr>PowExtInterlock 
  Förreglingsingång på funktionsobjektet för elkraft, dimmar knappar Till/Från för huvudkontaktorn.
  Ska vara falsk annars tas orderutgång ner i ALLA moder. Dessutom tvingas normalt auto mod till man
  mod. Se mer viktig info om denna signal i hjälpen för tillhörande funktionsobjekt. 
 </attr>
 <attr>PowOnOffDim 
  Styr att knappar Till/Från för kontaktor/elkraft att dimmas, går hög när objektet anser det olämpligt
  att manövrera elkraften, bl.a frånslagen säkerhetsbrytare, övertemp i motor mm. 
 </attr>
 <attr>IndWarning 
  Går hög om ett B-larm är aktivt i aggregatet, objektsymbol blir gul.
 </attr>
 <attr>IndError 
  Går hög om A-larm är aktivt i aggregatet, objektsymbol blir röd.
 </attr>
 <attr>RunTimeCounter
  Drifttidsmätning, klicka på länk RunTimeCounter för mer beskrivning om objektattributet. 
 </attr>
 <attr>AlarmTextToOften
  Larmtext när försök att starta upp (huvudkontaktor) omriktaren sker för ofta (B-larm). Kan kopplas
  bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>AlarmTextPowOnNotOk
  Larmtext när tillslag av huvudkontaktor för omriktaren görs och den är förreglad att gå till
  (B-larm). Kan kopplas bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>AlarmTextStartNoOk
  Larmtext när starförsök (run) till omriktaren görs och den är förreglad att starta (B-larm).
  Kan kopplas bort via ingång SupDisabled på PLC funktionsobjektet.
 </attr>
 <attr>CircuitBreaker
  Effektbrytare, klicka på länk BaseCircuitBreaker för mer beskrivning om objektattributet. 
 </attr>
 <attr>Contactor
  Kontaktor, klicka på länk BaseContactor för mer beskrivning om objektattributet. 
 </attr>
 <attr>FrequencyConverter
  Frekvensomriktare, klicka på länk BaseFcPPO3 (Profibus) för mer beskrivning om objektattributet. 
 </attr>
 <attr>SafetySwitch
  Säkerhetsbrytare eller startspärr, klicka på länk BaseSafetySwitch för mer beskrivning om
  objektattributet. 
 </attr>
 <attr>Motor
  Motor med temperaturövervakning, klicka på länk BaseMotor för mer beskrivning om objektattributet.
 
  OBS! Att motorkonfiguration med tempsensor/switch inte stöds i aggregatets objektsbilder, dvs
  temperaturvisning, indikeringar syns ej. 
 </attr>
 <attr>Mode
  Mod objekt som hanterar mod Auto/Man/lokal och dynamik i bilder och larm för lokal mod.
  Se länk CompModeA för mer info.
  
  OBS! Att mod konfigurationen med text On/Off på knappar inte stöds i aggregatets 
  objektsbilder, dvs texten Start/Stopp visas alltid oavsett vilket alternativ som är valt.
 </attr>
 <attr>DefTrend 
  Trendobjekt visas enligt trendmetoden, referens till omriktarens PlotGroup objekt.
 </attr>
 <attr>SupDisabled 
  Anger om larmövervakning kopplas bort (1:a) eller inte (0:a). Styrs via ingång "dis" på
  PLC funktionsobjektet. OBS! Att färgstyrning i bilder INTE påverkas eller attributen
  IndError, IndWarning.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>

</class>


######################################################################################## 

<class>BaseFcPPO3MotorAggrFo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseFcPPO3MotorAggr
 Funktionsobjekt för BaseFcPPO3MotorAggr, BaseFcPPO3FanAggr och BaseFcPPO3PumpAggr.
 @image orm_basefcppo3motoraggrfo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseFcPPO3MotoroAggr
 i planthierarkin.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html 
 @classlink BaseFcPPO3PbModule basecomponent_basefcppo3pbmodule.html
 <attr> RefSpeedExt
   Analog ingång för hastighetsreferensen till omriktaren i Auto/extern mod. Se Ao kanalobjektet
   O_REF i profibusmodulen BaseFcPPO3PbModule för mer info om skalning/anpassning mot omriktaren.
 </attr>
 <attr> RefSpeedLoc
   Analog ingång för hastighetsreferensen till omriktaren i lokal mod. Se Ao kanalobjektet O_REF
   i profibusmodulen BaseFcPPO3PbModule för mer info om skalning/anpassning mot omriktaren.
   
  OBS! Med lokal mod menas INTE omriktarens lokala mod utan avser lokal manöverlåda
  vid driften/motor om sådan finns, dvs ingång OpLocStart [lst] aktiverar denna referens.
 </attr>
 <attr>PowerInterlock 
  Förreglingsingång för elkraft, dimmar knappar Till/Från för huvudkontaktorn. Ska vara falsk
  annars tas orderutgång ner i ALLA moder. Dessutom tvingas auto mod till man mod om
  inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt CompModeA.
  
  OBS! Att förreglingen INTE hindrar huvudkontaktorns orderutgång utan bara dimmar knappar och
  förreglar startsignalen till omriktaren.
 </attr>
 <attr> ExtControl
   Används för att styra mod auto/man när man konfigurerat CompModeA objektets attribut
   OpExtAndIntMan till 1. dvs om ExtControl är 0 är det man mod och om 1 är det auto
   mod (extern mod styrning).

   Funktionen/inställningen används alltså när man via objektbilden manuellt vill manövrera
   med knappar start/stopp men inte använder auto/man mod. Inga auto/man knappar syns i objektsbilden.
 </attr>
 <attr> ExtStart
   Ingång för att styra kontaktorns order utgången i automatik mod (extern).  
 </attr>
  <attr>ExtInterlock 
  Förreglingsingång för startorder, ska vara falsk annars tas orderutgång ner i ALLA moder. Dessutom
  tvingas auto mod till man mod om inte objektattributet OpNoAutoToMan är 1 i aggregatets modobjekt
  CompModeA. Signalen dimmar också start/stopp knappar i objektsbilden.
 </attr>
 <attr> LocMode 	
    Ingången ställer objektets mod i lokal mod (prio 1) vilket innebär att alla andra moder kopplas bort.
    Dvs ingång OpLocStart i funktionsobjektet styr motorn. 
   
   Ingången styr även dynamiken i objektsbild/symbol och generera ett B-larm att lokalt gäller.
   Larmet går att välja bort via inbyggda CompModeA objektets attribut OpDisableLocalAlarm.
   
   Lokal mod går att välja bort via inbyggda CompModeA objektets attribut OpNoLocal.  
 </attr>
 <attr> OpLocStart	
  Ingång för att styra kontaktorns order utgången i lokal mod.
 </attr>
 <attr>ResTrip 
  Ingång för drifttidmätning som nollställer pågående trippräknare så ny kan påbörjas. Ingången är
  flanktriggad, dvs nollställning sker endast på uppflanken.
 </attr>
 <attr>DisableSup 
   Ingång som anger om larmövervakning kopplas bort (1:a) eller inte (0:a). OBS att färgstyrning
   i bilder INTE påverkas.
 </attr>
 <attr> PlcConnect
   Referens till objektet i planthierarkin.
 </attr>
 <attr> On
   Utgång (1:a) när drift är startad (run), signal från omriktaren statusord SW bit 2.
 </attr>
 <attr>Err 
   Utgången går hög när objektet är förreglad eller komponenter larmar/löser ut. Bör användas för att
   återställa beordringar på funktionsobjektets startingångar ExtStart och OpLocalStart så att oönskade
   återstarter förhindras vid/efter fel. 
 </attr>

 </class>

####################################################################################

<class> BaseFcPPO3FanAggr
 @Version
 @Author cs/je
 @summary Fläktaggregat, frekvensstyrd, Profibus/dp PPO3
 @b Fläktaggregat frekvensstyrd, Profibus/dp PPO3
 BaseFcPPO3FanAggr objektet hanterar en fläktmotor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO3 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. PPO3 protokollet är begränsad att visa processvärden, endast
 hastigheten (oftast varvtal) kan läsas av och ingen parametrering kan göras under drift. Önskar
 man mer funktionalitet bör man använda BaseFcPPO5FanAggr objektet istället.
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
 
 Fläktobjektet är i princip en kopia av BaseFcPPO3MotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
   
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/BaseFcPPO3FanAggr.
 @image orm_fanaggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när fläkten är startad. 
   
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo3fanaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering

 BaseFcPPO3FanAggr objektet har diverse olika konfigurationer och inställningar som behöver gås igenom:
 
 
 - 24 olika komponentalternativ beroende på den elektriska utformningen.
 
 - Objektsbild (inställningar i bilden)

 - Profibus/dp konfiguration (BaseFcPPO3PbModule))
 
 - IO signaler (som ska/kan kopplas)
 
 - Övervakning och felhantering (larmtexter mm)
 
 - Mod (körsätt, objekt CompModeA)
 
 - Plc kod (funktionsobjektet BaseFcPPO3MotorAggrFo)
 
 Se objektet BaseFcPPO3MotorAggr för konfiguration.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
  Superklass, klicka på länk BaseFcPPO3MotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Fan
  Dokumentation och bild för fläkten (ej motorn), klicka på länk BaseFan för mer
  beskrivning om objektattributet.
 </attr>

</class>

####################################################################################

<class> BaseFcPPO3PumpAggr
 @Version
 @Author cs/je
 @summary Pumpaggregat, frekvensstyrd, Profibus/dp PPO3
 @b Pumpaggregat frekvensstyrd, Profibus/dp PPO3
 BaseFcPPO3PumpAggr objektet hanterar en pumpmotor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO3 protokollet. En huvudkontaktor (elkraft) kan
 också ingå/styras från objektet. PPO3 protokollet är begränsad att visa processvärden, endast
 hastigheten (oftast varvtal) kan läsas av och ingen parametrering kan göras under drift. Önskar
 man mer funktionalitet bör man använda BaseFcPPO5PumpAggr objektet istället.
 
 Aggregatet kan konfigureras med många olika kringkomponenter och körsätten Auto/Man/Lokal mod
 som också har många olika inställningsalternativ.
 
 Möjliga komponenter förutom motorn och frekvensomriktare:
  
 - Effektbrytare (MCCB)
 - Kontaktor 
 - Säkerhetsbrytare i huvudkrets eller starspärr i manöverkrets  
 - Säkring  

 Knappar i objektsbilden kan göras osynlig genom att konfigurera attribut i inbyggda
 CompModeA objektet, se CompModeA objektet för mer info. OBS! Att tillhörande objektsbilder
 för aggregatet inte stödjer CompModeA olika texter på knappar start/stopp, dvs dessa
 knappar kan endast visa texten start/stopp och ej Till/Från.
 
 Motor i objektsbilden kan konfigureras med temperaturövervakning. Se BaseMotor objektet
 för mer info. OBS! Att tillhörande objektsbilder för aggregatet inte stödjer visning av
 BaseMotorns olika temperaturövervakningsalternativ, dvs tempsensor/switch syns inte i bild.
 
 Pumpobjektet är i princip en kopia av BaseFcPPO3MotorAggr objektet. Önskas mer info och tips
 (Plc kod) se hjälp om det objektet.
   
 @b Objektsymbol
 Grafiska symbolen för detta objekt är BaseComponent/BaseFcPPO3PumpAggr.
 @image orm_pumpaggr_gs.gif

 Dynamik för symbolen:

  - Grön när motorn är startad (originalfärgen går att ändra).
  - Grå när motorn är redo men ej startad.
  - Gul färg när det är varning (säkerhetsbrytare från eller aggregatet förreglad mm). 
  - Röd färg när det är fel (effektbrytare utlöst mm).
 
  - Triangeln i symbolen roterar 90 grader när pumpen är startad. 
   
    Aktuell mod visas med bokstäver:
    
    M    Manuell mod
    L    Lokal mod
    LM   Lokal och Manuell mod
    
    Ingen bokstavsindikering betyder att objektet är i automatik mod (externt styrd). 

 Objektets metoder (menyval) öppnas med höger musknapp.

 @b Objektsbild
 @image orm_basefcppo3pumpaggr_og.png

 Indikatorer:
 
  - Ready indikatorn är grön när motorn kan startas.

  - Interlock indikatorn bredvid objektsymbolen är röd när motorn är förreglad att starta,
    objektsymbol blir gul.
  
  - Start indikatorn bredvid startknappen är grön när driften körs (run).

  - Lokal mod indikatorn visar gult när lokal styrning pågår. Start, stopp knappar
    dimmas. Styrning via Auto/man mod förreglas.

  - Extern indikatorn som kan ses i denna bild (ej nu) visar "mod status" när auto/man mod
    inte styrs/används i objektet. Inga auto/man knappar visas i bilden.

  - Contactor och indikator bredvid knapp On är grön när kontaktorn är dragen. dvs om
    driftsvar/feedback är konfigurerat annars är det tillsignal (Do) som styr färgen.

  - Contactor interlock indikatorn är röd när yttre elkraft-förregling är aktiv, knappar
    för elkraften och start/stopp dimmas, objektsymbol blir gul.

  - Frequencyconverter indikatorn är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).

  - Safety switch är grön när säkerhetsbrytaren är tillslagen och gul om frånslagen.
   (rött hänglås visas när brytaren är frånslagen)

    Övriga indikatorer är normalt gröna men vid fel blir de röda.

    Visningsfält Starts visar antalet gånger som driften har startats och Run visar total tiden
    driften har varit igång (dagar timmar:minuter:sekunder).
    
 Knappar:
 
  - Knappar Auto/Man växlar mod i fjärrstyrning och Start/stoppknappar används för att
    manuellt styra driften i fjärrstyrning (från bild, ej lokalt vid driften).
  
  - Knappen Start har toggelfunktion, dvs man behöver ej trycka på stopp.

  - Knappar Man/Auto väljer mod vid fjärrstyrning
    
  - Dimmade Start och Stopp knappar betyder att auto mod gäller (Extern indikator grön).
   
  - Syns inga knappar alls är ALLTID Extern indikator grön och auto/man bör visas på
    annat sätt.

 @h1 Konfigurering

 BaseFcPPO3PumpAggr objektet har diverse olika konfigurationer och inställningar som behöver gås igenom:
 
 
 - 24 olika komponentalternativ beroende på den elektriska utformningen.
 
 - Objektsbild (inställningar i bilden)

 - Profibus/dp konfiguration (BaseFcPPO3PbModule))
 
 - IO signaler (som ska/kan kopplas)

 - Övervakning och felhantering (larmtexter mm)
 
 - Mod (körsätt, objekt CompModeA)
 
 - Plc kod (funktionsobjektet BaseFcPPO3MotorAggrFo)
 
 Se objektet BaseFcPPO3MotorAggr för konfiguration.
 
 @b Se även
 @classlink CompModeA basecomponent_compmodea.html
 @classlink BaseMotor basecomponent_basemotor.html
 <attr>Super 
  Superklass, klicka på länk BaseFcPPO3MotorAggr för mer beskrivning om objektattributet. 
 </attr>
 <attr>Pump
  Dokumentation och bild för pumpen (ej motorn), klicka på länk BasePump för mer
  beskrivning om objektattributet.
 </attr>

</class>

####################################################################################

<class> BaseFcPPO3
 @Version
 @Author cs/je
 @summary Frekvenomriktare, Profibus/dp, PPO3 protokollet
 @b Frekvenomriktare, Profibus/dp kommunikation med PPO3 protokollet 
 BaseFcPPO3 objektet hanterar en motor som styrs av en frekvensomriktare via fältbussen
 Profibus/dp genom att kommunicera med standard PPO3 protokollet (Parameter/Process data object).
 PPO3 protokollet är begränsad att visa processvärden, endast hastigheten (oftast varvtal) kan läsas
 av och ingen parametrering kan göras under drift. Önskar man mer funktionalitet bör man använda
 BaseFcPPO5 objektet istället.
 
 Till detta objekt hör PLC funktionsobjektet BaseFcPPO3Fo och ett Profibus/modulobjekt
 BaseFcPPO3PbModule som beskrivs under rubrik konfiguration nedan samt ett slavobjekt Pb_DP_Slave.
 
 Objektet har också en objektsbild som visar status på omriktaren och processvärden i graf och
 stapelform. Det finns även ett trendobjekt som visar hastighet i en bild.
  
 @b Objektsymbol
 Det finns ingen symbol för detta objekt.

 @b Objektsbild
 @image orm_basefcppo3_og.png

 Indikatorer:
 
  - Ready är grön när motorn kan startas.
  
  - Run är grön när motorn körs (snurrar).
 
  - Switch-On inhibit är röd när omriktaren är förreglad att starta.
  
  - Warning är gul om omriktaren vill varna för något, annars grå. Varningen läses av på
    omriktarens display.
   
  - Local control är gul om omriktaren är ställd för körning via omriktarens displayenhet.
    Dvs omriktaren tar inte emot styrorder via Profibus, bara lokalt på omriktaren.
    
  - Tripped är röd om omriktaren löst ut, Reset knappen bredvid indikatorn återställer
    omriktaren om den är konfigurerad för fjärråterställning.  
 
  - Bus-com visninsfältet visar status på profibuskommunikationen mellan omriktaren och styrsystemet.
    
  - Status bredvid omriktarsymbolen är grön när omriktaren är redo att köras, annars gul.
    Trippar omriktaren blir den röd. Blinkar grön vid uppstart (elkraft till).
     
 Knapp:
 
  - Knapp Reset återställer trippad omriktare om den är konfigurerad för fjärråterställning.
  
  
 Frekvensomriktarobjektets Ao signal RefSpeed attribut PresMaxLimit och PresMinLimit anger i bilden
 speed-grafens visningsområde. Dessa går att ändra genom att klicka på grafen/värdena.
 
 @h1 Konfigurering
 Se rubrik Plc kod, Simulering och Profibus/dp nedan.
      
 @b Plc kod
 För PLC programmering används funktionsobjektet BaseFcPPO3Fo.
 @image orm_basefcppo3fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet i planthierarkin.

 @b Simulering
 För simulering använder man funktionsobjektet BaseFcPPO3Sim.

 @b Profibus/dp
 För frekvensomriktarens Profibus/dp kommunikation med protokollet PPO3 ska man använda modulobjektet
 BaseFcPPO3PbModule. Se klasshjälp för BaseFcPPO3PbModule objektet där en utförligare beskrivning hur
 man skapar ett modulobjekt i nodehierarkin och konfigurerar profibus för en frekvensomriktare. 
 
 Koppla därefter modulen till objekt BaseFcPPO3 planthierarkin med hjälp av IoConnect funktionen.

 @b Inställningar PPO3
 (se objekt BaseFcPPO3PbModule för mer info och exempel)
 
 PPO3 protokollets data kallas för PZD (prozessdaten). Anpassning/skalning mellan Proview och
 omriktarens IO signaler måste också göras i objekt/profibusmodul BaseFcPPO3PbModule kanalobjekten
 ChanAi och ChanAo för aggregatet, signaler som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    
 
 @b Se även
 <attr> Description
  Textfält synlig i XTT som beskriver objektet lite mer än namnet på objektet
 </attr>
 <attr> Specification
  Textfält synlig i XTT som specificerar frekvensomriktaren
 </attr>
 <attr> StatusWordSW
  Fördefinierad insignal statusord SW, se omriktarmanual och objekt BaseFcPPO3PbModule.
 </attr>
 <attr> ActSpeed
  Fördefinierad insignal hastighetsärvärde ACT, se omriktarmanual och objekt BaseFcPPO3PbModule.
 </attr>
 <attr> ControlWordCW
  Fördefinierad utsignal styr-kontrollord CW, se omriktarmanual och objekt BaseFcPPO3PbModule.
 </attr>
 <attr> RefSpeed
  Fördefinierad utsignal hastighet/referens börvärde REF, se omriktarmanual och objekt BaseFcPPO3PbModule.
 </attr>
 <attr>IndWarning 
  Går hög om omriktaren varnar för något eller den inte är redo för fjärrstyrning.
 </attr>
 <attr>IndError 
  Går hög om omriktaren trippar.
 </attr>
 <attr>OpReset 
  Beordring om återställning vid trippad omriktaren. Påverkas normalt via knapp Reset i objektsbild,
  nollställs alltid.
 </attr>
 <attr>CommOk 
  Går hög när proview har kontakt/kommunikation med omriktaren via profibus/dp.
 </attr>
 <attr>AlarmOk 
  Omriktare uppstartad alternativt redo och i fjärrstyrningsmod, dvs att larma är okej.
 </attr>
 <attr>PowerStartUp 
  Omriktare startar upp (tidsfördröjning), styr indikatorer att blinka i objektbild mm. Se
  attribut PowerUpTime.
 </attr>
 <attr>ReadyRemote 
  Omriktare driftklar och redo för fjärrstyrning via Profibus.
 </attr>
 <attr>ConvertReady 
  Omriktare driftklar, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertRun 
  Omriktare startad, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertTripped 
  Omriktare utlöst, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertOnInhibit 
  Omriktare förreglad, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertWarning 
  Omriktare i varning, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>ConvertRemote 
  Omriktare i fjärrstyrningsmod, signal/bit i statusordet StatusWordSW.
 </attr>
 <attr>PowerUpTime 
  Tid i sekunder man anser omriktare tar för att komma igång (boota) vid spänningstillslag.
 </attr>
 <attr>AlarmLocalMod 
  Larmtext för omriktare i lokal mod.
 </attr>
 <attr>AlarmTripped 
  Larmtext för utlöst omriktare.
 </attr>
 <attr>AlarmWarning
  Larmtext för omriktare i varningsläge.
 </attr>
 <attr>AlarmError
  Larmtext för omriktare i felläge (trasig).
 </attr>
 <attr>AlarmConnection
  Larmtext för omriktare när kommunikationen är nere.
 </attr>
 <attr>DefTrend 
  Trendobjekt visas enligt trendmetoden, referens till objektets PlotGroup objekt.
 </attr>
 <attr> HelpTopic
  Ämnesreferens till hjälpen för objektet  
 </attr>
 <attr> DataSheet
  URL till datablad för objektet  
 </attr>
 <attr> CircuitDiagram
  URL till elschema för objektet  
 </attr>
 <attr> Note
  Notering (synlig i objektsbild) för objektet  
 </attr>
 <attr> Photo
  URL till ett fotografi för objektet  
 </attr>
 <attr>TrendActSpeed 
  Trendobjekt för ärhastighet (varvtal oftast).
 </attr>
 <attr>TrendRefSpeed 
  Trendobjekt för börreferens/hastighet (bör varvtal oftast).
 </attr>
 <attr>PlotGroup 
  Trend plottgrupp för signaler som definierats i trendobjekten.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> SimConnect
  Referens som visar vilket simulerings-funktionsobjekt objektet har blivit knuten (connected) till.
 </attr>
 <attr>IOconnect
  Referens till profibusmodulen i planthierarkin för signalutbyte med omriktaren.
 </attr>
 <attr>IoStatus
  Referens till profibusnodens status, dvs om kommunikationen är okej (syns bara i runtime).
 </attr>

</class>

######################################################################################## 

<class>BaseFcPPO3Fo 
 @Version
 @Author cs/je
 @summary PLC funktionsobjekt för BaseFcPPO3
 Funktionsobjekt BaseFcPPO3Fo för styrning frekvensomriktare via Profibus/dp.
 @image orm_basefcppo3fo_fo.gif
 
 Skapa ett funktionsobjekt i PLC editorn och koppla till objektet baseFcPPO3
 i planthierarkin.
 
 @b Se även
 @classlink BaseFcPPO3PbModule basecomponent_basefcppo3pbmodule.html
 <attr>PowerOn 
  Ingången ska vara hög när man anser att omriktaren lever, dvs elkraft påslagen (huvudkontaktorsvar).
  Normalt villkor för att larmövervakning kopplas på oavsett omriktarstatus. När signal går hög löper
  en tid PowerUpTime och när denna tid löpt ut bör omriktaren normalt vara startklar. Tiden ställs in
  i objektet attribut PowerUpTime (default 15s). När tiden löper (start upp pågår) blinkar
  omriktarens statusindikeringar i bilder.
  
  Det går bra att strunta i denna insignal men då får man inte blink och larm när kommunikationen
  med omriktaren är nere/död.
 </attr>
 <attr> Start
  Ingång för startorder (run) till omriktaren vilket är bit 0 i kontrollordet O_CW, dvs omriktaren bör
  bli "enable operation" för referensen RefSpeed. När signal går hög/låg startar/stoppar motorn normalt
  med ramper inställda i omriktaren. Funktionen kallas för OFF1.
 </attr>
 <attr> RefSpeed
  Analog ingång för hastighetsreferensen till omriktaren, dvs styrordet O_REF. I denna Ao kanal O_REF
  attribut görs skalning och anpassning mot omriktarens referens.
 </attr>
 <attr> NoOff2
  Ingång för stopporder till omriktaren, 0 = stoppa genom att motorn rullar ut (ej ramp). Används normalt ej.
  Funktionen kallas för OFF2.
 </attr>
 <attr> NoOff3
  Ingång för nödstoppsorder till omriktaren, 0 = stoppa med ramp (ramptid i omriktare). Används normalt ej.
  Funktionen kallas för OFF3.
 </attr>
 <attr> EnableOperation
  Ingång för driftfrigivning till omriktaren, 0 = normalt rullar motorn ut. Används normalt ej.
 </attr>
 <attr> PlcConnect
  Referens som visar vilket objekt funktionsobjektet har blivit knuten (connected) till.
 </attr>
 <attr> ReadyRemote
  Utgång (1:a) när omriktaren anses uppstartad och status är sådant att startorder från fjärr
  kan ske, dvs tid PowerUpTime löpt ut eller omriktare redo och omriktare ej trippad, ej
  local/intern mod mm.   
 </attr>
 <attr> Run
  Utgång (1:a) när drift är startad (enable run), statusord SW bit 2.
 </attr>
 
 </class>

####################################################################################

<class> BaseFcPPO3PbModule
 @Version
 @Author je
 @summary Profibus/dp modul för frekvensomriktare med PPO3.
 @b Profibus/dp PPO3 modul för en frekvensomriktare
 BaseFcPPO3Module objektet hanterar datautbyte mellan en frekvensomriktare och Proview
 via Profibus/dp med hjälp av standardprotokollet PPO3 (Parameter/Process data object).
 
 PPO3 protokollet är det PPO alternativ (av 1-5) som innehåller MINST alternativ för IO utbyte
 och funktioner mellan ett styrsystem och en omriktare. Önskas mer funktionalitet kan man
 använda objekt BaseFcPPO5PbModule istället.
 
 Modulobjektet BaseFcPPO3Module (placerad nodehierarkin) ingår i frekvensomriktarobjekt
 BaseFcPPO3 (placerad planthierarkin) samt ett slavobjekt Pb_DP_Slave. 
 
 Aggregat BaseFcPPO3MotorAggr (Fan & Pump också) använder denna modul för att kommunicera
 med en omriktare.

 @b Modulobjektet
 @image orm_component_example16.gif
 Bilden, gult område visar de viktigaste IO kanalerna och blått är själva objektmodulen.

 Proview tolkar/hanterar PPO standardorden (16 bitar) SW och CW som namnats I_SW och O_CW
 i bild ovan enligt följande: 
 
  Kontrollord CW: 
  
  BIT:  PPO NAMN:     PROVIEW TOLKNING AV FUNKTIONEN:
  
  0     OFF1          Start (run) om bit är 1, stoppar med ramp om bit är 0.
  1     OFF2          Nödstopp om bit är 0, stoppar med frirullning, dvs ingen ramp.
  2     OFF3          Nödstopp om bit är 0, stoppar med nödstoppsramp inställd i omriktare. 
  3     ENABLE        Driftfrigivning om bit är 1.
  4     RAMP ZERO     Rampgeneratorns utsignal tvingas till noll om bit är 0.
  5     RAMP HOLD     Rampgeneratorns utsignal fryses om bit är 0. 
  6     RAMP IN-ZERO  Rampgeneratorns insignal tvingas till noll om bit är 0. 
  7     RESET         Återställning trippad omriktare om bit är 1 (flanktriggad).
  8     ?             Se PPO protokollet.
  9     ?             Se PPO protokollet.        
  10    REMOTE CMD    Begäran om bit är 1 att styrning ska ske via fältbussen (Proview/PLC).
  11    ?             Se PPO protokollet.
  12-15 RESERVED      Reserverad för framtid funktion, Se PPO protokollet. 


  Statusord SW: 
  
  BIT:  PPO NAMN:     PROVIEW TOLKNING AV FUNKTIONEN:
  
  0     READY ON       Redo (switch on) om bit är 1.
  1     READY RUN      Driftklar om bit är 1.
  2     READY REF      Startad (run) följer styrreferensen om bit är 1.
  3     TRIPPED        Omriktare trippad (återställning krävs) om bit är 1, drift stoppad.
  4     OFF2           Nödstopp med frirullning aktiverad om bit är 1.
  5     OFF3           Nödstopp med stoppramp aktiverad om bit är 1.
  6     INHIBITED      Driftförreglad bit är 1.
  7     ALARM          Varningslarm om bit är 1 (stoppar ej drift) 
  8     AT_SETPOINT    Driftvarvtal uppnått om bit är 1, dvs bör/ärvärde är lika. 
  10    REMOTE         Om bit är 0 är omriktaren i lokal mod, dvs styrning via Proview/PLC ej tillåten.
  11    ?              Se PPO protokollet.
  12    ?              Se PPO protokollet.  
  13-14 RESERVED       Reserverad för framtid funktion, Se PPO protokollet. 
  15    ?              Se PPO protokollet. 
  
  OBS! Om omriktaren styrs med annan bit tolkning kommer kanske inte styrningen att fungera som tänkt,
  dvs kontrollera omriktarens PPO hantering för dessa viktiga styr och statusord att de överensstämmer
  med Proview tolkning.

 @h1 Konfigurering
 För frekvensomriktarens Profibus/dp kommunikation behöver man skapa objekt i nodehierarkin under ett
 Pb_Profiboard. Först skapar man ett Pb_DP_Slave objekt och detta gör att man kan konfigurera profibus
 och skapa ett tillhörande IO objektmodul BaseFcPPO3Module via en konfigurator "ConfigureSlave" metod.
 
 För att förtydliga hur man konfigurerar används en ABB omriktare som ett exempel och två bilder (skärm
 dumpar) nedan:
 
 -1 Skapa ett slavobjektet Pb_DP_Slave genom att "klicka in det" under ett Pb_Profiboard objekt.
 
 -2 Ange GSDfile för en ABB omriktare ($pwr/exe/abb_acs_pb_slave.gsd) i attribut GSDfile i Pb_DP_Slave
    objektet.   
 
 -3 Välj ut "Module Class" BaseFcPPO3Module via Profibus konfigurator "ConfigureSlave" metoden. Denna
    procedur skapar objektet BaseFcPPO3Module automatiskt med namnet M1 när man trycker på Ok knappen.

 -4 Via "ConfigureSlave" metoden i Proview ska man kontrollera och ställa in följande för en
    ABB omriktare ACS800:
            
    - PrmUserData Operation mode till till Vendor specific.
    - Protokoll till PPO3.
    - Pb_DP_Slave objektets attribut ByteOrdering ska vara Big Endian.

    - Cut-Off time bör vara 1 (hanterar vad som händer i omriktaren vid profibusfel).

 -5 Koppla en PLC tråd till attribut ThreadObject i objektet Pb_DP_Slave
    (även BaseFcPPO3Module ska ha en tråd).

 -6 Slaven/nodens adress ställs in i objekt Pb_DP_Slave attribut SlaveAddress direkt eller via
    "ConfigureSlave" metoden.
 
 -7 WdFact1 och WdFact2 definierar tiden i watchdog hanteringen för en profibusslav, dvs tiden
    innan omriktaren ska lösa ut (trippa) om den är konfigurerad att göra det i omriktaren.
 
    Tiden beräknas så här:
 
      t[ms] = 10 * WdFact1 * WdFact2
   
      Exempel, WdFact1 på 10 och WdFact2 på 5 blir watchdogtid på 0,5 sekunder.
 
    Tidsfaktorerna ställs in i objekt Pb_DP_Slave. 

 -8 Koppla därefter modulen till frekvensomriktarobjekt BaseFcPPO3 i planthierarkin med hjälp av
    IoConnect funktionen. Detta gör att allt signalutbyte som behövs nu är knutet.

 @b Bild inställningar via "ConfigureSlave" metoden
 @image orm_component_example13.gif
 Bilden (gult område) visar vilka inställningar och val som beskrivs
 ovan när man konfigurerar slaven via "ConfigureSlave" metoden.

 @b Bild inställningar i objektet
 @image orm_component_example14.gif
 Bilden (gult område) visar vilka inställningar i objektet som
 beskrivs ovan och som man kan ställa in direkt i objektet utan att
 använda "ConfigureSlave" metoden.
 
 Blått område visar objekten som behövs för att skapa BaseFcPPO5Module
 via "ConfigureSlave" metoden. 

 @b Inställningar PPO3
 PPO3 protokollets data heter PZD (prozessdaten). Anpassning/skalning mellan Proview och
 omriktarens IO signaler måste också göras i kanalobjekten ChanAi och ChanAo för
 frekvensomriktaren, dvs signaler i BaseFcPPO3Module som bör gås igenom är:
 
  -O_REF     Referens (börvärde i varvtal är att föredra)
  -I_ACT     Ärvärde  (varvtalsvärde är att föredra)    

  Se exempel nedan på hur en ABB omriktare och Proview kan ställas in.

 @b Exempel inställningar i en omriktare
 Nedan inställningar visar vilka parametrar som behöver gås igenom för att få ett fungerande
 signalutbytet mellan Proview BaseFcPPO3Module och en ABB ACS800 frekvensomriktare. Vissa
 inställningar har bara med själva omriktaren att göra och är med som ytterligare hjälp för
 intressanta parametrar att beakta.

     INSTÄLLNINGAR I ACS800 OMRIKTAREN (text på engelska):
      
     Parameter  Value       Description
     group  
      10.01     COMM.CW     Ext1 start/stop/direction
      10.03     ?           Rotation of the motor
      11.02     EXT1        Reference select
      11.03     COMM.REF    Source for external reference 1
      11.04     ?           Minimum value for external reference 1
      11.05     ?           Maximum value for external reference 1
      16.04     COMM.CW     Source for the fault reset signal "tripped"
      21.03     RAMP        Motor stop function
      22.01     ACC/DEC 1   Acceleration and deceleration times
      22.02     ?           Acc time 1
      22.03     ?           Dec time 1
      51.01     Profibus/dp Modultype 
      51.02     ?           Node adress (via dipswitchar, om switchar är 0 ställs den in här.)
      
      98.02     FIELDBUS    Serial communication
      98.07     ABB Drives  Communication profile 
     
      16.01     Ja          Run enable parameter/driftfrigivning
      20.01     ?           Limits min speed
      20.02     ?           Limits max speed
         
      Överföringshastigheten (Baude raten) grupp 52.03 och PPO typen grupp 52.04 ställs in
      automatiskt när kommunikation etableras.
            
      Via "ConfigureSlave" metoden i Proview ska man ställa in följande för en ABB omriktare ACS800:
            
      - PrmUserData Operation mode till till Vendor specific (info från GSD fil)
      - Protokoll till PPO3 (info från GSD fil)
      - Pb_DP_Slave objektets attribut ByteOrdering till Big Endian (default är Little Endian)


      Proview kanalobjekt ChanAi och ChanAo attribut som styr skalning/anpassning mot
      omriktarens analoga signaler som behöver ändras visas här: 
      
      I_ACT (varvtal/ärvärde)
           
        Omriktarens  Max/Min varvtal parameter 20.01 och 20.02 bestämmer vad I_ACT ska
        skalas till. Exempel +/- 1500r/m är inställt i omriktaren vilket ger:  

        - RawValRangeLow         -20000
        - RawValRangeHigh        +20000
      
        - ActValValRangeLow      -1500	
        - ActValRangeHigh        +1500
      
        Omriktarens varvtalsområde råvärde i omriktaren är alltid +/- 20000.
      

      O_REF (Referens/börvärde)
           
        Omriktarens  referensområde i varvtal parameter 11.04 och 11.05 bestämmer vad O_REF ska
        skalas till. Exempel +/- 1500r/m referensområde önskas vilket ger:  

        - RawValRangeLow         -20000 
        - RawValRangeHigh        +20000
      
        - ActValValRangeLow      -1500	
        - ActValRangeHigh        +1500
      
        Omriktarens  varvtalsområdes råvärde i omriktaren är alltid +/- 20000.


      Övriga attribut i kanalobjekten som skalar signaler kan lämnas som de är, dvs:

        - SensorSigValRangeLow 	  
        - SensorSigValRangeHigh
        - ChannelSigValRangeLow 	
        - ChannelSigValRangeHigh 	
      
      Att ändra/förstå dessa attribut är inte lätt och exemplet nedan visar när O_REF attributet
      skalas om så en begränsning av max +/- 400r/m kan "nå" omriktaren, dvs om Ao RefSpeed.ActualValue
      värde överskrider 400 blir omriktarens referens i alla fall bara 400:
      
        - ActValValRangeLow      -400   (begränsningen i r/m)
        - ActValRangeHigh        +400   (begränsningen i r/m)
        - SensorSigValRangeLow   -20    (1/5 av ChannelSigValRangeLow, dvs procent av 2000r/m)
        - SensorSigValRangeHigh  +20    (1/5 av ChannelSigValRangeHigh,dvs procent av 2000r/m)
        - ChannelSigValRangeLow  -100   (procent)	
        - ChannelSigValRangeHigh +100   (procent)	
        - RawValRangeLow         -20000 (ska alltid vara -20000)
        - RawValRangeHigh        +20000 (ska alltid vara +20000)

        Omriktarens min/max parametrar/styrreferens 11.04 och 11.05 är inställda på +/- 2000r/m
        i detta exempel och ChannelSigValRange och SensorSigValRange attributen ovan är i
        procent för enkelhetens skull.
	
        OBS! Att ställa in Proview på detta sätt är inte att rekomendera, det är bättre att
        omriktarens inställningar får råda.
	
	Om startorder OFF1 bit 0 i kontrollordet CW går från hög till låg och hög igen måste
	motorn rampa ner till noll innan motorn startar/börjar rampa upp igen!

@b Se även
@classlink BaseFcPPO3MotorAggr basecomponent_basefcppo3motoraggr.html
 <attr>Super 
 Superklass, klicka på länk Pb_module för mer beskrivning om objektattributet. 
 </attr>
 <attr> I_SW
  Fördefinierad ingångskanal statusord SW, se omriktarmanual.
 </attr>
 <attr> I_ACT
  Fördefinierad ingångskanal hastighetsärvärde ACT, se omriktarmanual.
 </attr>
 <attr> O_CW
  Fördefinierad utgångskanal styr-kontrollord CW, se omriktarmanual.
 </attr>
 <attr> O_REF
  Fördefinierad utgångskanal hastighet/referens börvärde REF, se omriktarmanual.
 </attr>

</class>
