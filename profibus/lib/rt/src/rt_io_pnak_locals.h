/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2022 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef rt_io_pnak_locals_h
#define rt_io_pnak_locals_h

#include <fstream>
#include <memory>
#include <vector>
#include <set>

#include "rt_io_base.h"
#include "rt_pn_runtime_data.h"
#include "rt_profinet.h"
#include "rt_pnak.h"

/* rt_io_pnak_locals.h -- Profinet io handling locals. */

class ProfinetDevice;

class PnApiData
{
public:
  PnApiData() : api(0) {}
  PnApiData(unsigned int api) : api(api) {}

  unsigned int api;
  std::set<unsigned int> module_index;

  ~PnApiData() {}
};

typedef struct _agent_args
{
  void* local;
  io_sAgent* ap;
} agent_args;

class io_sAgentLocal
{
public:
  io_sAgentLocal() {}

  T_PNAK_SERVICE_REQ_RES service_req_res;
  T_PNAK_SERVICE_CON service_con;

  std::vector<std::shared_ptr<ProfinetDevice>> device_list;
  ProfinetDevice controller; // Used by profinet viewer. Proview Runtime populates the controller within
                             // device_list above

  pthread_t handle_events;
  agent_args args;

  pthread_mutex_t mutex;
  pthread_cond_t cond;
};

#endif
