/* statussrv_Client.cpp
   Generated by gSOAP 2.7.9d from statussrv_msg.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "statussrv_H.h"

SOAP_SOURCE_STAMP(
    "@(#) statussrv_Client.cpp ver 2.7.9d 2007-06-29 12:20:02 GMT")

SOAP_FMAC5 int SOAP_FMAC6 soap_call___s0__GetStatus(struct soap* soap,
    const char* soap_endpoint, const char* soap_action,
    _s0__GetStatus* s0__GetStatus,
    _s0__GetStatusResponse* s0__GetStatusResponse)
{
  struct __s0__GetStatus soap_tmp___s0__GetStatus;
  if (!soap_action)
    soap_action = "s0:GetStatus";
  soap->encodingStyle = NULL;
  soap_tmp___s0__GetStatus.s0__GetStatus = s0__GetStatus;
  soap_begin(soap);
  soap_serializeheader(soap);
  soap_serialize___s0__GetStatus(soap, &soap_tmp___s0__GetStatus);
  if (soap_begin_count(soap))
    return soap->error;
  if (soap->mode & SOAP_IO_LENGTH) {
    if (soap_envelope_begin_out(soap) || soap_putheader(soap)
        || soap_body_begin_out(soap)
        || soap_put___s0__GetStatus(
               soap, &soap_tmp___s0__GetStatus, "-s0:GetStatus", "")
        || soap_body_end_out(soap) || soap_envelope_end_out(soap))
      return soap->error;
  }
  if (soap_end_count(soap))
    return soap->error;
  if (soap_connect(soap, soap_endpoint, soap_action)
      || soap_envelope_begin_out(soap) || soap_putheader(soap)
      || soap_body_begin_out(soap)
      || soap_put___s0__GetStatus(
             soap, &soap_tmp___s0__GetStatus, "-s0:GetStatus", "")
      || soap_body_end_out(soap) || soap_envelope_end_out(soap)
      || soap_end_send(soap))
    return soap_closesock(soap);
  if (!s0__GetStatusResponse)
    return soap_closesock(soap);
  s0__GetStatusResponse->soap_default(soap);
  if (soap_begin_recv(soap) || soap_envelope_begin_in(soap)
      || soap_recv_header(soap) || soap_body_begin_in(soap))
    return soap_closesock(soap);
  s0__GetStatusResponse->soap_get(soap, "s0:GetStatusResponse", "");
  if (soap->error) {
    if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
      return soap_recv_fault(soap);
    return soap_closesock(soap);
  }
  if (soap_body_end_in(soap) || soap_envelope_end_in(soap)
      || soap_end_recv(soap))
    return soap_closesock(soap);
  return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___s0__GetExtStatus(struct soap* soap,
    const char* soap_endpoint, const char* soap_action,
    _s0__GetExtStatus* s0__GetExtStatus,
    _s0__GetExtStatusResponse* s0__GetExtStatusResponse)
{
  struct __s0__GetExtStatus soap_tmp___s0__GetExtStatus;
  if (!soap_action)
    soap_action = "s0:GetExtStatus";
  soap->encodingStyle = NULL;
  soap_tmp___s0__GetExtStatus.s0__GetExtStatus = s0__GetExtStatus;
  soap_begin(soap);
  soap_serializeheader(soap);
  soap_serialize___s0__GetExtStatus(soap, &soap_tmp___s0__GetExtStatus);
  if (soap_begin_count(soap))
    return soap->error;
  if (soap->mode & SOAP_IO_LENGTH) {
    if (soap_envelope_begin_out(soap) || soap_putheader(soap)
        || soap_body_begin_out(soap)
        || soap_put___s0__GetExtStatus(
               soap, &soap_tmp___s0__GetExtStatus, "-s0:GetExtStatus", "")
        || soap_body_end_out(soap) || soap_envelope_end_out(soap))
      return soap->error;
  }
  if (soap_end_count(soap))
    return soap->error;
  if (soap_connect(soap, soap_endpoint, soap_action)
      || soap_envelope_begin_out(soap) || soap_putheader(soap)
      || soap_body_begin_out(soap)
      || soap_put___s0__GetExtStatus(
             soap, &soap_tmp___s0__GetExtStatus, "-s0:GetExtStatus", "")
      || soap_body_end_out(soap) || soap_envelope_end_out(soap)
      || soap_end_send(soap))
    return soap_closesock(soap);
  if (!s0__GetExtStatusResponse)
    return soap_closesock(soap);
  s0__GetExtStatusResponse->soap_default(soap);
  if (soap_begin_recv(soap) || soap_envelope_begin_in(soap)
      || soap_recv_header(soap) || soap_body_begin_in(soap))
    return soap_closesock(soap);
  s0__GetExtStatusResponse->soap_get(soap, "s0:GetExtStatusResponse", "");
  if (soap->error) {
    if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
      return soap_recv_fault(soap);
    return soap_closesock(soap);
  }
  if (soap_body_end_in(soap) || soap_envelope_end_in(soap)
      || soap_end_recv(soap))
    return soap_closesock(soap);
  return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___s0__Restart(struct soap* soap,
    const char* soap_endpoint, const char* soap_action,
    _s0__Restart* s0__Restart, _s0__RestartResponse* s0__RestartResponse)
{
  struct __s0__Restart soap_tmp___s0__Restart;
  if (!soap_action)
    soap_action = "s0:Restart";
  soap->encodingStyle = NULL;
  soap_tmp___s0__Restart.s0__Restart = s0__Restart;
  soap_begin(soap);
  soap_serializeheader(soap);
  soap_serialize___s0__Restart(soap, &soap_tmp___s0__Restart);
  if (soap_begin_count(soap))
    return soap->error;
  if (soap->mode & SOAP_IO_LENGTH) {
    if (soap_envelope_begin_out(soap) || soap_putheader(soap)
        || soap_body_begin_out(soap)
        || soap_put___s0__Restart(
               soap, &soap_tmp___s0__Restart, "-s0:Restart", "")
        || soap_body_end_out(soap) || soap_envelope_end_out(soap))
      return soap->error;
  }
  if (soap_end_count(soap))
    return soap->error;
  if (soap_connect(soap, soap_endpoint, soap_action)
      || soap_envelope_begin_out(soap) || soap_putheader(soap)
      || soap_body_begin_out(soap)
      || soap_put___s0__Restart(
             soap, &soap_tmp___s0__Restart, "-s0:Restart", "")
      || soap_body_end_out(soap) || soap_envelope_end_out(soap)
      || soap_end_send(soap))
    return soap_closesock(soap);
  if (!s0__RestartResponse)
    return soap_closesock(soap);
  s0__RestartResponse->soap_default(soap);
  if (soap_begin_recv(soap) || soap_envelope_begin_in(soap)
      || soap_recv_header(soap) || soap_body_begin_in(soap))
    return soap_closesock(soap);
  s0__RestartResponse->soap_get(soap, "s0:RestartResponse", "");
  if (soap->error) {
    if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
      return soap_recv_fault(soap);
    return soap_closesock(soap);
  }
  if (soap_body_end_in(soap) || soap_envelope_end_in(soap)
      || soap_end_recv(soap))
    return soap_closesock(soap);
  return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___s0__XttStart(struct soap* soap,
    const char* soap_endpoint, const char* soap_action,
    _s0__XttStart* s0__XttStart, _s0__XttStartResponse* s0__XttStartResponse)
{
  struct __s0__XttStart soap_tmp___s0__XttStart;
  if (!soap_action)
    soap_action = "s0:XttStart";
  soap->encodingStyle = NULL;
  soap_tmp___s0__XttStart.s0__XttStart = s0__XttStart;
  soap_begin(soap);
  soap_serializeheader(soap);
  soap_serialize___s0__XttStart(soap, &soap_tmp___s0__XttStart);
  if (soap_begin_count(soap))
    return soap->error;
  if (soap->mode & SOAP_IO_LENGTH) {
    if (soap_envelope_begin_out(soap) || soap_putheader(soap)
        || soap_body_begin_out(soap)
        || soap_put___s0__XttStart(
               soap, &soap_tmp___s0__XttStart, "-s0:XttStart", "")
        || soap_body_end_out(soap) || soap_envelope_end_out(soap))
      return soap->error;
  }
  if (soap_end_count(soap))
    return soap->error;
  if (soap_connect(soap, soap_endpoint, soap_action)
      || soap_envelope_begin_out(soap) || soap_putheader(soap)
      || soap_body_begin_out(soap)
      || soap_put___s0__XttStart(
             soap, &soap_tmp___s0__XttStart, "-s0:XttStart", "")
      || soap_body_end_out(soap) || soap_envelope_end_out(soap)
      || soap_end_send(soap))
    return soap_closesock(soap);
  if (!s0__XttStartResponse)
    return soap_closesock(soap);
  s0__XttStartResponse->soap_default(soap);
  if (soap_begin_recv(soap) || soap_envelope_begin_in(soap)
      || soap_recv_header(soap) || soap_body_begin_in(soap))
    return soap_closesock(soap);
  s0__XttStartResponse->soap_get(soap, "s0:XttStartResponse", "");
  if (soap->error) {
    if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
      return soap_recv_fault(soap);
    return soap_closesock(soap);
  }
  if (soap_body_end_in(soap) || soap_envelope_end_in(soap)
      || soap_end_recv(soap))
    return soap_closesock(soap);
  return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___s0__RtMonStart(struct soap* soap,
    const char* soap_endpoint, const char* soap_action,
    _s0__RtMonStart* s0__RtMonStart,
    _s0__RtMonStartResponse* s0__RtMonStartResponse)
{
  struct __s0__RtMonStart soap_tmp___s0__RtMonStart;
  if (!soap_action)
    soap_action = "s0:RtMonStart";
  soap->encodingStyle = NULL;
  soap_tmp___s0__RtMonStart.s0__RtMonStart = s0__RtMonStart;
  soap_begin(soap);
  soap_serializeheader(soap);
  soap_serialize___s0__RtMonStart(soap, &soap_tmp___s0__RtMonStart);
  if (soap_begin_count(soap))
    return soap->error;
  if (soap->mode & SOAP_IO_LENGTH) {
    if (soap_envelope_begin_out(soap) || soap_putheader(soap)
        || soap_body_begin_out(soap)
        || soap_put___s0__RtMonStart(
               soap, &soap_tmp___s0__RtMonStart, "-s0:RtMonStart", "")
        || soap_body_end_out(soap) || soap_envelope_end_out(soap))
      return soap->error;
  }
  if (soap_end_count(soap))
    return soap->error;
  if (soap_connect(soap, soap_endpoint, soap_action)
      || soap_envelope_begin_out(soap) || soap_putheader(soap)
      || soap_body_begin_out(soap)
      || soap_put___s0__RtMonStart(
             soap, &soap_tmp___s0__RtMonStart, "-s0:RtMonStart", "")
      || soap_body_end_out(soap) || soap_envelope_end_out(soap)
      || soap_end_send(soap))
    return soap_closesock(soap);
  if (!s0__RtMonStartResponse)
    return soap_closesock(soap);
  s0__RtMonStartResponse->soap_default(soap);
  if (soap_begin_recv(soap) || soap_envelope_begin_in(soap)
      || soap_recv_header(soap) || soap_body_begin_in(soap))
    return soap_closesock(soap);
  s0__RtMonStartResponse->soap_get(soap, "s0:RtMonStartResponse", "");
  if (soap->error) {
    if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
      return soap_recv_fault(soap);
    return soap_closesock(soap);
  }
  if (soap_body_end_in(soap) || soap_envelope_end_in(soap)
      || soap_end_recv(soap))
    return soap_closesock(soap);
  return soap_closesock(soap);
}

/* End of statussrv_Client.cpp */
