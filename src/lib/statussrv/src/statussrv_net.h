/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2024 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef statussrv_net_h
#define statussrv_net_h

#define stssrv_cVersion 1
#define stssrv_cServerSize 40
#define stssrv_cPlcSize 20
#define stssrv_cApplSize 50
#define stssrv_cApplOffset (stssrv_cServerSize + stssrv_cPlcSize)

typedef enum {
  stssrv_eMsgType_Status 	= 1,
  stssrv_eMsgType_ExtStatus 	= 2
} stssrv_eMsgType;

typedef struct {
  unsigned int length;
  unsigned int version;
  unsigned int id;
  unsigned int type;
} stssrv_sMsgHead;

typedef struct {
  stssrv_sMsgHead head;
} stssrv_sRequest;

typedef struct {
  stssrv_sMsgHead head;
  unsigned int Sts;
  char Version[20];
  unsigned int SystemStatus;
  char SystemStatusStr[80];
  char Description[80];
  char SystemTime[32];
  char BootTime[32];
  char RestartTime[32];
  unsigned int Restarts;
  unsigned int UserStatus1;
  char UserStatus1Str[80];
  unsigned int UserStatus2;
  char UserStatus2Str[80];
  unsigned int UserStatus3;
  char UserStatus3Str[80];
  unsigned int UserStatus4;
  char UserStatus4Str[80];
  unsigned int UserStatus5;
  char UserStatus5Str[80];
} stssrv_sRespondStatus;

typedef struct {
  unsigned int Sts;
  char StsStr[80];
  char Name[32];
} stssrv_sProcElem;
  
typedef struct {
  stssrv_sMsgHead head;
  stssrv_sProcElem Server[stssrv_cServerSize];
  stssrv_sProcElem Plc[stssrv_cPlcSize];
  stssrv_sProcElem Appl[stssrv_cApplSize];
} stssrv_sRespondExtStatus;

#endif
