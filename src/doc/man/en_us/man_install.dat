
<topic> __DocumentTitlePage

<image> pwr_logga_doc.png


<h1> Installation Guide



<hr>
2022-09-06
Version 6.0.0
<hr>
</topic>

<topic> __DocumentInfoPage


Copyright (C) 2005-2022 SSAB EMEA AB

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
Texts.





</topic>

<option> printdisable
<topic> index
Installation Guide

Installation on Debian <link> debian
Installation on Ubuntu <link> ubuntu
Installation on Raspberry Pi OS <link> rpios

</topic>
<option> printenable

<chapter>
<topic> debian
Debian

<h1>System requirements

Debian version: 11 (Bullseye)
Architecture: amd64

<h1> Development environment pwr60

1. Download pwr60_6.0.0-1_amd64.deb from the ProviewR download page.

2. Open a terminal window and install dependency packages

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++  xterm libmariadb3 \
<c>	librabbitmq4 libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 libmosquitto1 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 openjdk-11-jdk \
<c>	xterm xfonts-100dpi sudo procps libpython3-dev python3

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwr60_6.0.0-1_amd64.deb

5. Logout and login as user 'pwrp' with the same password. Start ProviewR from the
desktop icon, or from a terminal window with 

<c>>pwra

6. Follow the Getting Started Guide to create and configure a project.

7. If you enable MqttIo in BuildOptions, install libmosquitto-dev.

<h1> Demo project pwrdemo

1. Install the pwr60 package.

2. Download pwrdemo60_6.0.0-1_amd64.deb from the ProviewR download page.

3. Go to the download directory.

<c>> cd Downloads

4. Install the ProviewR demo package

<c>> sudo dpkg -i pwrdemo60_6.0.0-1_amd64.deb

5. Attach the project from the desktop icon, or from a terminal window with

<c>> sdf pwrdemo60
<c>> rt_ini &
<c>> rt_xtt op
<c>...
<c>> source pwr_stop.sh

6. Open in web browser with http://'hostname'/pwrdemo/index.html

<h1> Runtime environment pwrrt

1. Download pwrrt_6.0.0-1_amd64.deb from the ProviewR download page.

2. Open a terminal window and install dependency packages

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++ xterm libmariadb3 \
<c>	librabbitmq4 libmosquitto1 libusb-1.0-0 libhdf5-openmpi-103 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 \
<c>	xterm xfonts-100dpi sudo procps python3 python3-pandas python3-seaborn \
<c>	python3-statsmodels python3-sklearn

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwrrt_6.0.0-1_amd64.deb

5. Configure, build and distribute a node from the development environment.

6. Enter the configured qcomBusId in /etc/proview.cnf

7. Login as user pwrp and start ProviewR runtime

<c>> pwr start

8. Enable autostart of ProviewR at boot with

<c>> systemctl enable pwr

<h1> Rpi crosscompilation package pwrrpi

1. Install the pwr60 package.

2. Download pwrrpi60_6.0.0-1_amd64.deb from the ProviewR download page.

3. Go to the download directory.

<c>> cd Downloads

4. Install the ProviewR pwrrpi package

<c>> sudo dpkg -i pwrrpi60_6.0.0-1_amd64.deb

</topic>
</chapter>

<chapter>
<topic> ubuntu
Ubuntu

<h1>System requirements

Ubuntu version: 22.04 LTS
Architecture: amd64

<h1> Development environment pwr60

1. Download pwr60_6.0.0-1_amd64.deb from the ProviewR download page.

2. Open a terminal window and install dependency packages

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++  xterm libmariadb3 \
<c>	librabbitmq4 libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 libmosquitto1\
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 openjdk-11-jdk \
<c>	xterm xfonts-100dpi sudo procps libpython3-dev python3

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwr60_6.0.0-1_amd64.deb

5. Logout and login as user 'pwrp' with the same password. Start ProviewR from the
desktop icon, or from a terminal window with 

<c>>pwra

6. Follow the Getting Started Guide to create and configure a project.

7. If you enable MqttIo in BuildOptions, install libmosquitto-dev.

<h1> Demo project pwrdemo

1. Install the pwr60 package.

2. Download pwrdemo60_6.0.0-1_amd64.deb from the ProviewR download page.

3. Go to the download directory.

<c>> cd Downloads

4. Install the ProviewR demo package

<c>> sudo dpkg -i pwrdemo60_6.0.0-1_amd64.deb

5. Attach the project from the desktop icon, or from a terminal window with

<c>> sdf pwrdemo60
<c>> rt_ini &
<c>> rt_xtt op
<c>...
<c>> source pwr_stop.sh

6. Open in web browser with http://'hostname'/pwrdemo/index.html

<h1> Runtime environment pwrrt

1. Download pwrrt_6.0.0-1_amd64.deb from the ProviewR download page.

2. Open a terminal window and install 

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++ xterm libmariadb3 \
<c>	librabbitmq4 libmosquitto1 libusb-1.0-0 libhdf5-openmpi-103 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 \
<c>	xterm xfonts-100dpi sudo procps python3 python3-pandas python3-seaborn \
<c>	python3-statsmodels python3-sklearn

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwrrt_6.0.0-1_amd64.deb

5. Configure, build and distribute a node from the development environment.

6. Start ProviewR runtime

<c>> pwr start

<h1> Rpi crosscompilation package pwrrpi

1. Install the pwr60 package.

2. Download pwrrpi60_6.0.0-1_amd64.deb from the ProviewR download page.

3. Go to the download directory.

<c>> cd Downloads

4. Install the ProviewR pwrrpi package

<c>> sudo dpkg -i pwrrpi60_6.0.0-1_amd64.deb
</topic>
</chapter>

<chapter>
<topic> rpios
Raspberry Pi OS
<h1>System requirements

Raspberry Pi OS version: Debian 11 (Bullseye)
Architecture: armhf

<h1> Development environment pwr60

1. Download pwr60_6.0.0-1_armhf.deb from the ProviewR download page.

2. Open a terminal window and install dependency packages

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++  xterm libmariadb3 \
<c>	libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 libmosquitto1 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 openjdk-11-jdk \
<c>	xterm xfonts-100dpi sudo procps libpython3-dev python3

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwr60_6.0.0-1_armhf.deb

5. Logout and login as user 'pwrp' with the same password. Start ProviewR from the
desktop icon, or from a terminal window with 

<c>>pwra

6. Follow the Getting Started Guide to create and configure a project.

7. If you enable MqttIo in BuildOptions, install libmosquitto-dev.

<h1> Demo project pwrdemo

1. Install the pwr60 package.

2. Download pwrdemo60_6.0.0-1_armhf.deb from the ProviewR download page.

3. Go to the download directory.

<c>> cd Downloads

4. Install the ProviewR demo package

<c>> sudo dpkg -i pwrdemo60_6.0.0-1_armhf.deb

5. Attach the project from the desktop icon, or from a terminal window with

<c>> sdf pwrdemo60
<c>> rt_ini &
<c>> rt_xtt op
<c>...
<c>> source pwr_stop.sh

6. Open in web browser with http://'hostname'/pwrdemo/index.html

<h1> Runtime environment pwrrt

1. Download pwrrt_6.0.0-1_armhf.deb from the ProviewR download page.

2. Open a terminal window and install 

<c>> sudo apt-get update
<c>> sudo apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++ xterm libmariadb3 \
<c>	libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 libmosquitto1 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 \
<c>	xterm xfonts-100dpi sudo procps python3 python3-pandas python3-seaborn \
<c>	python3-statsmodels python3-sklearn

3. Go to the download directory

<c>> cd Downloads

4. Install the ProviewR package

<c>> sudo dpkg -i pwrrt_6.0.0-1_armhf.deb

5. Configure, build and distribute a node from the development environment.

6. Increase the Message Queue max size by adding this line to /etc/sysctl.conf

<c>fs.mqueue.msg_max = 20

and reboot.

7. Start ProviewR runtime

<c>> pwr start

</topic>
</chapter>

<headerlevel>
<chapter>

<topic> docker
Docker
Install in a docker container

<option> printdisable
on Linux <link> docker_linux
on Mac <link> docker_osx
<option> printenable
</topic>

<topic> docker_linux
Install in docker container on Linux

In this example the development environment and demo project is installed.

1. Run docker

<c>> docker run -it --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" debian:11 /bin/bash

2. Install dependency packages

<c>> apt-get update
<c>> apt-get install -y wget
<c>> apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++  xterm libmariadb3 \
<c>	librabbitmq4 libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 openjdk-11-jdk \
<c>	xterm xfonts-100dpi sudo procps libpython3-dev python3


3. Dowload the development environment and demo project

<c>> wget http://downloads.sourceforge.net/project/proview/proview/proviewr_6.0.0-1/\
debian11/pwr60_6.0.0-1_amd64.deb
<c>> wget http://downloads.sourceforge.net/project/proview/proview/proviewr_6.0.0-1/\
debian11/pwrdemo60_6.0.0-1_amd64.deb

4. Install pwr60 and pwrdemo60

<c>> dpkg -i pwr60_6.0.0-1_amd64.deb
<c>> dpkg -i pwrdemo60_6.0.0-1_amd64.deb

5. Login as user 'pwrp'

<c>> su - pwrp
<c>> export DISPLAY=unix:0

6. Attach and start the demo project

<c>> sdf pwrdemo60
<c>> pwr_rtmon

7. Create a new project

<c>> pwra

</topic>

<topic> docker_osx
Install in docker container on Mac OSX

In this example the development environment and demo project is installed.

1. Install and start the X11 server XQuartz.

Download and install XQuartz
Activate 'Allow connections from network clients' in the security settings.
Restart XQuarts to activate the new settings.

In the XQuartz terminal, allow access from local host

<c>> xhost + 127.0.0.1

2. Run docker in a docker terminal

<c>> docker run -it debian:11 /bin/bash

3. Install dependency packages

<c>> apt-get update
<c>> apt-get install -y wget
<c>> apt-get install -y libgtk-3-0 libasound2 \
<c>	libdb5.3 libdb5.3++ libsqlite3-0 librsvg2-2 g++  xterm libmariadb3 \
<c>	librabbitmq4 libusb-1.0-0 libhdf5-openmpi-103 librabbitmq4 \
<c>	libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 openjdk-11-jdk \
<c>	xterm xfonts-100dpi sudo procps libpython3-dev python3

4. Download pwr60 and pwrdemo60 packages

<c>> wget http://downloads.sourceforge.net/project/proview/proview/proviewr_6.0.0-1/\
<c>debian11/pwr60_6.0.0-1_amd64.deb

<c>> wget http://downloads.sourceforge.net/project/proview/proview/proviewr_6.0.0-1/\
<c>debian11/pwrdemo60_6.0.0-1_amd64.deb

5. Install pwr60 and pwrdemo60

<c>> dpkg -i pwr60_6.0.0-1_amd64.deb
<c>> dpkg -i pwrdemo60_6.0.0-1_amd64.deb

6. Login as user 'pwrp'
<c>> su - pwrp
<c>> export DISPLAY=host.docker.internal:0

7. Attach and start the demo project
<c>> sdf pwrdemo60
<c>> pwr_rtmon

8. Create a new project

<c>> pwra

</topic>
</chapter>
</headerlevel>


