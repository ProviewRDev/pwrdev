!** Invisible: Script for upgrading from V6.0 to V6.1
! 
# ProviewR   Open Source Process Control.
# Copyright (C) 2005-2024 SSAB EMEA AB.
#
# This file is part of ProviewR.
#
# This program is free software; you can redistribute it and/or 
# modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation, either version 2 of 
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with ProviewR. If not, see <http://www.gnu.org/licenses/>
#
# Linking ProviewR statically or dynamically with other modules is
# making a combined work based on ProviewR. Thus, the terms and
# conditions of the GNU General Public License cover the whole 
# combination.
#
# In addition, as a special exception, the copyright holders of
# ProviewR give you permission to, from the build function in the
# ProviewR Configurator, combine ProviewR with modules generated by the
# ProviewR PLC Editor to a PLC program, regardless of the license
# terms of these modules. You may copy and distribute the resulting
# combined work under the terms of your choice, provided that every 
# copy of the combined work is accompanied by a complete copy of 
# the source code of ProviewR (the version used to produce the
# combined work), being distributed under the terms of the GNU 
# General Public License plus this exception.
#
#

# AlarmBuffer.BufferSize is a new noedit attribute and need
# to be set to it's constant value.
function int update_buffersize_pndevice(string name)  
  int old_buffer_size;
  int new_buffer_size = 10;
  
  string attr = name + ".AlarmBuffer.BufferSize";
  old_buffer_size = GetAttribute(attr);
  
  # NOEDIT attribute
  if (old_buffer_size != new_buffer_size)
    printf("Updating value %s: %d -> %d\n", attr, old_buffer_size, new_buffer_size);
    SetAttribute(attr, new_buffer_size);
  endif
    
endfunction

# StartupTime was changed in earlier versions but was never
# updated to default values. So if it's still 0 we consider
# it as "not touched" and set it to default value.
function int update_startuptime_pndevice(string name)  
  int new_startup_time = 5;     
  int old_startup_time;
    
  string attr = name + ".StartupTime";
  old_startup_time = GetAttribute(attr);
  
  # Editable attribute but if it's 0 we set it to the default
  if (old_startup_time == 0)
    printf("Updating value %s: %d -> %d\n", attr, old_startup_time, new_startup_time);
    SetAttribute(attr, new_startup_time);
  endif    
  
endfunction

# PnDevice related stuff
function int update_pndevices()    
  string name = GetClassListAttrRef("PnDevice");
  while (name != "")
    printf("Updating PnDevice %s\n", name);
    
    update_buffersize_pndevice(name);
    update_startuptime_pndevice(name);
    
    name = GetNextAttrRef("PnDevice", name);
  endwhile
endfunction

# Main entry, choose what to include for the upgrade process
main()  

  # V6.1 changes alot of things in profinet devices
  update_pndevices();

  save /quiet
endmain
