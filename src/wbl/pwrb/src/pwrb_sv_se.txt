#
# Class AArithm
#
<class> AArithm
@Summary Beräknar värdet av egendefinierat aritmetriskt uttryck. 
Beräknar värdet av egendefinierat aritmetriskt uttryck. 

@image orm_aarithm_fo.gif

Friprogrammerat uttryck i C-språket. Uttrycket editeras med hjälp av Attribute 
Editor under Expression . Värdet av Expression visas i instansen. Uttrycket, 
som saknar '=', översätts vid kompileringen. 

Upp till 8 analoga (A1, ..., A8) och 8 digitala (d1, ...., d8) insignaler. 

Digitala ingångar kan med hjälp av Objekts Editorn fås att invertera insignalen. 
Invertering kan också åstadkommas genom den logiska negationsoperatorn '!'. 

OBS! Då en aritmetisk operator följs av ett 'graph name', t.ex. A1, ska operator 
och 'graph name' åtskiljas med blanktecken eller vänster parentes. 

En ingång, använd som konstant storhet, görs lämpligen osynlig med hjälp av 
'Used' faciliteten. Om konstanten inte behöver ändra värde skrivs värdet med 
fördel direkt i Expression , dvs. utan användning av ingång. Kan konstanten 
komma att ändra värde är det lämpligt att använda en Av eller Dv , eftersom 
den då blir tillgänglig via Av/Dv-objektens MERbild. 

Ej ansluten ingång ger kompileringsfel. 

C-bibliotekets matematiska funktioner kan användas, t.ex. 

exp(A1) exponentialfunktion 
log10(A1) logaritm 
sin(A1) sinus 
(1.2E3 + A1) * ( A2 + 3.7 ) aritmetik, notera de båda konstanterna 
fabs(A1) absolutbelopp 
pow(A1, A2) potensfunktionen A1 A2 
C-språkets praktiska trestegsoperator '?' används för att uttrycka alternativ. I 
exemplet nedan betyder '&&' logiskt OCH, 
Exempel: Uttrycket (d1 && d2) ? A1 + A2 : A3, innebär att VAL = A1+ A2 
om d1 och d2 båda är sanna, annars sätts VAL = A3 

<attr> AIn1
Analog storhet som kan ingå i Expression. Om A1 är ansluten avses en 
yttre signal, annars det interna attributet AIn1. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn2
Analog storhet som kan ingå i Expression. Om A2 är ansluten avses en 
yttre signal, annars det interna attributet AIn2. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn3
Analog storhet som kan ingå i Expression. Om A3 är ansluten avses en 
yttre signal, annars det interna attributet AIn3. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn4
Analog storhet som kan ingå i Expression. Om A4 är ansluten avses en 
yttre signal, annars det interna attributet AIn4. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn5
Analog storhet som kan ingå i Expression. Om A5 är ansluten avses en 
yttre signal, annars det interna attributet AIn5. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn6
Analog storhet som kan ingå i Expression. Om A6 är ansluten avses en 
yttre signal, annars det interna attributet AIn6. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn7
Analog storhet som kan ingå i Expression. Om A7 är ansluten avses en 
yttre signal, annars det interna attributet AIn7. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> AIn7
Analog storhet som kan ingå i Expression. Om A7 är ansluten avses en 
yttre signal, annars det interna attributet AIn7. ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr> 

<attr> DIn1
Digitala signaler som kan ingå i Expression. Om d1 är ansluten avses en 
yttre signal, annars det interna attributet DIn1. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn2
Digitala signaler som kan ingå i Expression. Om d2 är ansluten avses en 
yttre signal, annars det interna attributet DIn2. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn3
Digitala signaler som kan ingå i Expression. Om d3 är ansluten avses en 
yttre signal, annars det interna attributet DIn3. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn4
Digitala signaler som kan ingå i Expression. Om d4 är ansluten avses en 
yttre signal, annars det interna attributet DIn4. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn5
Digitala signaler som kan ingå i Expression. Om d5 är ansluten avses en 
yttre signal, annars det interna attributet DIn5. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn6
Digitala signaler som kan ingå i Expression. Om d6 är ansluten avses en 
yttre signal, annars det interna attributet DIn6. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn7
Digitala signaler som kan ingå i Expression. Om d7 är ansluten avses en 
yttre signal, annars det interna attributet DIn7. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> DIn8
Digitala signaler som kan ingå i Expression. Om d8 är ansluten avses en 
yttre signal, annars det interna attributet DIn8. ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 

<attr> actval
Resultatet av Expression efter senaste beräkning. 
</attr>

<attr> Expression 
Aritmetriskt uttryck i C-språket. Uttrycket anges med hjälp av Objekts Editorn 
och kan inte ändras i målmiljön. 
</attr>
</class>

#
# Class Adelay
#
<class> Adelay
@Summary Tidsfördröjning av analog signal (Analog delay). 
Tidsfördröjning av analog signal (Analog delay). 
@image orm_adelay_fo.gif

Tidsfördröjningen Tim kan vara variabel inom intervallet: 

{ 0 - 100 MaxCount ScanTime } 

Fördröjningen realiseras i ett skiftregister med 100 steg. Tidsupplösningen per 
steg är MaxCount ScanTime . Maximala tidsfördröjning blir 100 MaxCount 
ScanTime sekunder. 

Krävs större upplösning kan flera Adelay -instanser seriekopplas. 

Om tidsupplösningen per steg blir sämre än PLC programmets cykeltid ( dvs. 
MaxCount >1) sker medelvärdesbildning vid lagring i skiftregister 1. 

Vid allra 1:a samplet lagras insignalvärdet i samtliga skiftregister. Vid 2:a 
samplet medelvärdesbildas värdet i skiftregister ? och insignalen varefter 
resultatet återlagras i skiftregister 1. Detta upprepas t.o.m sampel nr. MaxCount 
- 1. Vid sampel nr. MaxCount sker skiftning av registerinnehåll och insignalen 
lagras direkt i skiftregister 1. Första registerpositionen lagrar därefter 
insignalens medelvärde fram till nästa skifttillfälle. 

Utsignalen hämtas från det register som representerar den aktuella 
fördröjningen. 

@b Example

1. Med MaxCount = 1 och ScanTime = 20 ms är den maximala fördröjningen
   100 * 1 * 1 / 50 secunder.    

   om fördröjningstiden Tim = 1, är ActVal(t) = In(t-50), dvs insignalen
   är fördröjd 50 exekverings cykler.

2. Om MaxCount = 1 och ScanTime = 1 sekund representerar varje register en
   fördröjning på en sekund. Tim anger från vilket register ActVal hämtas.
@image orm_en1-19.gif

<attr> In
Värde på insignalen. 
</attr>

<attr> Tim 
Aktuell tidsfördröjning ( i sekunder ) i intervallet 
{ 0, 100 MaxCount * ScanTime }. 

<attr> ActVal 
Fördröjd signal enligt Tim . 
</attr>

<attr> ScanTime 
Programcykeltid i sekunder, lagras automatiskt vid kompilering. 
</attr>

<attr> MaxCount 
Antal cykler per registersteg ; dvs registerskiftning sker vid vart MaxCount :e 
programcykel. 

Är MaxCount t.ex. 1.6 sker avkortning till 1. 
</attr>

<attr>TimVect
Cykliskt register. 
</attr>

<attr>StoInd 
Index som anger nästa position för lagring. 
</attr>

<attr>StoredNumbers 
Räknare under initieringsfas. 
</attr>

<attr>Count 
Varvräknare för skift. 
</attr>

<attr>AccTim 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Tim . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinTim
Minsta tillåtna värde vid operatörsändring av Tim. 
</attr>

<attr>MaxTim 
Största tillåtna värde vid operatörsändring av Tim. 
</attr>
</class>

#
# Class Ai
#
<class> Ai
@Summary Analog ingång. 
Analog ingång. 

Konfigurerar analog insignal i 'Plant Configuration'. 

@b Tips 

Placera i utvecklingsmiljön objektet under $PlantHier objekt så att det kommer 
att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objeksbild
@image orm_ai_og.png

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de AiArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). Ingenjörsvärdet erhålls 
efter konvertering från SigValue . 
</attr>

<attr>Unit 
Ingenjörsenhet. Enhet för ActualValue . 
</attr>

<attr>NoOfDecimals 
Antal decimaler vid presentation av ActualValue . 
</attr>

<attr>PresMinLimit
Skalområdets undre gräns i objektbildens stapeldiagramm. 
</attr>

<attr>PresMaxLimit
Skalområdets övre gräns i objektbildens stapeldiagramm. 
</attr>

<attr>SigValue 
Reellt signalvärde efter konvertering från RawValue . 
</attr>

<attr>RawValue 
Inläst råvärde (normalt A/D-omvandlarens bitmönster). 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>

<attr>FilterAttribute
Definierar filterkonstanter i vald filterfunktion, se FilterType. Konstanterna 
anges i sekunder. 

Endast om FilterType = och FilterAttribute[0] > ScanInterval · CycleTimeBus 
(= signalens uppdateringsperiod) sker filtrering. 

<attr>FilterType 
Intern filtrering avser enbart lokala Ai-signaler. 

Anger den valda filtertypen. Följande filtertyper finns: 

0 -- Ingen filtrering.
1 -- Exponentialfilter.

Filtrering görs på ingenjörsvärdet, ActualValue, före lagring i
rtdb enligt:

ActualValue t = ActualValue t-1 + a · (InValue t - ActualValue t-1 ),
där ActualValue t-1 är det vid förra samplet lagrade ingenjörs-
värdet och InValue t det aktuella ingenjörsvärdet före filtrering.

a = ScanIntervall · CycleTimeBus / FilterAttribute[0] och
0 < a < 1.0. Om a = 0 sker ingen filtrering. Ju mindre a är desto
hårdare blir filtreringen.

Produkten ScanIntervall · CycleTimeBus anger signalens
uppdatreingsperiod.
</attr>
</class>

#
# Class AiArea
#
<class> AiArea
@Summary Area-objekt för Ai signaler.
Area-objekt för Ai signaler.

Ai-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Ai-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Ai-signaler.
</attr>
</class>

#
# Class AoArea
#
<class> AoArea
@Summary Area-objekt för Ao signaler.
Area-objekt för Ao signaler.

Ao-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Ao-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Ao-signaler.
</attr>
</class>

#
# Class AvArea
#
<class> AvArea
@Summary Area-objekt för Av signaler.
Area-objekt för Av signaler.

Av-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Av-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Av-signaler.
</attr>
</class>

#
# Class CaArea
#
<class> CaArea
@Summary Area-objekt för Co signalers absolut värden.
Area-objekt för Co signalers absolut värden.

Co-signalernas absolut värde lagras i Value attributet. Index anges av 
ValueIndex i Co-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller absolut värden på Co-signaler.
</attr>
</class>

#
# Class CoArea
#
<class> CoArea
@Summary Area-objekt för Co signalers råvärde.
Area-objekt för Co signalers råvärde.

Co-signalernas råvärde lagras i Value attributet. Index anges av ValueIndex
i Co-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller råvärden på Co-signaler.
</attr>
</class>

#
# Class DiArea
#
<class> DiArea
@Summary Area-objekt för Di signaler.
Area-objekt för Di signaler.

Di-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Di-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Di-signaler.
</attr>
</class>

#
# Class DoArea
#
<class> DoArea
@Summary Area-objekt för Do signaler.
Area-objekt för Do signaler.

Do-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Do-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Do-signaler.
</attr>
</class>

#
# Class DvArea
#
<class> DvArea
@Summary Area-objekt för Dv signaler.
Area-objekt för Dv signaler.

Dv-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Dv-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Dv-signaler.
</attr>
</class>

#
# Class IiArea
#
<class> IiArea
@Summary Area-objekt för Ii signaler.
Area-objekt för Ii signaler.

Ii-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Ii-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Ii-signaler.
</attr>
</class>

#
# Class IoArea
#
<class> IoArea
@Summary Area-objekt för Io signaler.
Area-objekt för Io signaler.

Io-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Io-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Io-signaler.
</attr>
</class>

#
# Class IvArea
#
<class> IvArea
@Summary Area-objekt för Iv signaler.
Area-objekt för Iv signaler.

Iv-signalernas värde lagras i Value attributet. Index anges av ValueIndex
i Iv-objekten, vilket tilldelas vid I/O initieringen.

Objektet skapas i runtime i den dynamiska systemvolymen pwrNode.

<attr>Value
Vektor som innehåller värden på Iv-signaler.
</attr>
</class>

#
# Class And
#
<class> And
@Summary OCH-grind. 
OCH-grind. 
Och-grind för upp till 8 ingångar. Använda ingångar behöver inte vara 
konsekutivt valda. 
@image orm_and_fo.gif
Grundsymbolen har två ingångar. Med Objekts Editorn kan antalet ingångar 
ändras och individuella ingångar inverteras. 

Inläst signalvärde används utan att lagras. 

<attr>In1
Logiska ingång. 
</attr>
<attr>In2
Logiska ingång. 
</attr>
<attr>In3
Logiska ingång. 
</attr>
<attr>In4
Logiska ingång. 
</attr>
<attr>In5
Logiska ingång. 
</attr>
<attr>In6
Logiska ingång. 
</attr>
<attr>In7
Logiska ingång. 
</attr>
<attr>In8
Logiska ingång. 
</attr>

<attr>Status 
OCH-grindens aktuella tillstånd. 
</attr>
</class>

#
# Class Ao
#
<class> Ao
@Summary Analog utgång (Analog Output). 
Analog utgång (Analog Output). 

Konfigurerar analog utsignal i 'Plant Configuration'. 

@b Tips 
Placera i utvecklingsmiljön objektet under $PlantHier objekt så att det 
kommer att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objektsbild
 @image orm_ao_og.png

<attr>Description 
Valfri text för beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de AoArea-objekt som används för 
bas- resp. delfrekvenssampel. Initieras vid start av rt_ini.
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>Unit 
Ingenjörsenhet. Enhet för ActualValue . 
</attr>

<attr>NoOfDecimals 
Antal decimaler vid presentation av ActualValue . 
</attr>

<attr>PresMinLimit
Skalområdets undre gräns i objektbildens stapeldiagram. 
</attr>

<attr>PresMaxLimit 
Skalområdets övre gräns i objektbildens stapeldiagram. 
</attr>

<attr>SigValue 
Reellt signalvärde efter konvertering från ActualValue . 
</attr>

<attr>RawValue 
Utställt råvärde efter omvandling från SigValue . Värdet används av D/A- 
omvandlaren. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class ASup
#
<class> ASup
@Summary Larmövervakning av analog storhet (Analog Supervisory). 
Larmövervakning av analog storhet (Analog Supervisory). 
@image orm_asup_fo.gif
Övervakar analog storhet i godtyckligt objekt med avseende på över eller 
underskridande av övervakningsgräns. High anger om det är över eller 
underskridande som utgör storhetens larmläge. 

Övervakningsgränsen kan förses med hysteres, Hysteres . Larmmeddelande 
kan fördröjas en tiden TimerTime . 

Då den övervakade storheten antar larmläge reagerar ASup objektet med två 
åtgärder: 

'act' utgången sätts ovillkorligen för att indikera larm tillstånd. 
efter tiden TimerTime skickas meddelande till utenheter, t.ex. 
operatörsstationer. Denna åtgärd kan undertryckas med hjälp av DetectOn . 
Meddelande består dels av textsträngen DetectText , dels av flaggor, se 
EventFlags , för att manövrera kompletterande aktiviteter. 

Meddelanden kan vara av olika typ; (se EventType ) 

ALARM ALARM-meddelanden ska kvitteras. De kvarstår i larmlistan
tills kvittering sker, dvs. oberoende av om det övervakade
objektet då befinner sig i larm- eller normaltillstånd. 
INFO Kvitteringsbara INFO-meddelanden skickas till larmfönstrets
informationsdel varifrån kvittering kan ske. F.ö hanteras de som
ALARM-meddelanden.

Ej kvitteringsbara INFO-meddelanden skickas endast till
händelselistan. 
Alla meddelanden skickas till händelselistan. 

ALARM-meddelanden ges olika prioritet; (se EventPriority ). Både A- och B- 
larm hamnar i larmfönstret och larmlistan. Kvittering kan ske från båda 
platserna. I larmfönstret anges antalet okvitterade C- och D-larm medan själva 
meddelandena finns i larmlistan varifrån kvittering också kan göras. 

NB! Ett meddelande som skapas av ett ASup objekt får samma identitet som 
det övervakade objektet. Attributet SelectList som finns i utenheternas objekt, 
t.ex. User -objekt anger från vilka hierarkier meddelanden ska tas emot. 

Olika typer av utenheter finns: 

OPERATOR: Urvalslistan definieras av ett attribut i User -objekt. 
PRINTER: Urvalslistan definieras av ett attribut i EventPrinter -
objekt. 

@b Tips 
Att den övervakade storheten får tillhöra ett godtyckligt objekt betyder att inte 
bara signalobjekt utan också andra objekt kan övervakas; t.ex. attribut i egen 
definierade objekt. 

Både ASup och DSup objekt kan konfigureras på olika sätt. Vid konfigurering 
i PLC program handhar PLC jobbet övervakningen. När objekten konfigureras 
utanför PLC program.

@image orm_en1-23.gif
Övervakningsobjekten kan även konfigureras utanför Plc program.

@b Se även

<attr>In 
Övervakat objekt. Lämnas ingången öppen anges i Attribute vad som ska 
övervakas. 
</attr>

<attr>Control 
Anger om övervakningen ska ske eller ej. Notera att blockering görs när 
Control är FALSE. Insignalen kan inverteras. 

FALSE kopplar bort övervakningen och TRUE eller öppen ingång innebär att 
övervakningen utförs. 
</attr>

<attr>Action 
Anger den övervakade storhetens tillstånd. FALSE innebär normaltillstånd och 
TRUE larmtillstånd. 

Utsignalen kan användas t.ex. för att aktivera åtgärdspaket vid larmtillstånd. 
</attr>

<attr>Acked 
Anger om ett larmtillstånd kvitterats eller ej. FALSE betyder att okvitterat larm 
finns. Utsignalen sätts initialt TRUE då ASup-objektet skapas i rtdb och när 
larmtillstånd kvitteras. 
</attr>

<attr>Blocked 
Anger om övervakningsobjektet är blockerat eller ej. Med blockering avses 
övervakningsobjektets förmåga att initiera meddelanden. Blockering påverkar 
inte objektets act-utgång. 

FALSE innebär att ASup-objektet inte är blockerat och TRUE att det är 
blockerat. Vid blockering av övervakningsobjekt som befinner sig i larmläge 
tas existerande meddelanden för det aktuella objektet bort. 

Blockering /deblockering görs med hjälp av larmblockeringsformuläret i 
Operator Window. 
</attr>

<attr>Description 
Fri text för att beskriva objektet. Används i bilden 'Larmgränser'. 
</attr>

<attr>DetectOn 
Anger om den åtgärd som vid larmtillstånd består i att skicka DetectText ska 
blockeras eller ej. FALSE betyder att inget meddelande skickas vid 
larmtillstånd; TRUE betyder att meddelandet DetectText skickas vid 
larmtillstånd. 
</attr>

<attr>DetectText 
Fri text som ingår i meddelandet vid larmtillstånd. Texten skrivs ut vid 
larmtillstånd om DetectOn är TRUE. 
</attr>

<attr>ShowDetectText 
Anger om DetectText ska visas i ASup-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. 
</attr>

<attr>ReturnText 
Fri text som ingår i meddelandet vid återgång till normaltillstånd. Meddelandet 
skrivs i händelselistan. 
</attr>

<attr>EventType 
Anger vilken typ av meddelande (= DetectText ) som ska skickas vid 
larmtillstånd.
64 -- ALARM Meddelandet kräver kvittering och skickas till
larmfönstret, larmlistan och händelselistan.
32 -- INFO Om meddelandet kräver kvittering skickas det till
larmfönstrets informationsdel och händelselistan annars
enbart till händelselistan. 
</attr>

<attr>EventPriority 
Prioritet. Gäller enbart ALARM-meddelanden. 

67 = A-larm; högst prioritet. (= 43Hex)
66 = B-larm (= 42Hex)
65 = C-larm (= 41Hex)
64 = D-larm ; lägst prioritet. (= 40Hex) 
</attr>

<attr>EventFlags 
Bitmask. En kombination av flaggor används också för att närmare precisera 
meddelandet. Följande värden är möjliga: 

1 -- Om denna flagga finns ska ett returmeddelande med ReturnText skickas 
till utenheternas händelselistor, annars inte.
2 -- Om denna flagga finns ska ett kvittensmeddelande skickas till
utenheternas händelselistor, annars inte.
4 -- Om den enskilda utenheten har pip-funktion ska den aktiveras då
meddelandet tas emot.
8 -- Meddelandet ska tas emot av varje utenhet oberoende av vad det står i 
urvalslistorna.
16 -- Om meddelandet är av typen INFO placeras det förutom i
händelselistan också i larmfönstrets info-del. Kvittens- resp
returmeddelande som för t.ex. A-larm. 
</attr>

<attr>Attribute 
Anger komplett namn på övervakat attribut. Om ingången IN lämnas öppen ska 
vid konfigureringen Attribute fyllas i. Knyts ingången till annat objekt ifylls 
attributet vid kompileringen av ProviewR. 
</attr>

<attr>AlarmStatus 
Aktuellt statusvärde. Bitmask bestående av 16 bitar där de 8 minst signifikanta 
bitarna anger tillståndet och de 8 mest signifikanta prioriteten . 

Tillståndet är en kombination av följande: 

0 -- Normaltillstånd
1 -- Larmtillstånd
2 -- Okvitterat larmtillstånd 

Prioriteten är en av prioriteterna EventPriority . 

Följande värde på AlarmStatus kan förekomma: 

EventPrority + 1 => Prioritet + larmtillstånd
EventPrority + 3 => Prioritet + okvitterat larm och rådande larmtillstånd 
EventPrority + 2 => Prioritet + okvitterat larm och normaltillstånd 
</attr>

<attr>AlarmCheck 
Används internt vid händelse detektering. 
</attr>

<attr>DetectCheck 
Anger om larmtillstånd ska detekteras eller ej. FALSE betyder att larmtillstånd 
inte ska detekteras; TRUE att larmtillstånd ska detekteras. 
</attr>

<attr>DetectSend 
Anger om meddelande sänts till utenheter (eller mer precis till meddelande 
hanteraren) eller ej; TRUE betyder att meddelande har sänts. 
</attr>

<attr>DetectTime 
Datum och klockslag för senast detekterade larmtillstånd. 
</attr>

<attr>ReturnCheck 
Anger om objektet återgått till normaltillstånd eller ej. TRUE betyder att 
objektet återgått till normaltillstånd. 
</attr>

<attr>ReturnSend 
Anger om returmeddelande med ReturnText sänts till utenheterna eller ej. 
TRUE betyder att returmeddelande sänts. 
</attr>

<attr>ReturnTime 
Datum och klockslag för senast detekterade retur till normaltillstånd. 
</attr>

<attr>AckTime 
Datum och klockslag för senast detekterade kvittens. 
</attr>

<attr>AckOutunit 
Identitet på utenhet (operatör) varifrån kvittering skett. 
</attr>

<attr>BlockStatus 
Ej använd. 
</attr>

<attr>ActualValue 
Den övervakad storhetens värde vid tidpunkten TimeOfDetect . 
</attr>

<attr>CtrlLimit 
Larmgräns. 
</attr>

<attr>Hysteres 
Hysteresvärde. Ett absolutvärde som övervakad storhet måste avvika från 
larmgränsen CtrlLimit före retur till normaltillstånd. 
</attr>

<attr>High 
Anger om larmläge föreligger då storheten ligger över eller under CtrlLimit . 

FALSE Under; om värdet av övervakad storhet < CtrlLimit så larmläge.
TRUE över; om värdet av övervakad storhet > CtrlLimit så larmläge. 
</attr>

<attr>Unit 
Den övervakade storhetens enhet. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timerkön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( ? tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när, efter det att larmtillstånd inträtt, 
meddelandet ska skickas. Om larmtillståndet försvinner innan tiden gått ut 
genereras inget meddelande. 

TimerTime = PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
</class>

#
# Class AtoI
#
<class> AtoI
@Summary Konvertera analogt värde till heltal.
Konvertera analogt värde till heltal.
@image orm_atoi_fo.gif

AtoI objektet konverterar värdet av den analoga ingången till heltal
(pwr_tInt32) som lagras i ActVal.
Det analoga värdet avrundas till närmsta heltal.

<attr>In
Analog ingång som konverteras till heltal.
</attr>
<attr>ActVal
Utgång som innehåller heltalet.
</attr>
</class>

#
# Class AtoStr
#
<class> AtoStr
@Summary Konvertera analogt värde till sträng.
Konvertera analogt värde till sträng.
@image orm_atostr_fo.gif

AtoI objektet konverterar värdet av den analoga ingången till en sträng
som lagras i ActVal.

Observera att felaktiga format specifikationer kan få plc-programmet att
terminera. Storleken på den resulterande strängen ska inte överskrida
79 tecken.

<attr>In
Analog ingång som konverteras till en sträng.
</attr>
<attr>Format
c-format som specificerar konverteringen.
</attr>
<attr>ActVal
Utgång som innehåller strängen.
</attr>
</class>

#
# Class Av
#
<class> Av
@Summary Analogt värde. 
Analogt värde. 

Konfigurerar beräknad analog storhet (=flyttalsvariabel ) under 'Plant 
Configuration'. 

@b Tips 
Placera i utvecklingsmiljön objektet under $ PlantHier objekt. 

Objektet tilldelas initialt värde (? 0 ) i målnoden, t.ex. med hjälp av StoAv.

@b Objektsbild
 @image orm_av_og.png

<attr>Description 
Valfri beskrivande text för att beskriva vad storheten representerar eller vad 
den används till. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de AvArea-objekt som används för 
bas- resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>InitialValue 
InitialValue anger signalens startvärde vid s.k. kallstart. Vilket värde som utgör 
startvärde vid varmstart ( = PLC-programbyte) beror på om signalen är ny eller 
ej. Existerade signalen i förra programversionen används dess sista ärvärde 
som startvärde, annars I nitialValue . 
</attr>

<attr>Unit 
Ingenjörsenhet. Enhet för ActualValue . 
</attr>

<attr>NoOfDecimals 
Antal decimaler vid presentation av ActualValue . 
</attr>

<attr>PresMinLimit
Skalområdets undre resp övre gräns i objektbildens stapeldiagram. 
</attr>

<attr>PresMaxLimit 
Skalområdets undre resp övre gräns i objektbildens stapeldiagram. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Backup
#
<class> Backup
@Summary Pekar ut ett datasegment i rtdb för lagring (backup) på fil. 
Pekar ut ett datasegment i rtdb för lagring (backup) på fil. 
@image orm_backup_fo.gif

Är det av Backup objektet utpekade segmentet skapat i utvecklingsmiljön kan 
uppbackningen avse antingen hela objektet eller enskilda attribut. I 
utvecklingsmiljön kan Backup-objektet konfigureras dels från 
konfigurationseditorn, dels från PLC Editorn. 

Backup-objekt skapat i konfigurationseditorn placeras under $PlantHier - 
objekt. Backup-objektet och objekt som refereras måste ligga lagrade på 
samma nod, annars sker ingen uppbackning. DataName talar om vad som ska 
backas upp. 

Ingången på backup-objekt, skapat i PLC Editorn , kopplas till utgången på 
aktuellt objekt. Det förutsätts att denna utgång avser ett attribut med Output-
flagga. Med ObjectBackup anges om hela det aktuella objektet eller bara den 
aktuella utgången ska backas upp. Vid PLC-jobbets initiering kommer 
DataName att fylls i. 

För objekt skapade under drift i målmiljön , t.ex. objekt skapade från C- 
program, gäller att endast hela objektkroppar kan backas upp; inte enstaka 
attribut. Motsvarande Backup-objekt skapas då också på initiativ av 
tillämpningsprogrammet. 

@b Tips 

NB! Hela signalobjekt skall inte backas upp, eftersom det kan leda till problem 
efter laddning. 

Varje typ av signalobjekt har en pekare * ActualValue och det är inte sannolikt 
att dessa pekare kommer att bli de samma efter en omladdning som före. Om 
backup av enskilt attribut i ett signalobjekt erfordras, t.ex. av ActualValue i ett 
Av objekt, backa då upp attributet och inte hela objektet. 

Då en nods 'run-time environment' skapas får instansernas attribut 
defaultvärden. De instanser i backup-filen som, 

återfinns i nodens rtdb kommer att uppdateras utifrån upp backningen 

saknas i rtdb, t.ex. på grund av att de tagits bort eller fått nytt namn, kommer 
att hoppas över 

I samband med byte av ProviewR distribution kan man inte förutsätta att upp 
backningen kan användas. 

@b Se även 

<attr>In 
</attr>

<attr>ObjectBackup 
Används av Backup-objekt skapade i PLC Editorn. Anger om hela det till 
Backup-objekt kopplade objektet ska backas upp eller bara objektets utgång. 

FALSE innebär att endast den till Backup-objekt kopplade utgången ( = 
attributet ) backas upp. TRUE innebär att hela objektet backas upp. 
</attr>

<attr>DataName 
Namn på det som ska backas upp. Max 79 tecken.
Exempel: VKV-ProdEnergi ( hela objektet backas upp )
VKV-TEMP1. ActualValue ( bara ActualValue backas upp) 
</attr>

<attr>Fast 
Anger om uppbackningscykeln ska vara snabb eller långsam. FALSE innebär 
en långsam backup-cykel och TRUE en snabb backup-cykel. Vad som avses 
med en långsam resp. snabb backup-cykel framgår av Backup_Conf objektet. 
</attr>

<attr>Status 
Statuskod på VMS-format. Anger om fel uppstått i samband med objektets 
uppbackning. Så länge Status = 0 har ingen upp backning gjorts. 
</attr>
</class>

#
# Class Backup_Conf
#
<class> Backup_Conf
@Summary Konfigurering av nodens backup process.
Konfigurering av nodens backup process. 

Vilka objekt eller delar av objekt som ska ingå i backup-funktionen 
konfigureras med hjälp av Backup -objekt. 

Backup av enskilt objekt kan ske i en snabb eller långsam cykel. Vad som 
menas med snabbt resp. långsamt anges av CycleFast resp. CycleSlow . 

Backup_Conf konfigureras direkt under aktuellt $Node objekt 

@b Objektsbild
@image orm_backup_conf_og.png

@b Se även 

<attr>BackupFile 
Backup-filens namn. Max. 79 tecken. Om backup-filen inte lagras på den 
lokala noden ska också noddestinationen anges; t.ex. 1.30::PWRP_LOAD:VKVAMN.BCK 
</attr>

<attr>CycleFast 
Anger den snabba backup-cykelns period i 10-dels sekunder; t.ex. 300, dvs 30 
sek. Om CycleFast = 0 väljs en default (=BCK_DEFAULT_FAST ) cykeltid. 
Denna är 10 sek f. n. 
</attr>

<attr>CycleSlow
Anger den långsamma backup-cykelns period i 10-dels sekunder; t.ex. ? 200, 
dvs 2 minuter. Om CycleSlow = 0 väljs en default 
(=BCK_DEFAULT_SLOW) cykeltid. Denna är 60 sek för närvarande. 
</attr>

<attr>CntFast
Antal kompletta 'snabba' backup-cykler som gjorts. 
</attr>

<attr>CntSlow 
Antal kompletta 'långsamma' backup-cykler som gjorts. 
</attr>

<attr>BytesFast
Antal bytes som skrivs under 'snabba' backup-cyklen. 
</attr>

<attr>BytesSlow 
Antal bytes som skrivs under 'långsamma' backup-cyklen. 
</attr>

<attr>SegFast
Antal Backup-objekt som ingick i senaste 'snabba' backup-cykeln. 
</attr>

<attr>SegSlow 
Antal Backup-objekt som ingick i senaste 'långsamma' backup-cykeln. 
</attr>

<attr>ObjTimeFast
Tid då Backup-objekten i 'snabba' backup-cykeln senast 
uppdaterades i backup-filen. 
</attr>

<attr>ObjTimeSlow 
Tid då Backup-objekten i 'långsamma' backup-cykeln senast 
uppdaterades i backup-filen. 
</attr>

<attr>LastWrite 
Tid för senaste skrivning i backup-filen utan hänsyn till typ ( snabb, långsam) 
av backup-cykel. 
</attr>

<attr>DiskStatus 
Statuskod efter senaste operation mot disk. 
</attr>
</class>

#
# Class BCDDo
#
<class> BCDDo
@Summary BCD ut ( t.ex. till teckenfönster) 
BCD ut ( t.ex. till teckenfönster) 
@image orm_en1-25.gif

Avbildar decimalt flyttal på 4 BCD-kodade siffror (=16 digitala signaler). 
Eventuell 'overflow' beräknas. 

Insignalen trunkeras till närmast lägre heltal. 

Negativ insignal sätter samtliga utgångar till 0. 

Flera BCDDo objekt kan seriekopplas för att klara tal = 10 000. 

Utgångarnas namn anger vilket värde utgången representerar. 

Används t.ex. för att styra teckenfönster. 

BCDDo = Binary Coded Decimal Digital Output. 

@b Exempel 
Antag att insignalen har värdet 235 016.7 

BCD-värdet blir då 5016 eftersom, 

BCD1 och BCD2 båda är satta => 6
BCD4 är satt => 10
BCDC och BCDE båda är satta => 5000 

Rest = 23. Det är möjligt att ansluta Rest -utgången till ingången In på ett andra 
BCDDo objekt. Därvid kommer de decimal siffror som representerar 10 000 
och 100 000 också att BCD-kodas. 

@b Se även 

<attr>In 
Positiv analog storhet som ska BCD-kodas. är IN ansluten avses en yttre signal, 
annars konstanten In . Ändringar av In gjorda under drift beaktas. 
</attr>

<attr>BCD0
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD1
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD2
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD3
BCD0 - BCD3 ger 1-talssiffran. 
</attr>

<attr>BCD4
BCD4 - BCD7 ger 10-talssiffran.
</attr>
<attr>BCD5
BCD4 - BCD7 ger 10-talssiffran.
</attr>
<attr>BCD6
BCD4 - BCD7 ger 10-talssiffran.
</attr>
<attr>BCD7
BCD4 - BCD7 ger 10-talssiffran.
</attr>

<attr>BCD8
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCD9
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCDA
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCDB
BCD8 - BCDB ger 100-talssiffran. 
</attr>

<attr>BCDC
BCDC - BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDD
BCDC - BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDE
BCDC - BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDF
BCDC - BCDF ger 1000-talssiffran. 
</attr>

<attr>Rest 
Insignal / 10 000, eller insignalens värde om insignalen är mindre än noll 
(=ogiltigt värde) 
</attr>
</class>

#
# Class BodyText
#
<class> BodyText
@Summary Flerradigt textobjekt 
Flerradigt textobjekt 

Används då flerradig beskrivning ska göras i t.ex. Document objekt. 

@b Example
 @image orm_en1-28.gif

@b Se även

<attr>Text 
Anger den text som ska visas i objektet. 

Används Tab-tecken i Objekts Editorn kommer det i objektet att visas som 
blanktecken. 
</attr>

<attr>TextAttribute 
Attributet påverkar textens utseende. Följande värden finns: 
@image orm_text_1.gif
</attr>
 
<attr>FrameAttribute 
Attributet anger om texten ska omges med ram. 
@image orm_text_2.gif
</attr>
 
<attr>FrameWidth
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella texten. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>

<attr>FrameHeight
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella texten. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>
</class>

#
# Class BusConfig
#
<class> BusConfig
@summary Konfigurerar en Qcom bus.
Bus-objektet konfigurerar den qcom-bus som noder i projektet kommunicerar på.

Objektet konfigureras i projekt-volymen som ett topp-objekt, och har
NodeConfig objekt för noderna i projektet som barn.

@b Se även
<attr>Description
Beskrivning av bussen.
</attr>
<attr>BusNumber
QCOM bus nummer.
</attr>
</class>

#
# Class CArithm
#
<class> CArithm
@Summary Friprogrammerbart objekt. Kodning sker i C-språket. 
Friprogrammerbart objekt. Kodning sker i C-språket. 
@image orm_carithm_fo.gif

Koden editeras med hjälp av Objekts Editorn under objektets Code attribut. 

Upp till 8 analoga ingångar respektive utgångar och upp till 8 digitala ingångar 
respektive utgångar. 

Digitala ingångar kan inverteras antingen med hjälp av Objekts Editorn eller i 
koden med den logiska '!'-operatorn. 

NB! Varje utgång som inte explicit tilldelas värde i koden kommer implicit att 
få värdet 0 vid varje exekvering. 

@b Exempel
Applikationen börjar med att deklarera variabeln 'r1'. r1 tilldelas
summan av A1 och A2. Eftersom A2 har lämnats öppen, hämtas värdet internt.
Om r1 är större än 2.7 kommer AO1 att ökas med ett, annars nollställas.
@image orm_carithm_1.gif

@b Tips 
Storleken på CArithm-objektets symbol anpassas efter textmängden i Code . 
För att undvika mycket breda CArithm-objekt avslutas C-satserna lämpligen 
med 'return' som i exemplet ovan. 

@b Se även 

<attr>AIn1
Anger analoga storheter som kan inkluderas Code . Om A1 är ansluten 
används den externa signalen, annars det interna attributet AIn1. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn2
Anger analoga storheter som kan inkluderas Code . Om A2 är ansluten 
används den externa signalen, annars det interna attributet AIn2. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn3
Anger analoga storheter som kan inkluderas Code . Om A3 är ansluten 
används den externa signalen, annars det interna attributet AIn3. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn4
Anger analoga storheter som kan inkluderas Code . Om A1 är ansluten 
används den externa signalen, annars det interna attributet AIn4. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn5
Anger analoga storheter som kan inkluderas Code . Om A5 är ansluten 
används den externa signalen, annars det interna attributet AIn5. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn6
Anger analoga storheter som kan inkluderas Code . Om A6 är ansluten 
används den externa signalen, annars det interna attributet AIn6. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn7
Anger analoga storheter som kan inkluderas Code . Om A7 är ansluten 
används den externa signalen, annars det interna attributet AIn7. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>AIn8
Anger analoga storheter som kan inkluderas Code . Om A8 är ansluten 
används den externa signalen, annars det interna attributet AIn8. Förändringar 
av AIn1 , ..., AIn8 i målsystemet beaktas. 

NB! Ingångarna är sådana att den anslutna storheten förutsätts vara ett flyttal. 
Funktionen blir inte utan vidare korrekt om en heltalsstorhet ansluts till någon 
av ingångarna. 
</attr>

<attr>DIn1
Anger digitala storheter som kan inkluderas Code. Om d1 är ansluten 
används den externa signalen, annars det interna attributet DIn1 . Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn2
Anger digitala storheter som kan inkluderas Code. Om d2 är ansluten 
används den externa signalen, annars det interna attributet DIn2. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn3
Anger digitala storheter som kan inkluderas Code. Om d3 är ansluten 
används den externa signalen, annars det interna attributet DIn3. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn4
Anger digitala storheter som kan inkluderas Code. Om d4 är ansluten 
används den externa signalen, annars det interna attributet DIn4. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn5
Anger digitala storheter som kan inkluderas Code. Om d5 är ansluten 
används den externa signalen, annars det interna attributet DIn5. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn6
Anger digitala storheter som kan inkluderas Code. Om d6 är ansluten 
används den externa signalen, annars det interna attributet DIn6. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn7
Anger digitala storheter som kan inkluderas Code. Om d7 är ansluten 
används den externa signalen, annars det interna attributet DIn7. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>DIn8
Anger digitala storheter som kan inkluderas Code. Om d8 är ansluten 
används den externa signalen, annars det interna attributet DIn8. Förändringar 
av DIn1 , ..., DIn8 i målsystemet beaktas. 
</attr>

<attr>OutA1
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA2
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA3
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA4
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA5
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA6
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA7
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutA8
Det analoga resultatet efter den senaste Code evalueringen. 
</attr>

<attr>OutD1
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD2
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD3
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD4
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD5
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD6
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD7
Det binära resultatet efter den senaste Code evalueringen. 
</attr>
<attr>OutD8
Det binära resultatet efter den senaste Code evalueringen. 
</attr>

<attr>Code 
Ordinär C-kod med upptill 1024 tecken. Koden, som editeras med hjälp av 
Objekts Editorn, kan inte ändras i målmiljön. Alla typer av C-satser är tillåtna. 

NB! Då en aritmetisk operator följs av ett 'graph name', t.ex. A1, ska operatorn 
och 'graph name' separeras av ett blanktecken eller en vänster parentes. 
</attr>
</class>

#
# Class ChanAi
#
<class> ChanAi
@Summary Konfiguring av analog ingångskanal.
Konfiguring av analog ingångskanal.

Konfigurerar analog ingångskanal oberoende av det fysiska Ai-kortets typ. För 
omvandling från signalvärde till ärvärde används polynom . 

Figuren nedan visar stegen i omvandlingen av en Ai-signal med inblandade
attribut. Den interna filtreringen omfattar lokala Ai signaler.
@image orm_en1-31.gif

SigValue omvandlas till ActualValue via givarfunktionen g , givarpolynomet p 
och filtret f enligt. 

ActualValue = f ( p( g( SigValue ) ) ), där valet av 

-- givarfunktion g styrs av SensorTypeCode
-- givarpolynom p styrs av SensorPolyType
-- filter f styrs av FilterType i Ai objektet 

Placeras direkt under Ai-kortobjekt. 

@b Tips 
ChanAi objekt konfigureras under lämpligt Ai-kortobjekt. 

Rack- och kortobjekt för olika I/O system är separat dokumenterade. 

För att skapa kortobjekt med tillhörande kanalobjekt används lämpligen 
funktionen 'Configure Card' i "Utility Window". 

@b Objektsbild
@image orm_chanai_og.png

@b Se även

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på Ai-signalobjekt knutet till kanalobjektet. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Ai0 för att beteckna kortets första kanal, 
fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanAi objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet.
Kortets kanalnummer räknas enligt korttillverkarens anvisningar. 
</attr>

<attr>ConversionOn 
Anger om signalobjektets RawValue ska uppdateras eller ej. FALSE betyder 
ingen uppdatering; TRUE innebär att RawValue kommer att uppdateras med 
cykeltiden ScanInterval. 
</attr>

<attr>ScanInterval 
Anger, i förhållande till grundperioden T0, hur ofta RawValue ska läsas in och 
konverteras till ActualValue .
IO-jobbet hanterar lokala Ai signaler med grundperioden T0 = CycleTimeBus 
och icke-lokala Ai signaler med grundperioden T0 = CycleTimeSerial ; se 
IOHandler). 

ScanInterval ska vara = 1. 

RawValue kommer att uppdateras med perioden: ScanInterval · T0. 
</attr>

<attr>SensorTypeCode 
Signalvärdet kan modifieras av givarfunktionen g före vidare hantering. 
Följande givarfunktioner finns: 

0 -- Normalfallet: g( SigValue ) = SigValue 
</attr>

<attr>SensorPolyType 
Anger på vilket sätt givarfunktionens värde g( SigValue ) ska omvandlas. 
Följande konverteringstyper finns att välja mellan: 

0 -- Ingen omvandling: p ( g( SigValue ) ) = g( SigValue )
1 -- Normal omvandling via givarpolynomet: p ( g( SigValue ) ) =
SensorPolyCoef0 + SensorPolyCoef1 g( SigValue ) +
SensorPolyCoef2 g( SigValue ) 

SigValue tillhör det Ai objekt som utpekas av SigChanCon . SensorTypeCode 
anger givarfunktionen g. 
</attr>

<attr>SensorPolyCoef0 
Anger den konstanta termen i givarpolynomet; se ovan. 
</attr>

<attr>SensorPolyCoef1
Koefficienter i givarpolynomet; se ovan 
</attr>

<attr>SensorPolyCoef2 
Koefficienter i givarpolynomet; se ovan 
</attr>

<attr>SigValueUnit 
Ingenjörsenhet för SigValue , t.ex. Volt. 
</attr>
</class>

#
# Class ChanAo
#
<class> ChanAo
@Summary Konfigurering av analog utsignal
Konfigurerar analog utgångskanal oberoende av det fysiska Ao-kortets typ. 

Figuren nedan visar stegen i omvandlingen av en Ao-signal. ActualValue,
SigValue och RawValue tillhär Ao objektet.
@image orm_en1-33.gif

Om EmergBreakTrue = TRUE och EmergBreakSelect = 2 kommer utsignalen 
att baseras på FixedOutValue . Annars avgör TestOn vilket attribut utsignalen 
baseras på. 

@b Tips 

ChanAo objekt konfigureras direkt under lämpligt Ao-kortobjekt. 

Rack- och kortobjekt för olika I/O system är separat dokumenterade. 

För att skapa kortobjekt med tillhörande kanalobjekt används lämpligen 
funktionen 'Configure Card' i "Utility Window". 

@b Objektsbild
  @image orm_chanao_og.png

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på associerat Ao-signalobjekt. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Ao0 för att beteckna kortets första kanal, 
fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanAo objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet. 

Kortets kanalnummer räknas enligt korttillverkarens anvisning. 
</attr>

<attr>TestOn 
Signaltest. Anger om utsignalen ska baseras på ingenjörsvärdet ActualValue 
eller på TestValue.
</attr>

<attr>TestValue 
Signaltestvärde. Utsignalen baseras på TestValue istället för ActualValue när 
TestOn är TRUE.
</attr>

<attr>FixedOutValue 
Åtgärdsvärde. Utsignalen sätts till FixedOutValue istället för ActualValue då 
EmergBreakTrue är TRUE och EmergBreakSelect = 2. 

EmergBreak-attributen tillhör ett $Node-objekt. 
</attr>

<attr>OutPolyType 

Omvandlingstyp. Anger hur ärvärdet ska omvandlas till signalvärde. Följande 
konverteringstyper finns att välj mellan: 

0 -- Ingen omvandling: SigValue = ActualValue 

1 -- Normal omvandling enl. utsignalpolynomet:
SigValue = OutPolyCoef0 + OutPolyCoef1 · ActualValue 

ActualValue och SigValue tillhör det Ao objekt som utpekas av SigChanCon . 
</attr>

<attr>OutPolyCoef0 
Anger den konstanta termen i utsignalpolynomet; se ovan. 
</attr>

<attr>OutPolyCoef1 
Koefficienter i utsignalpolynomet; se ovan 
</attr>

<attr>OutMinLimit
Anger undre gränsen för SigValue.
</attr>

<attr>OutMaxLimit 
Anger övre gränsen för SigValue.
</attr>

<attr>SigValueUnit 
Ingenjörsenhet för SigValue, t.ex. Volt. 
</attr>
</class>

#
# Class ChanCo
#
<class> ChanCo
@Summary Konfigurering av pulsräknarkanal
Konfigurerar pulsräknarkanal oberoende av det fysiska Co-kortets typ. 

ChanCo objekt konfigureras direkt under lämpligt Co-kortobjekt. Objekt för att 
konfigurera olika I/O system finns separat dokumenterade.
För att skapa kortobjekt med tillhörande kanalobjekt används lämpligen 
funktionen 'Configure Card' i "Utility Window". 

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på Co -signalobjekt knutet till kanalobjektet. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Co0 för att beteckna kortets första kanal, 
fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanCo objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfCounters -1), där 
MaxNoOfCounters finns i kortobjektet. 

Kortets kanalnummer räknas enligt korttillverkarens anvisning. 
</attr>

<attr>ConversionOn 
Anger om signalobjektets RawValue ska uppdateras eller ej. FALSE betyder 
ingen uppdatering; TRUE innebär att RawValue kommer att uppdateras med 
perioden T0, där T0 är lika med ScanTime för det/de PlcPgm i noden som 
exekverar med den kortaste cykeltiden. 
</attr>

<attr>SensorPolyType 
Ej använd. 
</attr>

<attr>SensorPolyCoef0
Ej använd. 
</attr>
<attr>SensorPolyCoef1
Ej använd. 
</attr>
<attr>SensorPolyCoef2
Ej använd. 
</attr>

<attr>SyncRawValue 
Ej använd. 
</attr>

<attr>CounterZeroFlag 
Ej använd. 
</attr>

<attr>CounterSyncFlag 
Ej använd. 
</attr>

<attr>CounterSyncValue 
Ej använd. 
</attr>

<attr>IntegationSum 
Ej använd. 
</attr>

<attr>IntegationTime 
Ej använd. 
</attr>

<attr>LastUpdateTime 
Ej använd. 
</attr>
</class>

#
# Class ChanDi
#
<class> ChanDi
@Summary Digital ingångskanal
Digital ingångskanal

Konfigurerar digital ingångskanal oberoende av det fysiska Di-kortets typ.

Figuren nedan visar stegen i omvandlingen av en Di-signal, och inblandade
attribut. Den interna filtreringen omfattar lokala Di-signaler.
@image orm_en1-34.gif

@b Tips 

ChanDi objekt konfigureras direkt under lämpligt kortobjekt. 

Rack- och kortobjekt för olika I/O system är separat dokumenterade. 

För att skapa kortobjekt med tillhörande kanalobjekt används lämpligen 
funktionen 'Configure Card' i "Utility Window". 

@b Objeksbild
 @image orm_chandi_og.png

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på Di -signalobjekt knutet till kanalobjektet. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Di0 för att beteckna kortets första kanal, 
fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanDi objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet. 

Kortets kanalnummer räknas enligt korttillverkarens anvisningar. 
</attr>

<attr>ConversionOn 
Anger om ingenjörsvärdet ActualValue ska uppdateras eller ej. FALSE betyder 
ingen uppdatering; TRUE innebär att ActualValue ska uppdateras med 
perioden T0, där T0 är lika med ScanTime för det/de PlcPgm i noden som 
exekverar med kortaste cykeltiden. 

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela ConversionOn ett 
värde ? 0 , eftersom värdet inte kommer att beaktas i målmiljön. Istället 
datasätts ConversionOn via kortobjektets ConvMask1 ; se vidare under 
ConvMask1 i kortobjektet. 

I målmiljön kan värdet av ConversionOn ändras via Di-objektets MER-bild. 
</attr>

<attr>InvertOn 
Anger om det inlästa digitala värdet ska inverteras före lagring i ActualValue 
eller ej. FALSE betyder att det inlästa värdet inte ska inverteras; TRUE betyder 
att det ska inverteras. 

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela InvertOn ett värde ? 
0 , eftersom värdet inte kommer att beaktas i målmiljön. Istället datasätts 
InvertOn via kortobjektets InvMask1 ; se vidare under InvMask1 i 
kortobjektet. 

I målmiljön kan värdet av InvertOn ändras via Di-objektets MER-bild. 
</attr>
</class>

#
# Class ChanDo
#
<class> ChanDo
@Summary Konfigurering av digital utgångskanal
Konfigurerar digital utgångskanal oberoende det fysiska Do-kortets typ. 

Figuren nedan visar stegen i omvandlingen av en Do-signal.
ActualValue tillhör Do objektet.
@image orm_en1-35.gif

Om EmergBreakTrue = TRUE och EmergBreakSelect = 2 kommer utsignalen 
att baseras på FixedOutValue . Annars avgör TestOn vilket attribut som 
utsignalen baseras på. 

@b Tips 

ChanDo objekt konfigureras direkt under lämpligt Do-kortobjekt. 

Rack- och kortobjekt för olika I/O system är separat dokumenterade. 

För att skapa kortobjekt med tillhörande kanalobjekt används lämpligen 
funktionen 'Configure Card' i "Utility Window". 

@b Objektsbild
 @image orm_chando_og.png

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på Do -signalobjekt knutet till kanalobjektet. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Do0 för att beteckna kortets första kanal, 
fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanDo objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet. 

Kortets kanalnummer räknas enligt korttillverkarens anvisningar. 
</attr>

<attr>InvertOn 
Anger om värdet av ActualValue ska inverteras före utställning eller ej. 
FALSE betyder att värdet inte ska inverteras; TRUE betyder att det ska 
inverteras. 

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela InvertOn ett värde ? 
0, eftersom värdet inte kommer att beaktas i målmiljön. Istället datasätts 
InvertOn via kortobjektets InvMask1 ; se vidare under InvMask1 i 
kortobjektet. 

I målmiljön kan värdet av InvertOn ändras via Do-objektets MER-bild. 
</attr>

<attr>TestOn 
Signaltest. Anger om utsignalen ska baseras på ingenjörsvärdet ActualValue 
eller på TestValue.

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela TestOn ett värde ? 
0 , eftersom värdet inte kommer att beaktas i målmiljön. Istället datasätts 
TestOn via kortobjektets TestMask1 

I målmiljön kan värdet av TestOn ändras via Do-objektets MER-bild. 
</attr>

<attr>TestValue 
Utvärdet baseras på TestValue istället för ActualValue då TestOn är TRUE. 

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela TestValue ett värde 
? 0 , eftersom värdet inte kommer att beaktas i målmiljön. Istället datasätts 
TestValue via kortobjektets TestValue1 ; se vidare under TestValue1 i 
kortobjektet. 

I målmiljön kan värdet av TestValue ändras via Do-objektets MER-bild. 
</attr>

<attr>FixedOutValue 
Åtgärdsvärde. Utsignalen sätts till FixedOutValue istället för ActualValue då 
EmergBreakTrue är TRUE och EmergBreakSelect = 2. 

EmergBreak -attributen tillhör ett $Node -objekt. 

Idag är det i utvecklingsmiljön inte meningsfullt att tilldela FixedOutValue ett 
värde ? 0 , eftersom värdet inte kommer att beaktas i målmiljön. Istället 
datasätts FixedOutValue via kortobjektets FixedOutValue1 ; se vidare under 
FixedOutValue1 i kortobjektet. 

I målmiljön kan värdet av FixedOutValue ändras via Do-objektets MER-bild. 
</attr>

</class>

#
# Class ChanIi
#
<class> ChanIi
@Summary Konfiguring av heltals-ingångskanal.
Konfiguring av heltals-ingångskanal.

Heltals-värden hämtas vanligtvis från bus I/O-system.
Heltals-värdet lagras som en 32-bitars signed integer.

@b Tips 
ChanIi objekt konfigureras under lämpligt Ii kort eller modul objekt. 

@b Objeksbild
 @image orm_chanii_og.png

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på Ii-signalobjekt knutet till kanalobjektet. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Ii0 för att beteckna kortets första
kanal, fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanAi objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet.
Kortets kanalnummer räknas enligt korttillverkarens anvisningar. 
</attr>

<attr>ConversionOn 
Anger om signalobjektets ActualValue ska uppdateras eller ej. FALSE betyder 
ingen uppdatering; TRUE innebär att ActualValue kommer att uppdateras med 
cykeltiden ScanInterval. 
</attr>

#
# Class ChanIo
#
<class> ChanIo
@Summary Konfigurering av heltals-utsignal
Konfigurerar heltals-utgångskanal. 

Om EmergBreakTrue = TRUE och EmergBreakSelect = 2 kommer utsignalen 
att baseras på FixedOutValue . Annars avgör TestOn vilket attribut utsignalen 
baseras på. 

@b Tips 
ChanIo objekt konfigureras direkt under lämpligt Io kort eller modul objekt. 
Rack- och kortobjekt för olika I/O system är separat dokumenterade. 

@b Objeksbild
 @image orm_chanio_og.png

<attr>Description 
Valfri text för att beskriva kanalen eller dess användning. 
</attr>

<attr>SigChanCon 
Namn på associerat Io-signalobjekt. 
</attr>

<attr>Identity 
Kanalens identitet. Valfri text, t.ex. Io0 för att beteckna kortets första 
kanal, fysisk kabelmärkning etc. 
</attr>

<attr>Number 
Attributet används för att knyta ChanIo objektet till en bestämd kanal på 
kortet. Kortets fysiska kanaler numreras 0,1, ... , ( MaxNoOfChannels -1), där 
MaxNoOfChannels finns i kortobjektet. 

Kortets kanalnummer räknas enligt korttillverkarens anvisning. 
</attr>

<attr>TestOn 
Signaltest. Anger om utsignalen ska baseras på ingenjörsvärdet ActualValue 
eller på TestValue.
</attr>

<attr>TestValue 
Signaltestvärde. Utsignalen baseras på TestValue istället för ActualValue när 
TestOn är TRUE.
</attr>

<attr>FixedOutValue 
Åtgärdsvärde. Utsignalen sätts till FixedOutValue istället för ActualValue då 
EmergBreakTrue är TRUE och EmergBreakSelect = 2. 

EmergBreak-attributen tillhör ett $Node-objekt. 
</attr>

<attr>OutPolyType 

Omvandlingstyp. Anger hur ärvärdet ska omvandlas till signalvärde. Följande 
konverteringstyper finns att välj mellan: 

0 -- Ingen omvandling: SigValue = ActualValue 

1 -- Normal omvandling enl. utsignalpolynomet:
SigValue = OutPolyCoef0 + OutPolyCoef1 · ActualValue 

ActualValue och SigValue tillhör det Ao objekt som utpekas av SigChanCon . 
</attr>

<attr>OutPolyCoef0 
Anger den konstanta termen i utsignalpolynomet; se ovan. 
</attr>

<attr>OutPolyCoef1 
Koefficienter i utsignalpolynomet; se ovan 
</attr>

<attr>OutMinLimit
Anger undre gränsen för SigValue.
</attr>

<attr>OutMaxLimit 
Anger övre gränsen för SigValue.
</attr>

<attr>SigValueUnit 
Ingenjörsenhet för SigValue, t.ex. Volt. 
</attr>
</class>

#
# Class ClassVolumeLoad
#
<class> ClassVolumeLoad
@Summary Laddning av klassvolym
ClassVolumeLoad objektet anger att en klass-volym ska laddas i en Proview
nod när ProviewR startas på noden.
Om en monterad volym innehåller klasser som normalt inte laddas i noden,
kommer ClassVolumeLoad objektet att göra en laddning av klassvolymen utförs.

Objektet konfigureras i projekt-volymen som barn till ett NodeConfig objekt.

Namnet på objektet anger volymen som ska laddas.

@b Se även
<attr>Description
Beskrivning av objektet.
</attr>
</class>
#
# Class Co
#
<class> Co
@Summary Pulsräknaringång
Pulsräknaringång (Counter).

Konfigurerar pulsräknarsignal i 'Plant Configuration'.
Inläsning av av råvärde för pulsräknarsignaler anslutna till lokalt I/O-system 
hanteras av PLC-jobbet och konverteringen till ingenjörsvärde av IO-jobbet. 


@b Tips 

Placera i utvecklingsmiljön objektet under $ PlantHier objekt så att det 
kommer att tillhöra samma målnod som dess associerade kanalobjekt. 

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ActualValue 
Ej använd. 
</attr>

<attr>Unit 
Ej använd. 
</attr>

<attr>NoOfDecimals 
Antal decimaler vid presentation av ActualValue . 
</attr>

<attr>PresMinLimit, PresMaxLimit 
Skalområdets undre resp övre gräns vid presentation av AbsValue . Används 
t.ex. i stapeldiagrammet i Co-objektens objektbild 
</attr>

<attr>ValueIndex 
Index i vektorn hos de Co_Value_Base - och Ca_Value_Base -objekt som 
används för bas- resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>RawValue 
Pekare till hårdvaruräknarens registervärde på pulsräknarkortet. 
</attr>

<attr>AbsValue 
Pekar till absolutvärdet. 

AbsValue t = AbsValue t-1 + ( RawValue t - RawValue t-1 ) 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Comph
#
<class> Comph
@Summary Jämför analog storhet mot övre gräns. 
Jämför analog storhet mot övre gräns (COMPare High). 
@image orm_en1-36.gif

Både insignalen och gränsen kan antingen vara konstanter, definierade med 
hjälp av Objekts Editorn, eller vanliga analoga signaler. 
@image orm_en1-37.gif

Utsignalen är TRUE när insignalen är större än gränsvärdet, dvs Lim . 
Hysteresen beaktas då utsignalen åter ska bli FALSE. Utsignalen blir FALSE 
så snart insignalen blir mindre än eller lika med gränsvärdet minus hysteresen. 

@b Se även 

<attr>Lim 
Anger det aktuella övre gränsvärdet. Värdet kan vara dynamiskt eller statiskt. 
</attr>

<attr>In 
Anger värdet som ska jämföras med gränsvärdet Lim . 
</attr>

<attr>High 
Flaggan anger om In överstiger gränsvärdet eller ej FALSE betyder att In inte 
överstiger gränsen; TRUE innebär att In överstiger gränsen eller har över stigit 
gränsen utan att ha nått en nivå, enligt hysteresen, där flaggan ska tas ner. 
</attr>

<attr>Hysteres 
Anger värdet på hysteresen. Ett negativt värde är ej tillåtet. 
</attr>

<attr>AccLim 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Lim . Det är inte meningsfullt att manuellt ändra Lim -värdet om attributet 
samtidigt uppdateras av extern signal. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinLim
Minsta tillåtna värde vid operatörsändring av Lim . 
</attr>

<attr>MaxLim 
Största tillåtna värde vid operatörsändring av Lim . 
</attr>

<attr>AccHys 
Ej implementerad funktion. Anger operatörens behörighet att ändra Hysteres . 
</attr>

<attr>MinHys
Minsta ( = 0) tillåtna värde vid operatörsändring av Hysteres . 
</attr>

<attr>MaxHys 
Största tillåtna värde vid operatörsändring av Hysteres . 
</attr>
</class>

#
# Class Compl
#
<class> Compl
@Summary Jämför analog storhet mot undre gräns
Jämför analog storhet mot undre gräns (COMPare Low). 
@image orm_en1-38.gif 

Både insignalen och gränsen kan antingen vara konstanter, definierade med 
hjälp av Objekts Editorn, eller vanliga analoga signaler. 
@image orm_en1-39.gif

Utsignalen är TRUE när insignalen är mindre än gränsvärdet, dvs Lim . 
Hysteresen beaktas då utsignalen åter ska bli FALSE. Utsignalen blir FALSE 
så snart insignalen blir större än eller lika med gränsvärdet plus hysteresen. 

@b Se även 

<attr>In 
Anger värdet som ska jämföras med gränsvärdet Lim . 
</attr>

<attr>Lim 
Anger det aktuella övre gränsvärdet. Värdet kan vara dynamiskt eller statiskt. 
</attr>

<attr>Low 
Flaggan anger om In är mindre än gränsvärdet eller ej. FALSE betyder att In är 
större än gränsvärdet; TRUE betyder att In är mindre än gränsvärdet eller har 
understigit gränsen utan att ha nått en nivå, enligt hysteresen, där flaggan ska 
tas ner. 
</attr>

<attr>Hysteres 
Anger värdet på hysteresen. Ett negativt värde är ej tillåtet. 
</attr>

<attr>AccLim 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Lim . Det är inte meningsfullt att manuellt ändra Lim -värdet om attributet 
samtidigt uppdateras av extern signal. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinLim
Minsta tillåtna värde vid operatörsändring av Lim . 
</attr>

<attr>MaxLim 
Största tillåtna värde vid operatörsändring av Lim . 
</attr>

<attr>AccHys 
Ej implementerad funktion. Anger operatörens behörighet att ändra Hysteres. 
</attr>

<attr>MinHys
Minsta ( = 0) tillåtna värde vid operatörsändring av Hysteres . 
</attr>

<attr>MaxHys 
Största tillåtna värde vid operatörsändring av Hysteres . 
</attr>

</class>

#
# Class Count
#
<class> Count
@Summary Pulsräknare
Pulsräknare. 
@image orm_count_fo.gif

Räknaren kan räknas upp, ner, nollställas eller ställas på fördefinierat värde.
Räknaren triggar på positiv flank. 

@b Tips 

Objektet kan användas som ett 'pulsräknarkort i mjukvara' om det kommer 
högst en puls varannan programcykel (flankdetektering). Finns Count - 
objektet i ett PlcPgm, som exekverar med den minsta tillåtna cykeltiden ( = 20 
millisekunder), kan pulser upptill 25 Hz detekteras. 

<attr>CountUp 
Positiv flank räknar upp Accum med 1. 
</attr>

<attr>CountDown 
Positiv flank räknar ner Accum med 1. 
</attr>

<attr>Clear 
Positiv flank nollställer Accum. 
</attr>

<attr>Init 
Positiv flank sätter Accum = Preset. 
</attr>

<attr>Accum 
Anger aktuellt räknarvärde ( i form av heltal). Accum kan användas som 
RawValue till PiPos objektet.

Talområdet är -2 147 483 648 till 2 147 483 647. Det betyder att det är möjligt 
att ackumulera pulser med frekvensen 25 Hz kontinuerligt under 994 dagar 
utan risk för 'overflow', om Accum = 0 vid start. 
</attr>

<attr>Pos 
Anger om Accum > 0 eller ej. FALSE betyder att Accum = 0 och TRUE 
innebär att Accum > 0. 
</attr>

<attr>Zero 
Anger om Accum = 0 eller ej. FALSE betyder att Accum ? 0 och TRUE 
innebär att Accum = 0. 
</attr>

<attr>Neg
Anger om Accum < 0 eller ej. FALSE betyder att Accum = 0 och TRUE 
innebär att Accum < 0. 
</attr>

<attr>Equal 
Anger om Accum = Preset eller ej. FALSE betyder att Accum %ne; Preset och 
TRUE innebär att Accum = Preset . 
</attr>

<attr>Preset 
Anger ett fördefinierat värde. 
</attr>

<attr>AccPre
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Preset. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccAccum 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Accum . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>
</class>

#
# Class CStoAi
#
<class> CStoAi
@Summary Villkorlig lagring i Ai-signal.
Villkorlig lagring i Ai-signal (Conditional STOrage Analog Input). 
@image orm_cstoai_fo.gif  

Villkorlig lagring av analogt värde på angiven lokal Ai-signal (= Ai objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara samtidigt med detta objekt. 

@b Tips 

Ai-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp -objektet, steg 1  4.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>AiObject 
Anger namnet på det Ai objekt där lagringen ska göras. Ai-signalens sista 
namnled visas i CStoAi-symbolens nedre del. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>AiObjectSegments 
Anger hur många segment av Ai -objektets namn som ska visas i CStoAi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ai -objektet kopplade kanalobjektet ska visas i 
CStoAi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i CStoAi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class CStoAo
#
<class> CStoAo
@Summary Villkorlig lagring i Ao-signal
Villkorlig lagring i Ao-signal (Conditional STOrage Analog Output). 
@image orm_cstoao_fo.gif

Villkorlig lagring av analogt värde på angiven lokal Ao-signal (= Ao objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 
   

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips 

Ao-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp -objektet, steg 1  4.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>AoObject 
Anger namnet på det Ao objekt där lagringen ska göras. Ao-signalens sista 
namnled visas i CStoAo-symbolens nedre del. 
</attr>

<attr>AoObjectSegments 
Anger hur många segment av Ao -objektets namn som ska visas i CStoAo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ao -objektet kopplade kanalobjektet ska visas i 
CStoAo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i CStoAo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 
</attr>
</class>

#
# Class CStoAp
#
<class> CStoAp
@Summary Villkorlig lagring i analogt attribut
Villkorlig lagring i analogt attribut (Conditional STOrage Analog Parameter). 
@image orm_cstoap_fo.gif

Villkorlig lagring av analogt värde på analog storhet (= parameter, in- eller 
utsignal) i godtyckligt lokalt objekt. Lokal betyder att målobjektet tillhör 
samma nod som CStoAp objektet. Villkorlig lagring syftar på con-ingången 
som förväntas vara kopplad. 

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 
Idag kan emellertid den grafiska symbolen inte visa en inverterad con- ingång. 
Därför rekommenderas, då så erfordras, en explicit användning av Inv -objekt. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips 

Namnet på den storhet som ska lagras anges med fördel på sätt som visas under 
GetAp -objektet, steg 1  5.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>Object 
Anger namnet på det objekt där lagringen ska ske. Objektets sista namnled 
visas i CStoAp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
CStoAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Anger namnet på det attribut, i det objekt som Object pekar ut, där lagringen 
ska ske. Attributets namn visas i CStoAp-symbolens undre högra del. 
</attr>

</class>

#
# Class CStoAtoIp
#
<class> CStoAtoIp
@Summary Villkorlig lagring i heltalsattribut
Villkorlig lagring av analogt värde i heltalsattribut. 
@image orm_cstoatoip_fo.gif

Villkorlig lagring av analogt värde (parameter, insignal eller utsignal av typen 
pwr_tFloat32) i angivet lokalt objekts 32-, 16- eller 8-bitars heltalsparameter.
Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 
Insignalens decimaler trunkeras.
Sista ledet i instansens namn respektive parameterns namn visas i CStoIp-
symbolens högra del.
Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 
@b Tips 

Namnet på den storhet som ska lagras anges med fördel på sätt som visas under 
GetAp-objektet.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>Object 
Anger namnet på det objekt där lagringen ska ske. Objektets sista namnled 
visas i CStoIp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoIp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Anger namnet på det attribut, i det objekt som Object pekar ut, där lagringen 
ska ske. Attributets namn visas i CStoAp-symbolens undre högra del. 
</attr>
</class>

#
# Class CStoAv
#
<class> CStoAv
@Summary Villkorlig lagring i Av-signal
Villkorlig lagring i Av-signal (Conditional STOrage Analog Value). 
@image orm_cstoav_fo.gif

Villkorlig lagring av analogt värde på angiven lokal Av-signal (= Av objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips

Av-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp -objektet, steg 1  4.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>AvObject 
Anger namnet på det Av objekt där lagringen ska göras. Av-signalens sista 
namnled visas i CStoAv-symbolens nedre del. 
</attr>

<attr>AvObjectSegments 
Anger hur många segment av Av-objektets namn som ska visas i CStoAv- 
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class CStoIi
#
<class> CStoIi
@Summary Villkorlig lagring i Oi-signal.
Villkorlig lagring i Ii-signal (Conditional STOrage Integer Input). 
@image orm_cstoii_fo.gif  

Villkorlig lagring av heltals-värde på angiven lokal Ii-signal (= Ii objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i IOHandler objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara samtidigt med detta objekt. 

@b Tips 

Ii-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp-objektet.

<attr>In 
Ingången kopplas till integer signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>IiObject 
Anger namnet på det Ii objekt där lagringen ska göras. Ii-signalens sista 
namnled visas i CStoIi-symbolens nedre del. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>IiObjectSegments 
Anger hur många segment av Ii-objektets namn som ska visas i CStoIi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ii-objektet kopplade kanalobjektet ska visas i 
CStoAi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i CStoIi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class CStoIo
#
<class> CStoIo
@Summary Villkorlig lagring i Io-signal
Villkorlig lagring i Io-signal (Conditional STOrage Integer Output). 
@image orm_cstoio_fo.gif

Villkorlig lagring av heltals-värde på angiven lokal Io-signal (= Io objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 
   

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips 

Io-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp-objektet.

<attr>In 
Ingången kopplas till heltals-signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>IoObject 
Anger namnet på det Io objekt där lagringen ska göras. Io-signalens sista 
namnled visas i CStoIo-symbolens nedre del. 
</attr>

<attr>IoObjectSegments 
Anger hur många segment av Io-objektets namn som ska visas i CStoIo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Io-objektet kopplade kanalobjektet ska visas i 
CStoIo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i CStoIo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 
</attr>
</class>

#
# Class CStoIp
#
<class> CStoIp
@Summary Villkorlig lagring i heltals-attribut
Villkorlig lagring i heltals-attribut (Conditional STOrage Integer Parameter). 
@image orm_cstoip_fo.gif

Villkorlig lagring av heltals-värde på integer storhet (= parameter, in- eller 
utsignal) i godtyckligt lokalt objekt. Lokal betyder att målobjektet tillhör 
samma nod som CStoIp objektet. Villkorlig lagring syftar på con-ingången 
som förväntas vara kopplad. 

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 
Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips 

Namnet på den storhet som ska lagras anges med fördel på sätt som visas under 
GetAp-objektet.

<attr>In 
Ingången kopplas till heltals-signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>Object 
Anger namnet på det attribut där lagringen ska ske. Objektets sista namnled 
med attribut visas i CStoIp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
CStoAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class CStoIv
#
<class> CStoIv
@Summary Villkorlig lagring i Iv-signal
Villkorlig lagring i Iv-signal (Conditional STOrage Integer Value). 
@image orm_cstoiv_fo.gif

Villkorlig lagring av heltals-värde på angiven lokal Iv-signal (= Iv objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Tips

Av-signalens fullständiga namn anges; lämpligen på sätt som anges under 
GetAp -objektet.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>IvObject 
Anger namnet på det Iv objekt där lagringen ska göras. Iv-signalens sista 
namnled visas i CStoIv-symbolens nedre del. 
</attr>

<attr>IvObjectSegments 
Anger hur många segment av Iv-objektets namn som ska visas i CStoIv- 
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class CStoNumSp
#
<class> CStoNumSp
@Summary Villkorlig lagring av ett antal tecken i ett sträng-attribut. 
Villkorlig lagring av ett antal tecken i ett sträng-attribut. 
@image orm_cstonumsp_fo.gif

Villkorlig lagring av sträng-värde på i godtyckligt lokalt objekt. 
Lokal betyder att målobjektet tillhör samma nod som CStoNumSå objektet. 
Villkorlig lagring syftar på con-ingången som förväntas vara kopplad. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Exempel
Det är möjligt att använda CStoNumSp för att ändra på DetectText i ASup och
DSup objekt.

<attr>In 
Ingången kopplas till sträng-attribut eller lämnas öppen. I senare fallet 
kommer värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>Object 
Anger namnet på det attribut där lagringen ska ske. Objektets sista namnled 
med attribut visas i CStoNumSp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
CStoNumSp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>NumberOfChar
Anger antalet tecken att kopiera.
Om strängen är kortare än NumberOfChar kopieras strängen och NULL-termineringen.
Om längden är större eller lika med NumberOfChar, kopieras inte NULL-
termineringen. I detta fall ska den föregående strängen i mål attributet
vara längre än NumberOfChar, annars förloras NULL-termineringen och 
resultatet är odefinierat.
</attr>
</class>

#
# Class CStoSp
#
<class> CStoSp
@Summary Villkorlig lagring av ett sträng-attribut. 
Villkorlig lagring av ett sträng-attribut. 
@image orm_cstosp_fo.gif

Villkorlig lagring av sträng-värde på i godtyckligt lokalt objekt. 
Lokal betyder att målobjektet tillhör samma nod som CStoNumSp objektet. 
Villkorlig lagring syftar på con-ingången som förväntas vara kopplad. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

@b Exempel
Det är möjligt att använda CStoNumSp för att ändra på DetectText i ASup och
DSup objekt.

<attr>In 
Ingången kopplas till sträng-attribut eller lämnas öppen. I senare fallet 
kommer värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>Object 
Anger namnet på det attribut där lagringen ska ske. Objektets sista namnled 
med attribut visas i CStoSp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
CStoSp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class CStoSv
#
<class> CStoSv
@Summary Villkorlig lagring i Sv-signal
Villkorlig lagring i Sv-signal (Conditional STOrage String Value). 
@image orm_cstosv_fo.gif

Villkorlig lagring av sträng-värde på angiven lokal Sv-signal (= Sv objekt). 

Villkorlig lagring syftar på con-ingången, som förväntas vara kopplad. 

Villkorsingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

<attr>In 
Ingången kopplas till en sträng-signal eller lämnas öppen. I senare fallet 
kommer värdet av In att vara föremål för lagring. 
</attr>

<attr>Cond 
Anger om lagring ska göras eller ej. FALSE betyder ingen lagring och TRUE 
innebär lagring. 
</attr>

<attr>SvObject 
Anger namnet på det Sv objekt där lagringen ska göras.
</attr>

<attr>SvObjectSegments 
Anger hur många segment av Sv-objektets namn som ska visas i CStoSv- 
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class CSub
#
<class> CSub
@Summary Villkorlig exekvering av objekt placerade i underfönster. 
Villkorlig exekvering av objekt placerade i underfönster. 
@image orm_csub_fo.gif

Koden i underfönstret, 
exekverar om och endast om objektets logiska insignal är TRUE; jfr vanliga 
Order-objekt där exekveringen sker så länge ingången är TRUE och därefter 
ytterligare en gång , dvs en Order-instans exekveras totalt minst två gånger. 
placeras under ett WindowPlc objekt (se WindowPlc) under CSub-objektet. 
Ingången kan med hjälp av Objekts Editorn fås att invertera insignalen. 

Underfönstret får innehålla valfria PLC-objekt. 

CSub = C onditional Sub -window. 

<attr>In 
Anger om underfönstret ska exekveras eller ej. FALSE betyder ingen 
exekvering och TRUE innebär exekvering av objekten i underfönstret. 
</attr>
</class>

#
# Class Curve
#
<class> Curve
@Summary Interpolera i tabell. 
Interpolera i tabell. 
@image orm_curve_fo.gif

Själva tabellen, funktionskurvan, beskrivs i en Table -instans; ( se Table). 
@image orm_en1-50.gif
 
Om insignalen ligger utanför tabellområdet väljs första/sista tabellvärdet som 
funktionsvärde.

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet används 
In som invärde för bestämning funktionsvärdet. 
</attr>

<attr>Tab 
Ingången måste anslutas till Table -instans; vanlig förbindning. 
</attr>

<attr>ActVal 
Interpolerat tabellvärde i enlighet med insignalen. 
</attr>
</class>

#
# Class CycleSup
#
<class> CycleSup
@Summary Övervakning av plc-trådar. 
Objektet används för övervakning av plc-trådar. En max tid anges, och 
likaså en åtgärd som ska utföras när en fördröjning inträffar. Flera
objekt med olika åtgärder kan användas för samma plc-tråd.

Fördröjningen detekteras av alla trådar och av rt_emon.
Om tråden själv blir hängande, kan alltid någon annan tråd eller rt_emon
detektera fördröjningen. Detta är naturligtvis beroende på vilka prioriteter
trådar och processer går på.
 
<attr>MaxDelay
Maximal fördröjning (s). När fördröjningen är lägre än MaxDelay, utförs
specificerad åtgärd.
</attr>

<attr>DelayLimit
Samma värde som 'MaxDelay' representerad som delta-tid.
</attr>

<attr>DelayAction
Åtgärd som ska utföras vid fördröjning. 1 = Larm, 2 = Stall.
</attr>

<attr>DelayCount
Antal fördröjningar som har inträffat.
</attr>

<attr>DetectCount
Antal cykler CycleSup-objektet har övervakats av rt_emon.
</attr>

<attr>CycleCount
Antal cykler för plc-tråden.
</attr>

<attr>NextLimit
Nästa tidsgräns för att en fördröjning ska ha inträffat.
</attr>

<attr>LastDelay
Tid när senaste fördröjning inträffade.
</attr>

<attr>DelayedTime
Tid när den första fördröjningen inträffade.
</attr>

<attr>Delayed
Fördröjning upptäckt av någon plc-tråd. Återställs av rt_emon.
</attr>

<attr>DelayNoted
rt_emon har detekterat en fördröjning. Återställs när tråden kommer i tid igen.
</attr>

<attr>TimelyTime
Tid när tråden började att komma i tid sist.
</attr>

<attr>Control
Specificerar om övervakningen är till eller från.
</attr>
<attr>Action 
Anger den övervakade storhetens tillstånd. FALSE innebär normaltillstånd och 
TRUE larmtillstånd. 

Utsignalen kan användas t.ex. för att aktivera åtgärdspaket vid larmtillstånd. 
</attr>

<attr>Acked 
Anger om ett larmtillstånd kvitterats eller ej. FALSE betyder att okvitterat larm 
finns. Utsignalen sätts initialt TRUE då ASup-objektet skapas i rtdb och när 
larmtillstånd kvitteras. 
</attr>

<attr>Blocked 
Anger om övervakningsobjektet är blockerat eller ej. Med blockering avses 
övervakningsobjektets förmåga att initiera meddelanden. Blockering påverkar 
inte objektets act-utgång. 

FALSE innebär att ASup-objektet inte är blockerat och TRUE att det är 
blockerat. Vid blockering av övervakningsobjekt som befinner sig i larmläge 
tas existerande meddelanden för det aktuella objektet bort. 

Blockering /deblockering görs med hjälp av larmblockeringsformuläret i 
Operator Window. 
</attr>

<attr>Description 
Fri text för att beskriva objektet. Används i bilden 'Larmgränser'. 
</attr>

<attr>DetectOn 
Anger om den åtgärd som vid larmtillstånd består i att skicka DetectText ska 
blockeras eller ej. FALSE betyder att inget meddelande skickas vid 
larmtillstånd; TRUE betyder att meddelandet DetectText skickas vid 
larmtillstånd. 
</attr>

<attr>DetectText 
Fri text som ingår i meddelandet vid larmtillstånd. Texten skrivs ut vid 
larmtillstånd om DetectOn är TRUE. 
</attr>

<attr>ShowDetectText 
Anger om DetectText ska visas i ASup-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. 
</attr>

<attr>ReturnText 
Fri text som ingår i meddelandet vid återgång till normaltillstånd. Meddelandet 
skrivs i händelselistan. 
</attr>

<attr>EventType 
Anger vilken typ av meddelande (= DetectText ) som ska skickas vid 
larmtillstånd.
64 -- ALARM Meddelandet kräver kvittering och skickas till
larmfönstret, larmlistan och händelselistan.
32 -- INFO Om meddelandet kräver kvittering skickas det till
larmfönstrets informationsdel och händelselistan annars
enbart till händelselistan. 
</attr>

<attr>EventPriority 
Prioritet. Gäller enbart ALARM-meddelanden. 

67 = A-larm; högst prioritet. (= 43Hex)
66 = B-larm (= 42Hex)
65 = C-larm (= 41Hex)
64 = D-larm ; lägst prioritet. (= 40Hex) 
</attr>

<attr>EventFlags 
Bitmask. En kombination av flaggor används också för att närmare precisera 
meddelandet. Följande värden är möjliga: 

1 -- Om denna flagga finns ska ett returmeddelande med ReturnText skickas 
till utenheternas händelselistor, annars inte.
2 -- Om denna flagga finns ska ett kvittensmeddelande skickas till
utenheternas händelselistor, annars inte.
4 -- Om den enskilda utenheten har pip-funktion ska den aktiveras då
meddelandet tas emot.
8 -- Meddelandet ska tas emot av varje utenhet oberoende av vad det står i 
urvalslistorna.
16 -- Om meddelandet är av typen INFO placeras det förutom i
händelselistan också i larmfönstrets info-del. Kvittens- resp
returmeddelande som för t.ex. A-larm. 
</attr>

<attr>Attribute 
Anger komplett namn på övervakat attribut. Om ingången IN lämnas öppen ska 
vid konfigureringen Attribute fyllas i. Knyts ingången till annat objekt ifylls 
attributet vid kompileringen av ProviewR. 
</attr>

<attr>AlarmStatus 
Aktuellt statusvärde. Bitmask bestående av 16 bitar där de 8 minst signifikanta 
bitarna anger tillståndet och de 8 mest signifikanta prioriteten . 

Tillståndet är en kombination av följande: 

0 -- Normaltillstånd
1 -- Larmtillstånd
2 -- Okvitterat larmtillstånd 

Prioriteten är en av prioriteterna EventPriority . 

Följande värde på AlarmStatus kan förekomma: 

EventPrority + 1 => Prioritet + larmtillstånd
EventPrority + 3 => Prioritet + okvitterat larm och rådande larmtillstånd 
EventPrority + 2 => Prioritet + okvitterat larm och normaltillstånd 
</attr>

<attr>AlarmCheck 
Används internt vid händelse detektering. 
</attr>

<attr>DetectCheck 
Anger om larmtillstånd ska detekteras eller ej. FALSE betyder att larmtillstånd 
inte ska detekteras; TRUE att larmtillstånd ska detekteras. 
</attr>

<attr>DetectSend 
Anger om meddelande sänts till utenheter (eller mer precis till meddelande 
hanteraren) eller ej; TRUE betyder att meddelande har sänts. 
</attr>

<attr>DetectTime 
Datum och klockslag för senast detekterade larmtillstånd. 
</attr>

<attr>ReturnCheck 
Anger om objektet återgått till normaltillstånd eller ej. TRUE betyder att 
objektet återgått till normaltillstånd. 
</attr>

<attr>ReturnSend 
Anger om returmeddelande med ReturnText sänts till utenheterna eller ej. 
TRUE betyder att returmeddelande sänts. 
</attr>

<attr>ReturnTime 
Datum och klockslag för senast detekterade retur till normaltillstånd. 
</attr>

<attr>AckTime 
Datum och klockslag för senast detekterade kvittens. 
</attr>

<attr>AckOutunit 
Identitet på utenhet (operatör) varifrån kvittering skett. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timerkön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( ? tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när, efter det att larmtillstånd inträtt, 
meddelandet ska skickas. Om larmtillståndet försvinner innan tiden gått ut 
genereras inget meddelande. 

TimerTime = PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
</class>

#
# Class DArithm
#
<class> DArithm
@Summary Beräknar värdet av egendefinierat logiskt uttryck. 
Beräknar värdet av egendefinierat logiskt uttryck. 
@image orm_darithm_fo.gif

Friprogrammerat logiskt uttryck i C-språket. 

Uttrycket editeras med hjälp av Objekts Editorn under Expression . Värdet av 
Expression visas i instansen. Uttrycket, som saknar '=', översätts vid 
kompileringen. 

Upp till 8 analoga ( A1, ..., A8) och 8 digitala (d1, ...., d8) insignaler. 

Digitala ingångar kan med hjälp av Objekts Editorn fås att invertera insignalen. 
Invertering kan också åstadkommas med den logiska negationsoperatorn '!'. 

NB! Då en aritmetisk operator följs av ett 'graph name', t.ex. A1, ska operator 
och 'graph name' åtskiljas med blanktecken eller vänster parentes. 

En ingång, använd som en konstant storhet, görs lämpligen osynlig med 'Used' 
faciliteten. Om konstanten inte behöver ändra värde skrivs värdet med fördel 
direkt i Expression , dvs. utan användning av någon ingång. Kan konstanten 
komma att ändras är det lämpligt att använda en Av eller Dv , eftersom den då 
blir tillgänglig via Av/Dv-objektens MER-bild. 

Ej ansluten ingång ger kompileringsfel. 

@h2 Exempel 

@b Kombinatoriskt nät.
I exemplet nedan avser '&&'-operatorn logiskt AND, '||'-operatorn logiskt OR 
och '!' innebär negation.

Expression : (d1 && d2 || !d3) && d4 
 
@image orm_en1-52.gif
<==>
@image orm_en1-53.gif


@b Högst en av d1 - d5 är TRUE eller d6

Expression : ((d1 + d2 + d3 + d4 + d5) < 2) || d6 

@b Jämförelse.

Expression : (A1 + 3.5 * A2) < A3 

@b Se även 

<attr>DIn1
Digital signal som kan ingå i Expression. Om d1 är ansluten avses en 
yttre signal, annars det interna attributet DIn1. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn2
Digital signal som kan ingå i Expression. Om d2 är ansluten avses en 
yttre signal, annars det interna attributet DIn2. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn3
Digital signal som kan ingå i Expression. Om d3 är ansluten avses en 
yttre signal, annars det interna attributet DIn3. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn4
Digital signal som kan ingå i Expression. Om d4 är ansluten avses en 
yttre signal, annars det interna attributet DIn4. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn5
Digital signal som kan ingå i Expression. Om d5 är ansluten avses en 
yttre signal, annars det interna attributet DIn5. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn6
Digital signal som kan ingå i Expression. Om d6 är ansluten avses en 
yttre signal, annars det interna attributet DIn6. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn7
Digital signal som kan ingå i Expression. Om d7 är ansluten avses en 
yttre signal, annars det interna attributet DIn7. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>DIn8
Digital signal som kan ingå i Expression. Om d8 är ansluten avses en 
yttre signal, annars det interna attributet DIn8. Ändringar av DIn1 , ..., DIn8 
gjorda i målmiljön beaktas. 
</attr>

<attr>AIn1
Analog signal som kan ingå i Expression. Om A1 är ansluten avses en 
yttre signal, annars det interna attributet AIn1. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn2
Analog signal som kan ingå i Expression. Om A2 är ansluten avses en 
yttre signal, annars det interna attributet AIn2. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn3
Analog signal som kan ingå i Expression. Om A3 är ansluten avses en 
yttre signal, annars det interna attributet AIn3. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn4
Analog signal som kan ingå i Expression. Om A4 är ansluten avses en 
yttre signal, annars det interna attributet AIn4. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn5
Analog signal som kan ingå i Expression. Om A5 är ansluten avses en 
yttre signal, annars det interna attributet AIn5. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn6
Analog signal som kan ingå i Expression. Om A6 är ansluten avses en 
yttre signal, annars det interna attributet AIn6. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn7
Analog signal som kan ingå i Expression. Om A7 är ansluten avses en 
yttre signal, annars det interna attributet AIn7. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>
<attr>AIn8
Analog signal som kan ingå i Expression. Om A8 är ansluten avses en 
yttre signal, annars det interna attributet AIn8. Ändringar av AIn1 , ..., AIn8 
gjorda i målmiljön beaktas. 
</attr>

<attr>Status 
Resultatet av Expression efter senaste beräkning. 
</attr>

<attr>Expression 
Logiskt uttryck i C-språket. Uttrycket anges med hjälp av Objekts Editorn och 
kan inte ändras i målmiljön. 
</attr>
</class>

#
# Class Di
#
<class> Di
@Summary Digital ingång. 
Digital ingång. 

Konfigurerar digital insignal i 'Plant Configuration'. 

Den inbyggda filterfunktionen, där valet av filter styrs av FilterType , avser 
lokala Di-signaler, dvs icke-lokala Di-signaler berörs ej. 

Filterfunktionen innebär t.ex. att konstruktören utan extra konfigurering direkt i 
objektet kan ange om den samplade signalen måste vara satt viss tid för att vara 
giltig eller att det ska gå viss minsta tid från det att den samplade signalen 
senast blivit FALSE tills att den åter tillåts bli TRUE. 

@b Tips 

Placera objektet i utvecklingsmiljön under $PlantHier objekt så att det kommer 
att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objektsbild
 @image orm_di_og.png

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de DiArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). ConversionOn och 
InvertOn i kanalobjektet ChanDi, anger dels om det inlästa värdet ska lagras, 
dels om invertering före lagring ska ske. 
</attr>

<attr>SigValue 
Ej använd. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>

<attr>FilterAttribute
Definierar filterkonstanter i vald filterfunktion, se FilterType . Konstanterna 
anges i sekunder. 

För FilterType = 1 anger FilterAttribute[0] tillslagsfördröjning och 
FilterAttribute[1] frånslagsfördröjning. 
</attr>

<attr>FilterType 
Den interna filterfunktionen avser enbart lokala Di-signaler. 

Anger den valda filtertypen. Följande filtertyper finns: 

0 -- Ingen filtrering

1 -- Till- och frånslagsfördröjning.

Tillslag är endast aktuell då filtrets `output' är FALSE. Tillslags-
fördröjningen räknas då från senaste positiva flank på `input'. Då
tiden FilterAttribute[0] löpt ut sätts `output' = `input'.
 
Frånslag är aktuell då filtrets `output' är TRUE. Frånslags-
fördröjningen räknas från senaste negativa flank på `input'. Då
tiden FilterAttribute[1] löpt ut sätts `output' = `input'.

2 - 99 Reserv
> 99 -- Användarspecifik filtrering.
</attr>
</class>

#
# Class DiBCD
#
<class> DiBCD
@Summary Konvertering BCD-kod till flyttal.
BCD in (t.ex från tumhjul). 
@image orm_en1-55.gif

Avbildar 4 stycken BCD-kodade siffror (= 16 digitala signaler) på decimalt 
flyttal; DiBCD = D igital i nput B inary C oded D ecimal. Ingångarnas namn 
indikerar vilken dignitet den enskilda ingången representerar. 

BCD0 - BCD3 representerar heltal i intervallet {0, 1, ..., 9} 

BCD4 - BCD7 representerar heltal i intervallet {10, 20, ..., 90} 

BCD8 - BCDB representerar heltal i intervallet {100, 200, ..., 900} 

BCDC - BCDF representerar heltal i intervallet {1000, 2000, ..., 9000} 

Ingångarna används t.ex. för att ta emot signaler vid s.k. tumhjulsinställning.
Ingångarna kan INTE fås att invertera insignaler trots att Objekts Editorn 
erbjuder möjligheten till invertering. 

@b Exempel 

BCD1 = BCD4 = BCD7 = TRUE och resten FALSE.

VAL ger värdet BCD1 2 + BCD4 10 + BCD7 80 = 92
och err blir FALSE, dvs 0 
BCD1 och BCD3 satt ( 2 + 8 ). En omöjlig kombination !

VAL = senast giltiga värde och err är TRUE, dvs 1 

@b Tips 

Flera DiBCD - objekt kan parallellkopplas för ytterligare BCD-insignaler. 

@b Se även 

<attr>BCD0
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD1
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD2
BCD0 - BCD3 ger 1-talssiffran. 
</attr>
<attr>BCD3
BCD0 - BCD3 ger 1-talssiffran. 
</attr>

<attr>BCD4
BCD4 - BCD7 ger 10-talssiffran. 
</attr>
<attr>BCD5
BCD4 - BCD7 ger 10-talssiffran. 
</attr>
<attr>BCD6
BCD4 - BCD7 ger 10-talssiffran. 
</attr>
<attr>BCD7
BCD4 - BCD7 ger 10-talssiffran. 
</attr>

<attr>BCD8
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCD9
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCDA
BCD8 - BCDB ger 100-talssiffran. 
</attr>
<attr>BCDB
BCD8 - BCDB ger 100-talssiffran. 
</attr>

<attr>BCDC
BCDC -BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDD
BCDC -BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDE
BCDC -BCDF ger 1000-talssiffran. 
</attr>
<attr>BCDF
BCDC -BCDF ger 1000-talssiffran. 
</attr>

<attr>ActVal 
Senast giltiga värde, om Error är FALSE. 
</attr>

<attr>Error 
Felflagga. FALSE betyder att ActVal anger decimalvärdet av insignalerna; 
TRUE innebär att något fel inträffat i samband med senaste omvandlingen. 
</attr>


<attr>Inv 
TRUE betyder att alla ingångar ska invertera motsvarande insignaler. Om t.ex., 
bara de 4 första bitarna används i en tillämpning, måste de återstående 12 
bitarna sättas till TRUE i utvecklingsmiljön, annars blir resultatet felaktigt. 
</attr>
</class>

#
# Class Distribute
#
<class> Distribute
@Summary Distribution till process och operatörsstationer.
Distribute-objektet konfigurerar distribution av filer till process-
och operatörs-stationer.

Objektet ligger i projekt-volymen under ett NodeConfig-objekt.
De specificerade filerna kommer att ingå i distributions-paketet och
kopieras till noden konfigurerad av NodeConfig-objektet.

Filerna specificeras i Component attributet, som är en bitmask.

@b Se även
<attr>Components
Specifikation av komponenter som ska ingå i distributions-paketet.
Se typen (DistrComponentMask) för en beskrivning av de olika bitarna.
</attr>
</class>

#
# Class Do
#
<class> Do
@Summary Digital utgång
Digital utgång (Digital Output). 

Konfigurerar digital utsignal i 'Plant Configuration'.
En Do-signal hanteras internt enligt figur 3-6, sidan 3-70. 

@b Tips 

Placera i utvecklingsmiljön objektet under $ PlantHier objekt så att det 
kommer att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objektsbild
 @image orm_do_og.png

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de DoArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>SigValue 
Ej använd. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Document
#
<class> Document
@Summary Konfigurerar i PLC Editorns arbetsyta.
Konfigurerar i PLC Editorns arbetsyta ett delområde i A-format. 
@image orm_en1-56.gif

Genom att vid konfigurering av PLC program dela upp PLC Editorns arbetsyta 
i Document objekt och arrangera PLC objekten så att de omsluts av Document 
objekt kan konfigurationen skrivas ut på ett antal A4 sidor. 

PLC Editorns arbetsyta kan innehålla ett godtyckligt antal Document objekt. 

Ett Document objekt väljs ut genom att med pekdonet klicka på ramen eller på 
det s.k. huvudet. 

Med hjälp av Objekts Editorn kan objektets orientering, format, sidnummer 
och konstruktörens signatur anges. Utvecklingsmiljön fyller i objekthuvudets 
fält först i samband med objektets utskrift. 

Vid utskrift skapas en PostScript fil per Document objekt och default placeras 
filen på 'pwrp_obj'. 

@b Tips 

Ända skillnaden mellan å ena sidan Document och å andra sidan DocUser1 och 
DocUser2 är att de senare objekten saknar ProviewR logon. 

Med pwrc kommandona: 

document /repage -- sidnumreras Document objekten på formen x.y. Första 
siffran anger PlcPgm inom ProviewR-systemet och andra siffran anger 
Document objekt i den ordning de skapats i PLC programmet. Ska sidorna 
numreras i bestämd ordning måste objekten ordnas i önskad följd i 
arbetsbänken. 
document /list -- skriver ut en lista över systemets alla Document objekt i 
alfabetisk ordning. Default sker utskriften till samma fönster varifrån 
utvecklingsmiljön startats. 
 
A List with Name on Document Objects in a ProviewR system 

Behövs lite större arbetsyta väljs ett Document objekt i A3 format. Objekten i 
motsvarande A4-utskrift är visserligen något förminskade jämfört med om de 
fanns i ett Document objekt i A4 format men likväl fullt läsbara. 

<attr>Page 
Attribut för att förse Document objektet med sidnummer. Värdet visas i 
objektet först i samband med utskrift. 
</attr>

<attr>Signature 
Attribut för att förse Document objektet med signatur. Värdet visas i objektet 
först i samband med utskrift. 
</attr>

<attr>Size 
Anger objektets format. Följande format kan anges: A0, A1, A2, A3, A4 eller 
A5. 

Utskrift skickas till printerkön pwr_foe_gre_print och görs alltid på 
pappersformat A4. Om Document objektet har A5 format innebär det en 
uppförstoring; förminskning sker om objektet är A0, A1, A2 eller A3. 
</attr>

<attr>Orientation 
Anger hur objektet ska orienteras.

Landscape orientation: Portrait orientation: 


+------------------+ +-----------+
| " " " " " " " " " " | | " " " " " |
| " " " " " " " " " " | | " " " " " |
| " " " " " " " " " " | | " " " " " |
+------------------+ | " " " " " |
| " " " " " |
| " " " " " |
+-----------+ 
</attr>
</class>

#
# Class Drive
#
<class> Drive
@Summary Enkel motorstyrning
Enkel (= START/STOPP) motorstyrning med övervakning av kontaktorsvar 
och rörelsevakt. 
@image orm_en1-58.gif
Tre skilda förreglingstyper finns: 

- säkerhetsförregling, SafeStop 
- driftsförregling, ProdStop 
- starthinder, NoStart 

SafeStop och ProdStop blockerar varför sig de interna larmen ( Alarm1 , ..., 
Alarm3 ), dvs när SafeStop eller ProdStop är satt kan inte något av larmen bli 
TRUE. 

För fram/back-drift användes lämpligen två enkla drifter (dvs. två Drive 
objekt), vilka förreglar varandra för samtidig drift via SafeStop.

Val av driftläge, LOKAL / MANUELL / AUTO, görs med hjälp av insignalen 
Local och utsignalen ManMode enligt: 
@image orm_en1-59.gif

@b LOCAL 
- Används vid körning från yttre pulpet, manöverskåp e.d. 
- Enbart säkerhetsförseglingen SafeStop beaktas. 
- LocStart har en återfjädrande tryckknappsfunktion med slutande startfunktion. 
  Signalen ska hållas satt tills själv-
  hållning erhålls via kontaktorsvaret ConOn; se nedan. 
- LocDrive har en återfjädrande tryckknappsfunktion med brytande 
  stoppfunktion. Ett alternativt sätt att stoppa är att sätta Local = FALSE.
  @image orm_en1-60.gif
 
@b MANUAL/AUTO
- Både drifts- och säkerhetsförreglingen beaktas. 
- I läge MANUAL manövreras START/STOPP med hjälp av parametrarna 
  ManSta resp ManSto. 
- I läge AUTO sker START vid positiv flank på AutoStart; STOPP då AutoStart 
  = 0, dvs inte på flanken utan på nivån. 
- Växlingarna,
  -- AUTO --> MANUAL, påverkar inte styrsignalen, Order.
  -- MANUAL --> AUTO. Om styrsignalen var satt i driftläge
     MANUAL och AutoStart = TRUE förblir den satt efter övergången annars inte.

Övervakningar. Om inte kontaktorsvar resp hastighetsvakt används lämnas 
motsvarande ingång öppen. Internt används då utsignalen Order istället för den 
saknade insignalen. Det är alltså inte värdet på ProdTim eller SpeedTim som 
avgör om de beaktas. 

@b Exempel

Skruv med hastighetsvakt 
Förutsättningar: 

Manöverpulpet för "på platsen körning". 
Signaler för nödstopp och termisk utlösning finns. 
Skruven får köras först om en viss pump, PUMP1, är igång. Denna pump 
representeras och körs från annan Drive -instans. PUMP1-restriktionen gäller 
dock ej vid körning från manöverpulpet. 
Skruven körs i driftläge AUTO med rotation i 5 min varje halvtimme eller på 
operatörsorder; 'WAIT0' har TimerTime = 25 60 sekunder och 'WAIT1' 
TimerTime = 5 60 sekunder. 
Vid larm ska meddelande ges. 
 
@image orm_en1-61.gif
Periodical Control of a Contactor 

Fram/Back drift 
Körning enbart i driftläge AUTO. Fram/back begärs via Dv-signaler. 
Kontaktorsvar finns men ingen hastighetsvakt. De båda enkla drifterna 
förreglar varandra och växlingen mellan Fram/Back separeras i tiden av 
'TIMER0' resp. 'TIMER1'. 

@image orm_en1-62.gif
Configuration of a Forward/Backward Operation 

@h2 Två bandtransportörer 
 
Transportbandet 'Trp1', får startas först om 'Trp2' är igång (= driftsförregling). 
Transportbanden har gemensam signal för termisk utlösning. 
 
@image orm_en1-64.gif 
Shows the Operational Indicator Used to Control the Order of Starting 

AND-grinden för start av 'TRP1' krävs för att få positiv flank på startsignalen 
efter att 'TRP2' kommit igång. 

Också i driftläge MANUAL gäller att 'TRP1' förreglas av 'TRP2' och 'TRP2' av 
nivåvakter. Skulle en manöverpulpet för "på platsen körning" anslutas, gäller i 
driftläge LOCAL enbart förreglingen mot termisk utlösning. 

<attr>AutoStart 
Anger i driftläge AUTO en START begäran. Övergången FALSE --> TRUE innebär 
START-begäran. 
Om AutoNoStop inte används, innebär FALSE en STOPP-begäran.
</attr>

<attr>AutoNoStop
Anger i driftläge AUTO en STOPP begäran. FALSE betyder STOPP- 
begäran. 
Om ej kopplad, används AutoStart för STOPP-begäran.
</attr>

<attr>Local 
Val av driftläge. Signalen kan komma från vridomkopplare e.d. FALSE 
betyder att driftläget 'NOT LOCAL' väljs och ManMode huruvida det är 
MANUAL eller AUTO som gäller. TRUE innebär att driftläge LOCAL har 
valts. 
</attr>

<attr>LocStart 
Anger i driftläge LOCAL en start-begäran. FALSE betyder ingen åtgärd; 
TRUE medför att driftordern, Order , sätts. 
</attr>

<attr>LocDrive 
Anger i driftläge LOCAL en STOPP-begäran. FALSE medför att driftordern, 
Order , tas ned; notera slutande funktion . TRUE innebär ingen åtgärd, men är 
nödvändig för att möjliggöra nästa START-begäran av LocStart . 
</attr>

<attr>ConOn 
Kontaktorsvar.
Om con-ingången lämnas öppen används ord-utgången som insignal och värdet 
lagras i ConOn . FALSE betyder att kontaktorn inte gått till inom tiden 
ProdTim och TRUE att den den gjort det. 
</attr>

<attr>Speed 
Hastighets- eller rörelsevakt. 

Om sl-ingången lämnas öppen används ind-utgången som insignal och värdet 
lagras i Speed . FALSE betyder ingen rörelse och TRUE indikerar rörelse. 
Attributet påverkar Alarm3 . 
</attr>

<attr>SafeStop 
Anger säkerhetsförreglingens tillstånd. FALSE betyder att 
säkerhetsförreglingen ej löst ut. TRUE innebär ovillkorligt STOPP, dvs. 
driftordern, Order , sätts till STOPP oberoende av driftläge. 
</attr>

<attr>ProdStop 
Anger produktionsförreglingens tillstånd. Produktionsförreglingen beaktas 
enbart i lägena AUTO och MANUAL. FALSE betyder att 
produktionsförreglingen ej löst ut. TRUE innebär att driftordern, Order , sätts 
till STOPP 
</attr>

<attr>NoStart 
Anger starthinderförreglingens tillstånd. Starthinder beaktas enbart i lägena 
AUTO och MANUAL. FALSE betyder att inget starthinder registrerats. TRUE 
innebär att något starthinder föreligger. 

Om NoStart gör övergången FALSE --> TRUE när driftordern, Order = TRUE, 
påverkas inte driftordern. 
</attr>

<attr>ManMode 
Anger valt driftläge ( MANUAL eller AUTO) när LOCAL är FALSE. 
Attributet används som en vanlig parameter, dvs. dess värde kan ändras från 
t.ex. tillämpningsprogram. En fördel med att placera attributet som utgång är 
att det därigenom blir enklare att använda i den grafiska konfigurationen. Om 
Local = FALSE betyder, 

FALSE -- valt driftläge är AUTO
TRUE -- valt driftläge är MANUAL 
</attr>

<attr>Order 
Driftordern anger antingen START eller STOPP. FALSE betyder STOPP och 
TRUE innebär START. 
</attr>

<attr>Ind 
Driftindikering med avseende på drift eller ej drift. Attributet används för 
bekräftelse av aktuellt drifttillstånd. Det används t.ex. för att förregla drifter 
eller larm som endast är aktuella under drift. FALSE betyder ingen drift; 
TRUE innebär driftorder och svar från kontaktor och rörelsevakt, m. a. o. drift, 
dvs. Order = ConOn = Speed är TRUE och driftläget är 'NOT LOCAL'. 
</attr>

<attr>Alarm1 
Anger om kontaktorsvaret kom inom den tidsgräns som ProdTim anger eller ej. 
FALSE betyder inget larm; TRUE innebär att kontaktorsvaret inte kom inom 
den tid som anges av ProdTim . Driftordern, Order , sätts till STOPP och 
larmet kvarstår tills nästa START-begäran ( AutoStart gör övergången FALSE 
--> TRUE eller ManSta blir TRUE) görs. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange 
t.ex. ' Motorn xxx startar inte ' i övervakningsobjektets DetectText . 
</attr>

<attr>Alarm2 
Anger om kontaktorsvaret anlände inom den tidsgräns som ProdTim anger och 
kvarstår eller ej. FALSE betyder inget larm; TRUE innebär att kontaktorsvaret 
kom inom föreskriven tid men att det därefter försvunnit . Driftordern, Order , 
sätts till STOPP och larmet kvarstår tills nästa START-begäran görs. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange 
t.ex. ' Förlorat kontaktorsvar från xxx ' i övervakningsobjektets DetectText. 
</attr>

<attr>Alarm3 
FALSE betyder inget larm. 

TRUE innebär att kontaktorsvaret kom, men att Speed inte är TRUE när 
SpeedTim löpt ut eller att rörelseindikeringen därefter försvunnit . Driftordern, 
Order , sätts till STOPP och larmet kvarstår tills nästa START-begäran görs. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange 
t.ex. ' Ingen rörelse på .... ', ' Inget drifttryck på .... ' i övervakningsobjektets 
DetectText . 
</attr>

<attr>SumAlarm 
Summalarm. Anger om något av objektets interna larm är aktivt eller ej. 
FALSE betyder att inget aktivt larm finns i objektet; TRUE innebär att minst 
en av utgångarna al1 , al2 eller al3 är TRUE. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och definiera 
texten i DetectText . 
</attr>

<attr>ManSta 
Anger START-begäran om driftläget är MANUAL. FALSE betyder ingen 
begäran; TRUE innebär START-begäran. Begäran tas ned av ProviewR-
systemet då den noterats. 
</attr>

<attr>ManStp 
Anger STOPP-begäran om driftläget är MANUAL. FALSE betyder ingen 
begäran; TRUE innebär STOPP-begäran. Begäran tas ned av ProviewR-
systemet då den noterats. 
</attr>

<attr>ProdTim 
Anger, i sekunder, tidsgränsen ( = 0 ) för kontaktorsvar. Om svaret kommer 
senare får Alarm1 värdet TRUE. Tiden räknas från det ögonblick då Order blir 
TRUE. 
</attr>

<attr>SpeedTim 
Anger, i sekunder, tidsgränsen ( = 0 ) för rörelseindikering. Om svaret kommer 
senare får Alarm3 värdet TRUE. Tiden räknas från det ögonblick då ConOn 
blir TRUE. 
</attr>

<attr>ManAcc 
Ej implementerad funktion. Anger operatörens behörighet att växla mellan 
driftlägena MANUAL / AUTO. Följande behörigheter är möjliga: 

0 -- Ingen växling tillåten
? 0 -- Växling tillåten. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller om sådant inte används, på TimerDoDum. 
Efter tiden TimerTime tas den signal som utpekas av TimerDo ned. 
</attr>

<attr>TimerTime 
Timerns värde i sekunder. Värdet sätts i målmiljön till ProdTime eller 
SpeedTime . 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts i samband med 'Create Load Files ...' för 
användning i målmiljön. 
</attr>

<attr>Status 
Följande värden finns: 

0 -- Stoppad; Order = Ind = FALSE
1 -- Stoppar; Order = FALSE och Ind = TRUE
2 -- Väntar på kontaktorsvar
3 -- Väntar på att rörelsevakten ska indikera rörelse
4 -- Drift 
</attr>
</class>

#
# Class DsFast
#
<class> DsFast
@Summary Lagrar data för snabbkurva. 
Lagrar data för snabbkurva à la minnesoscilloskop. 

I varje nod där mätdata för snabbkurvor ska lagras finns behov av ett DsFast- 
jobb som genomsöker nodens (= lokala ) datalagringsobjekt. 

Varje attribut (= mätstorhet) som ska kunna plottas måste ha ett data 
lagringsobjekt. Attribut i datalagringsobjektet anger t.ex. namnet på den 
samplade mätstorheten och hur ofta lagring ska. En mätstorhet kan ha flera 
datalagringsobjekt, t.ex. för lagring med olika frekvens. 
 
@image orm_en1-65.gif
DsFast Job with Data Storage Objects 

NB! Kom ihåg att sampling av fysiska signaler sker med ändlig frekvens. För 
närvarande samplas analoga signaler (Ai, Ao) med 5 Hz och Co-, Di-, Do-
signaler med basfrekvensen vilken är lika med den frekvens som det i noden 
oftast exekverande PLC programmet har. Högsta möjliga basfrekvens är 50 Hz. 

Data lagras i en cirkulär lista (buffer) med storleken NoOfBufElement . 

Samplingscykeln startas genom att Start -flaggan sätts. Detta kan göras med 
hjälp av Start-knappen i snabbkurv-bilden. Mätstorheten samplas och värdet 
lagras i DataBuffer . När alla element i den cirkulära listan fått värden en gång 
sätts AllDataOK . 

Flaggan Trigged kan sättas av två skilda händelser: 

manuellt från t.ex. Trigger-knappen i snabbkurv-bilden. I detta fall sätts 
TrigManTrue . 
via yttre signal vars namn anges av TrigName . 
Samplingscykeln fortsätter därefter med ytterligare NoOfBufElement - 
SampBeforeTrig sampel efter det att flaggan Trigged blivit satt varefter den 
stoppas. Mätvärdena i den cirkulära listan, som nu är frysta, plottas därefter i 
snabbkurv-bilden. 

 
Det samplade attributet ska vara en lokal storhet . Därför ska i målmiljön 
DsFast objekten finnas i samma nod som de samplade attributens objekt. 

DsFast modulen inkluderas i resp. processnods EBUILD-fil med hjälp av: 

program PWR_EXE:RS_DS_FAST.EXE_ELN /warm_debug 
Det samplade attributet förutsätts vara någon av typerna: 

- pwr_tBoolean 

- pwr_tFloat32, pwr_tFloat64 

- pwr_tInt8, pwr_tInt16, pwr_tInt32 

- pwr_tUInt8, pwr_tUInt16, pwr_tUInt32 


<attr>Description 
Valfri text. 
</attr>

<attr>Start 
Anger om lagring ska göras eller ej. FALSE betyder att lagringen ska stoppas. 
TRUE innebär att lagringen är igång. Lagringen kan startas från Start-knappen 
i snabbkurv-bilden. Attributet sätts FALSE när lagringscykeln avslutas. 
</attr>

<attr>BaseFrequency 
DsFast-jobbets frekvens i Hz. Se också Multiple nedan. 

Attributet tilldelas samma värde som motsvarande attribut i nodens 
DsFastConf objekt. Detta görs vid DsFast-jobbets initialisering. 
</attr>

<attr>Multiple 
Den enskilda mätstorhet som DataName anger kommer att lagrasmed 
frekvensen BaseFrequency / Multiple . 
</attr>

<attr>NextMultiple 
Används för att hålla reda på vid vilka scan just denna instans ska hanteras. 
NextMultiple sätts till värdet av Multiple och räknas därefter ned vid varje 
scan. Blir NextMultiple = 0 sker sampling och lagring varefter attributet åter 
tilldelas värdet Multiple . 
</attr>

<attr>TrigMode 
Anger triggvillkoret för den binära signal som anges av TrigName . Följande 
värden är möjliga:
0 -- triggning är blockerad.
1 -- positiv flank, dvs. övergången FALSE --> TRUE startar lagring.
2 -- negativ flank, dvs. övergången TRUE --> FALSE startar lagring. 
</attr>

<attr>TrigName 
Namn på extern binär triggsignal. Triggsignalens fullständiga namn, t.ex. för 
lokal storhet, PROC1-Di123 . ActualValue . Fältet lämnas blankt om yttre 
triggsignal saknas. 
</attr>

<attr>TrigPointer 
Om TrigName är ifylld, pekare till den externa triggsignalen. 
</attr>

<attr>TrigSubId 
Identitet vid prenumeration av triggsignal. 
</attr>

<attr>TrigManTrue 
Anger om ovillkorlig triggning ska göras eller ej. TRUE betyder att triggning 
ska ske. Attributet sätts TRUE , t.ex. via Trigger-knappen i snabbkurv-bilden 
för att åter blir FALSE när samplingscykeln avslutas. 
</attr>

<attr>DataType 
Lagrar mätstorhetens datatyp. Denna ska vara någon av typerna: 
pwr_tBoolean, pwr_tFloat32, pwr_tFloat64, pwr_tInt8, pwr_tInt16, 
pwr_tInt32, pwr_tUInt8, pwr_tUInt16 eller pwr_tUInt32. 
</attr>

<attr>DataName 
Samplade mätstorhetens (attributets) fullständiga namn. Storheten, som ska 
vara lokal, anges t.ex. som PROC1-TEMP1. ActualValue 
</attr>

<attr>DataPointer 
Pekar på den storhet som ska samplas och lagras. 
</attr>

<attr>DataSubId 
Identitet vid prenumeration av mätstorheten. 
</attr>

<attr>StorageTime 
Anger, i sekunder, längden på lagringssekvensen. Om denna tid, med hänsyn 
till lagringsfrekvensen, överskrider vad som ryms i DataBuffer , stoppas 
lagringen när DataBuffer blivit fylld. 

StorageTime , Multiple , BaseFrequency och NoOfBufElement bestämmer 
NoOfSample. 
</attr>

<attr>NoOfSample 
Antal sampel som kan lagras i DataBuffer . 
</attr>

<attr>SampBeforeTrig 
Anger antal sampel före triggtidpunkten som ska ingå i 'mätprovet'. 
</attr>

<attr>TrigIndex 
Anger 1:a elementet i DataBuffer sedan triggning skett. 
</attr>

<attr>Trigged 
Anger om triggvillkoret, under pågående samplingscykel, har uppfyllts eller ej. 
TRUE betyder att triggvillkoret uppfyllts. Attributet blir FALSE så snart 
samplingscykeln avslutas. 
</attr>

<attr>NextIndex 
Anger var i bufferten nästa skrivning ska göras. 
</attr>

<attr>AllDataOK 
Anger om hela bufferten uppdaterats sedan Start -attributet blivit TRUE eller 
ej. AllDataOK sätts TRUE då DataBuffer har uppdaterats minst en gång och 
FALSE så snart samplingscykeln avslutas. 
</attr>

<attr>NoOfBufElement 
Anger antalet element som kan lagras i DataBuffer vid ett mätprov. 
</attr>

<attr>DataBuffer
Totalt tillgänglig lagringsutrymme. Max. storleken, som är förutbestämd (= 
NoOfBufElement ), anger antal sampel som samtidigt kan hållas lagrade. 
</attr>
</class>

#
# Class DsFastConf
#
<class> DsFastConf
@Summary Konfigurering av DsFast processen
Innehåller attribut för enskilt DsFast-jobb.

I varje nod där mätdata för snabbkurvor ska lagras behövs ett DsFast-jobb som 
genomsöker nodens (= lokala ) datalagringsobjekt, DsFast objekt. 

@image orm_en1-67.gif
DsFast Job with Matching Objects 

@b Tips 

DsFastConf konfigureras i utvecklingsmiljön under $Node objekt. Om ett 
Ds_Fast jobb laddas till nod som saknar DsFastConf objekt kommer det att 
exekvera med 10 Hz. 

Ska mätdata för snabbkurvor lagras i noden måste ett Ds_Fast-jobb laddas och 
startas i noden.
@image orm_en1-68.gif
  
@b Object graph
 @image orm_dsfastconf_og.png
 
@b Se även 

<attr>BaseFrequency 
1 Hz = BaseFrequency = 50 Hz. 

BaseFrequency attributen i de DsFast objekt som tillhör samma nod som 
DsFastConf tilldelas värdet av detta attribut! 

Digitala signaler och pulsräknar signaler hanteras av PLC program som arbetar 
med viss cykeltid. Denna är alltid en heltalsmultipel av 20 ms, vilket i 
frekvensplanet innebär att endast vissa frekvenser kan användas, t.ex. 50 Hz, 
25 Hz, .... 

Lokala analoga signaler hanteras i en takt som anges av IOHandler . 
</attr>

</attr>

#
# Class DsFastCurve
#
<class> DsFastCurve
@Summary Lagrar data för en snabbkurva.
Lagrar data för en snabbkurva.

I ett DsFastCurve objekt, kan upp till 10 attribut anges. Lagringen av
attributens värden kommer att triggas av samma händelse, ske med samma
frekvens, och kurvorna kommer att visas i samma snabbkurve fönster.

Attributens namn anges i Attribute vektorn.
För varje attribut, måste även ett lagrings-objekt anges.
Ett attribut kan refereras av flera olika DsTrendCurve objekt, t ex för
att lagra vid olika frekvens.

Samplingshastigheten anges med ScanTime attributet.
Samplingen startar när en trigg-händelse inträffar. I vissa fall, då data 
före trigg-punkten är av intresse, kommer samplingen att pågå även före
trigg-händelsen.

De olika trigg-typerna är specificerade i Function attributet.

@b Trigg villkor
Det finns tre olika sätt att trigga en snabbkurva:

- Manual triggning. En manuell triggning utförs genom att sätta TriggMan
  attributet. Manuell triggning måste konfigureras i Function attributet.

- Triggning på digital signal. Om en referens till ett digitalt attribut
  läggs i TriggObject, kommer en positiv flank på signalen att trigga
  snabbkurvan.

- Nivå. Nivån på det första kurv-attributet kan trigga snabbkurvan. När
  värdet av attributet passerar värdet i TriggLevel underifrån, kommer
  en triggning att utföras. LevelTrigg måste konfigureras i Function
  attributet.

@b Lagra data före trigg-punkten
Ibland kan data före trigg-punkten vara av intresse. Denna data kan lagras
genom att sätta

- BeforeTrigg biten i Function
- antalet punkter före triggpunkten som ska lagras anges i 
  NoOfPointsBeforeTrigg.

I BeforeTrigg funktionen lagras data kontinuerligt före trigg-händelsen.
Denna kontinuerliga lagring startas av änvändaren genom att sätta Prepare
attributet, eller så fort den tidigare kurvan är visad om AlwaysPrepared
attributet är konfigurerat i Function. I det senare fallet, skrivs data
för den föregående kurvan omedelbart över när det har visats.

@b Lagrings vektorer
Lagrings-vektorer måste tillhandahållas av användaren, en vektor för tid-axel
data, och en för varje konfigurerat attribut. T ex Buff1440, Buff4096 eller
Buff32k objekt kan användas för datalagring. Dessa kan lagra upp till 360,
1024 resp 8192 punkter av pwr_tFloat32 attribut.

@b Data typer
Datatyper som kan lagras är
- pwr_tFloat32, pwr_tFloat64
- pwr_tInt32, pwr_tUIn32, pwr_tInt16, pwr_tUInt16, pwr_tInt8, pwr_tUInt8

Tiden lagras som pwr_tFloat32.

@b Sever process
DsFastCurve objekt hanteras av serverprocessen rt_fast.
Fasfrekvensen för serverprocessen konfigureras i DsFastConf-objektet.

@b Se även
<attr>Description
Beskrivning.
</attr>
<attr>Title
Titel på snabbkurve fönstret.
</attr>
<attr>Function
Bitmask för snabbkurve funktionen.
- ManTrigg       1   Tillåt manuell triggning.
- LevelTrigg     2   Trigga på nivån på första kurv-attributet.
- BeforeTrigg    4   Visa mätvärden före triggpunkten.
- AlwaysPrepared 8   Skriv över föregående kurve så snart den har visats.
</attr>
<attr>Active
Mätningen är aktiv.
Om funktionen är TriggBefor är Active även satt i preparations fasen.
</attr>
<attr>ScanTime
Skantid i sekunder. Multipel av bas-skantiden angiven i DsFastConf objektet.
</attr>
<attr>TriggObject
Fullständigt namn på en extern digital trigg-signal, t ex 
PROC-DI123.ActualValue.
Attributet lämnas tomt om extern triggsignal inte används.
</attr>
<attr>TriggMan
Manuell triggning.
En manuell triggning utförs genom att sätta TriggMan. Manuell triggning måste
konfigureras i Function attributet med ManTrigg biten.
TriggMan återställs av server-processen.
</attr>
<attr>TriggLevel
Trigg nivå.
Trigg nivå som används om funktion LevelTrigg är angiven.
Värdet av det första kurv-attributet (i Attribute[0]) jämförs med TriggLevel.
När värdet passeras underifrån, utförs en triggning.
</attr>
<attr>Prepare
Förbered för en triggning. När BeforeTrigg funktionen är konfigurerad, måste
data lagras före triggpunkten. Detta görs när Prepare är satt.
Om funktionen är AlwaysPrepared, sätts Prepare så fort New-flaggan är 
återställd, annars måste Prepare sättas av användaren. När Prepare sätts,
skrivs data för föregående kurva över.
</attr>
<attr>AttributeType
Lagrar mätvärdenas datatyper. De måste vara någon av typerna pwr_tBoolean,
pwr_tFloat32, pwr_tFloat64, pwr_tInt8, pwr_tInt16, pwr_tInt32, pwr_tUInt8,
pwr_tUInt16 eller pwr_tUInt32.
</attr>
<attr>Attribute
Fullständigt namn på analoga samplade attribut, t ex PROC1-TEMP1.ActualValue.
Attributen måste finnas i lokala objekt.
</attr>
<attr>Buffers
Data buffrar. Vektor attribut som lagrar data för kurvorna.
Objekten för data-buffrarna måste konfigureras av användaren. Storleken på
buffer attributen måste var större eller lika med lagringsutrymmet, dvs
storlekan på det samplade attributets type multiplicerat med NoOfPoints.
</attr>
<attr>TimeBuffer
Tidsbuffer. Ett vektor attribut som lagrar data för kurvornas tidsaxel.
Objektet för tids-buffern måste konfigureras av användaren. Storleken på
buffer attributet måste var större eller lika med lagringsutrymmet för 
tidsdata, dvs 4 * NoOfPoints. Tiden lagras som en pwr_tFoat32.
</attr>
<attr>YMinValue
Minvärde för Y-axelns område.
</attr>
<attr>YMaxValue
Maxvärde för Y-axelns område.
</attr>
<attr>NoOfPoints
Antal mätpunkter i kurvan.
</attr>
<attr>NoOfPointsBeforeTrigg
Antal mätpunkter före trigg-punkten.
Om BeforeTrigg är satt i Function attributet, kommer mätvärden att lagras
före trigg-punkten. Detta är antalet punkter före triggningen som ska visas.
Antalet ska vara större än 1 och mindre än NoOfPoints.
</attr>
<attr>TriggIndex
Specificerar första elementet i databufferten sedan triggningen har inträffat.
</attr>
<attr>TriggIndex
Specificerar första elementet i databufferten med giltigt data.
</attr>
<attr>LastIndex
Specificerar sista elementet i databufferten med giltigt data.
</attr>
<attr>New
Indikerar att det finns en ny snabb-kurva att visa upp.
New sätts när kurvdata har lagrats, för att indikera för ett Snabb-kurve
fönster att nya kurv-data är tillgängliga. New återsälls efter ca 2 sekunder.
</attr>
<attr>CurveValid
Indikerar att en kurva är rätt konfigurerad och att data kommer att lagras
för kurvan.
</attr>
<attr>TriggTime
Tid för senaste detekterade trigg-händelse.
</attr>
</class>

#
# Class DsHist
#
<class> DsHist
DsHist
Engelsk text<link> DsHist, "", $pwr_exe/pwrb_xtthelp.dat

Konfigurerar historisk datalagring av skalär storhet eller element i 1- 
dimensionell vektor. ( D ata s torage Hist ory). 

Historisk datalagring är en option i ProviewR. 

I en relationsdatabas finns data i två-dimensionella tabeller, s.k. datarelationer. 
En relation besår av rader och kolumner.
DsHist objektet anger vilken storhet som ska lagras och i vilken relation.
Storheten kan med ett DsHist objekt anges för lagring i upptill tre olika 
datarelationer. 

@b Tips 

Om lagringen avser signalvärden konfigureras DsHist i utvecklingsmiljön ofta 
direkt under aktuellt signalobjekt.

@b Se även 

<attr>Attribute 
Anger fullständigt namn på det attribut som ska lagras. Attributet ska vara av 
någon av typerna: pwr_tBoolean, pwr_tFloat32, pwr_tInt8, pwr_tInt16 eller 
pwr_tInt32. 

Värdet lagras alltid som pwr_tFloat32. 
</attr>

<attr>CycleObject
Attributen anger i vilken/vilka datarelationer den under Attribute angivna 
storheten ska lagras. Detta görs genom att namnet på motsvarande 
DsHistServer objekt anges. 

Attributen behöver inte väljas konsekutivt. 
</attr>

<attr>DeadBand 
Attributet är avsett för framtida användning. 
</attr>
</class>

#
# Class DsHistServer
#
<class> DsHistServer
@Summary Konfigurering av serverprocessen för historisk datalagring.
Konfigurerar servern för historisk datalagring. ( D ata s torage Hist ory Server 
).


Historisk datalagring är en option i ProviewR.
Datalagringen görs i en relationsdatabas, Rdb. Datalagringsrelationer 
förutsättes vara skapade och namngivna redan vid leverans av optionen. 
Antalet relationer är som standard 4.
DsHistServer konfigureras i utvecklingsmiljön under det $Node objekt som 
representerar noden där den historiska datalagringen görs.
I den historiska datalagringsnoden görs automatiskt prenumeration på storheter 
som ska ingå i datalagringen. Data som ska medelvärdesbildas lagras vid varje 
inläsningstillfälle i en lokal buffert och medelvärdesbildas före lagring.
För storheter som ingår i den historiska datalagringen men som inte är 
tillgängliga t.ex. på grund av att prenumerationen inte är uppe, lagras mätvärdet 
som NULL tecken. 

@b Se även 

<attr>Table 
Anger namnet på en datalagringsrelation i Rdb. En datalagringsrelation består 
av en rad för varje lagringstillfälle med upptill 1500 datakolumner.
Attributet är 'case sensitive'. Om det finns en relation HistoricRelation_1 ska 
man i Objekts Editorn skriva HistoricRelation_1 och inte t.ex 
historicrelation_1. 
</attr>

<attr>StoreInterval 
Anger, i sekunder, tiden mellan två datalagringar i relationen. Attributet ska 
vara en heltalsmultipel av ScanTime ; se nedan. 
</attr>

<attr>ScanTime 
Anger, i sekunder, tiden mellan två mätvärdesavläsningar, sampel.
Minsta tillåtna värde är 10 sekunder. 

Om StoreInterval = ScanTime sker lagring av senaste mätvärde. 

Om StoreInterval > ScanTime sker lagring enligt FilterFunction . 
</attr>

<attr>StoreTime 
Anger, i dygn, hur länge data ska sparas i Rdb. 

Rdb är vid leverans skapad för ett bestämt antal sampel av respektive data 
lagringsstorhet. Det ska gälla att, 

StoreTime = max antal sampel · StoreInterval 
</attr>

<attr>FilterFunction 
Anger hur inläst värde ska hanteras före lagring. Följande alternativ finns: 

- 0 Vid lagring ska storhetens senaste sampel användas.
- 1 Vid lagring ska storhetens aritmetiska medelvärde användas.
</attr>
</class>

#
# Class DsTrend
#
<class> DsTrend
@Summary Långtidslagrar data för trendkurva. 
Långtidslagrar data för trendkurva. 

I varje nod där mätdata för trendkurvor ska lagras finns behov av ett DsTrend-
jobb som genomsöker nodens (= lokala ) datalagringsobjekt. 

Varje attribut (= mätstorhet) som ska kunna plottas kräver ett 
datalagringsobjekt. Attribut i datalagringsobjektet anger t.ex. namnet på den 
samplade mätstorheten och hur ofta lagring ska.
 
@image orm_en1-69.gif
DsTrend Job with Data Storage Objects 

NB! Kom ihåg att sampling av fysiska signaler sker med ändlig frekvens. För 
närvarande samplas analoga signaler (Ai, Ao) med 5 Hz och Co-, Di-, Do-
signaler med basfrekvensen vilken är lika med den frekvens som det i noden 
oftast exekverande PLC programmet har. Högsta möjliga basfrekvens är 50 Hz. 

En trendkurva består av mätvärden insamlade med given frekvens. 

Insamlade mätvärden lagras i DataBuffer . Internt är DataBuffer uppdelad i två 
lika delbuffrar. Arbetssättet går ut på att uppdatera varje element i den ena av 
delbuffrarna och sedan fortsätta med första elementet i den andra delbufferten. 
När också det sista elementet i den andra delbufferten blivit uppdaterad 
fortsätter uppdateringen med första elementet i den första delbufferten. 
Delbuffrarna uppdateras växelvis. BufferStatus anger hur resp delbuffert 
används för tillfället. 

Det samplade attributet ska vara en lokal storhet . Därför ska i målmiljön 
DsTrend objekten finnas i samma nod som de samplade attributens objekt. 

DsTrend modulen inkluderas i resp. processnods EBUILD-fil med hjälp av:
program PWR_EXE:RS_DS_TREND.EXE_ELN /warm_debug 

Det samplade attributet förutsätts vara någon av typerna: 

- pwr_tBoolean 

- pwr_tFloat32, pwr_tFloat64 

- pwr_tInt8, pwr_tInt16, pwr_tInt32 

- pwr_tUInt8, pwr_tUInt16, pwr_tUInt32 

@b Tips 

Om till signal hör objekt av typen DsTrend , DsFast eller DsHist kan 
förhållandet markeras genom att objektet placeras direkt under aktuellt 
signalobjekt.

@image orm_en1-70.gif
Configuration of a DsTrend Object 

@b Objektsbild
 @image orm_dstrend_og.png

<attr>Description 
Valfri text. 
</attr>

<attr>ScanTime 
Anger, i sekunder, DsTrend-jobbets cykeltid. Se också Multiple . 

Attributet tilldelas samma värde som motsvarande attribut i nodens 
DsTrendConf objekt. Detta görs vid DsTrend-jobbets initialisering. 
</attr>

<attr>Multiple 
Den enskilda mätstorhet som DataName anger kommer att lagrasmed perioden 
ScanTime · Multiple . 
</attr>

<attr>NextMultiple 
Används för att hålla reda på vid vilka exekveringar just denna instans ska 
hanteras. NextMultiple sätts till värdet av Multiple och räknas därefter ned vid 
varje exekvering. Blir NextMultiple = 0 sker sampling och lagring varefter 
attributet åter tilldelas värdet Multiple . 
</attr>

<attr>DataType 
Lagrar mätstorhetens datatyp. Denna ska vara någon av typerna: 
pwr_tBoolean, pwr_tFloat32, pwr_tFloat64, pwr_tInt8, pwr_tInt16, 
pwr_tInt32, pwr_tUInt8, pwr_tUInt16 eller pwr_tUInt32. 
</attr>

<attr>DataName 
Samplade mätstorhetens (attributets) fullständiga namn. Storheten, som ska 
vara lokal, anges t.ex. som PROC1-TEMP1. ActualValue 
</attr>

<attr>DataPointer 
Pekar på den storhet som ska samplas och lagras. 
</attr>

<attr>DataSubId 
Identitet vid prenumeration av mätstorheten. 
</attr>

<attr>StorageTime 
Anger, i sekunder, längden på lagringssekvensen per delbuffert. Om denna tid, 
med hänsyn till lagringsfrekvensen, överskrider vad som ryms i DataBuffer , 
förloras de äldsta värdena i DataBuffer . 

eftersom ScanTime = Multiple = 1 

StorageTime , Multiple , BaseFrequency och NoOfBufElement bestämmer 
NoOfSample . 
</attr>

<attr>NoOfSample 
Anger antal sampel som kan lagras per delbuffert. 
</attr>

<attr>WriteBuffer 
Anger vilken delbuffert som för närvarande används för skrivning. 

= 0, .... ( NoOfBuffers - 1) 
</attr>

<attr>NextWriteIndex
Anger var i den aktuella delbufferten nästa skrivning ska ske. 
</attr>

<attr>BufferStatus
Anger aktuell status för resp. delbuffert. Följande värden finns: 

0 -- Delbufferten används ej för skrivning.
1 -- Delbufferten används för skrivning. 
</attr>

<attr>NoOfBuffers 
Anger antalet delbuffrar som arean DataBuffer består av. NoOfBufElement 
anger antalet element som varje delbuffert består av. 
</attr>

<attr>NoOfBufElement 
Anger antal element varje delbuffert består av. 
</attr>

<attr>BufferTime
Tidpunkt, per delbuffert, för första lagringen i en skrivsession. 
</attr>

<attr>DataBuffer
Totalt tillgängligt lagringsutrymme. Max. storleken är förutbestämd (= 
NoOfBuffers · NoOfBufElement ) och anger antal sampel som samtidigt kan 
hållas lagrade i en lagringscykel. 
</attr>
</class>

#
# Class DsTrendConf
#
<class> DsTrendConf
@Summary Konfigurering av DsTrend processen
Innehåller attribut för enskilt DsTrend-jobb. 

I varje nod där mätdata för snabbkurvor ska lagras behövs ett DsTrend-jobb 
som genomsöker nodens (= lokala ) datalagringsobjekt, DsTrend objekt. 

@image orm_en1-71.gif
DsTrend Job with Matching Objects

@b Tips 

Eftersom DsTrend-jobb default finns på OpenVMS-noder är det lämpligt att 
konfigurera DsTrendConf på dess noder. DsTrendConf konfigureras i 
utvecklingsmiljön under $Node objekt. 

Om ett Ds_Trend jobb laddas till nod som saknar DsTrendConf objekt kommer 
det att exekvera med 1 Hz. 

@b Objektsbild
 @image orm_dstrendconf_og.png

@b Se även 

<attr>ScanTime 
Anger, i sekunder, DsTrend-jobbets cykeltid. 1 = ScanTime = 3600. 

ScanTime attributen i de DsTrend objekt som tillhör samma nod som 
DsTrendConf tilldelas värdet av detta attribut! 
</attr>
</class>

#
# Class DSup
#
<class> Dsup
@Summary Larmövervakning av digital storhet
Larmövervakning av digital storhet (Digital SUPervisory). 
@image orm_dsup_fo.gif

Övervakar binär storhet i godtyckligt objekt med avseende på larmläge. 
CtrlPosition anger om det är sann eller falsk som utgör storhetens larmäge.
Larmmeddelande kan fördröjas en tid som specificeras av TimerTime . 

Då den övervakade storheten antar larmläge reagerar DSup objektet med två 
åtgärder: 

'act' utgången sätts ovillkorligen för att indikera larm tillstånd. 
efter tiden TimerTime skickas meddelande till utenheter, t.ex. operatörs 
stationer. Denna åtgärd kan undertryckas med hjälp av DetectOn . 
Meddelande består dels av textsträngen DetectText , dels av flaggor, se 
EventFlags , för att manövrera kompletterande aktiviteter. 

Meddelanden kan vara av olika typ; (se EventType ) 

ALARM ALARM-meddelanden ska kvitteras. De kvarstår i larmlistan
tills kvittering sker, dvs. oberoende av om det övervakade
objektet då befinner sig i larm- eller normaltillstånd. 
INFO Kvitteringsbara INFO-meddelanden skickas till larmfönstrets
informationsdel varifrån kvittering kan ske. F.ö hanteras de som
ALARM-meddelanden.

Ej kvitteringsbara INFO-meddelanden skickas endast till
händelselistan. 
Alla meddelanden skickas till händelselistan. 

ALARM-meddelanden ges olika prioritet; (se EventPriority ). Både A- och B- 
larm hamnar i larmfönstret och larmlistan. Kvittering kan ske från båda 
platserna. I larmfönstret anges antalet okvitterade C- och D-larm medan själva 
meddelandena finns i larmlistan varifrån kvittering också kan göras. 

NB! Meddelande som skapas av ett DSup objekt får samma identitet som det 
övervakade objektet. Attributet SelectList, som finns i utenheternas objekt, 
t.ex. User-objekt, anger från vilka hierarkier meddelanden ska tas emot. 

Olika typer av utenheter finns: 

OPERATOR: Urvalslistan definieras av ett attribut i User-objekt. 
PRINTER: Urvalslistan definieras av ett attribut i EventPrinter -
objekt. 

@b Tips 

Övervakning av frånslag sker lämpligen efter invertering av In -signalen. 

Att den övervakade storheten kan tillhöra ett godtyckligt objekt betyder att inte 
bara signalobjekt utan också andra objekt kan övervakas; t.ex attribut i egen 
definierade objekt. 

Både ASup och DSup objekt kan konfigureras på olika sätt. Vid konfigurering 
i PLC program handhar PLC jobbet övervakningen. När objekten konfigureras 
utanför PLC program.

@b Se även 

<attr>In 
Övervakat objekt. Lämnas ingången öppen anges i Attribute vad som ska 
övervakas. 
</attr>

<attr>Control 
Anger om övervakningen ska ske eller ej. Notera att blockering görs när 
Control är FALSE. Insignalen kan inverteras. 

FALSE kopplar bort övervakningen och TRUE eller öppen ingång innebär att 
övervakningen ska utföras. 
</attr>

<attr>Action 
Anger den övervakade storhetens tillstånd. FALSE innebär normaltillstånd och 
TRUE larmtillstånd. 

Utsignalen kan t.ex. användas för att aktivera åtgärdspaket vid larmtillstånd. 
</attr>

<attr>Acked 
Anger om larmtillståndet kvitterats eller ej. FALSE betyder att okvitterat larm 
finns. Utsignalen sätts initialt TRUE då DSup-objektet skapas i rtdb och när 
larmtillstånd kvitteras. 
</attr>

<attr>Blocked 
Anger om övervakningsobjektet är blockerat eller ej. Med blockering avses 
övervakningsobjektets förmåga att initiera meddelanden. Blockering påverkar 
inte objektets act-utgång. 

FALSE innebär att ASup-objektet inte är blockerat och TRUE att det är 
blockerat. Vid blockering av övervakningsobjekt som befinner sig i larmläge 
tas existerande meddelanden för det aktuella objektet bort. 

Blockering /deblockering görs med hjälp av larmblockeringsformuläret i 
Operator Window. 
</attr>

<attr>Description 
Fri text för att beskriva objektet. Används i bilden 'Larmgränser'. 
</attr>

<attr>DetectOn 
Anger om den åtgärd som vid larmtillstånd består i att skicka DetectText ska 
blockeras eller ej. FALSE betyder att inget meddelandet skickas vid 
larmtillstånd; TRUE betyder att meddelandet DetectText skickas vid 
larmtillstånd. 
</attr>

<attr>DetectText 
Fri text som ingår i meddelandet vid larmtillstånd. Texten skrivs ut vid 
larmtillstånd om DetectOn är TRUE. 
</attr>

<attr>ShowDetectText 
Anger om DetectText ska visas i DSup-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. 
</attr>

<attr>ReturnText 
Fri text som ingår i meddelandet vid återgång till normaltillstånd. Meddelandet 
skrivs i händelselistan. 
</attr>

<attr>EventType 
Anger vilken typ av meddelande (= DetectText ) som ska skickas vid 
larmtillstånd.
64 -- ALARM Meddelandet kräver kvittering och skickas till
larmfönstret, larmlistan och händelselistan.
32 -- INFO Om meddelandet kräver kvittering skickas det till
larmfönstrets informationsdel och händelselistan annars
enbart till händelselistan. 
</attr>

<attr>EventPriority 
Prioritet. Gäller enbart ALARM-meddelanden. 

67 = A-larm; högst prioritet. (= 43Hex)
66 = B-larm (= 42Hex)
65 = C-larm (= 41Hex)
64 = D-larm ; lägst prioritet. (= 40Hex) 
</attr>

<attr>EventFlags 
Bitmask. En kombination av flaggor används också för att specificera 
meddelandet. Följande värden (flaggor) finns: 

1 = Om denna flagga finns ska ett returmeddelande med ReturnText
skickas till utenheternas händelselistor, annars inte.

2 = Om denna flagga finns ska ett kvittensmeddelande skickas till
utenheternas händelselistor, annars inte.

4 = Om den enskilda utenheten har akustisk signal (pip-funktion)
ska den aktiveras då meddelandet tas emot.

8 = Meddelandet ska tas emot av varje utenhet oberoende av vad det
står i urvalslistorna.

16 = Om meddelandet är av typen INFO placeras det förutom i
händelselistan också i larmfönstrets info-del. Kvittens- resp
returmeddelande som för t ex. A-larm.
</attr>

<attr>Attribute 
Anger komplett namn på övervakat attribut. Om ingången 'in' lämnas öppen 
ska vid konfigureringen Attribute fyllas i. Knyts ingången till annat objekt 
ifylls attributet vid kompileringen av ProviewR. 
</attr>

<attr>AlarmStatus 
Aktuellt statusvärde. Bitmask bestående av 16 bitar där de 8 minst signifikanta 
bitarna anger tillståndet och de 8 mest signifikanta prioriteten . 

Tillståndet är en kombination av följande: 

0 -- Normaltillstånd
1 -- Larmtillstånd
2 -- Okvitterat larmtillstånd 

Prioriteten är en av prioriteterna EventPriority . 

Följande värde på AlarmStatus kan förekomma: 

EventPrority + 1 => Prioritet + larmtillstånd
EventPrority + 3 => Prioritet + okvitterat larm och rådande larmtillstånd
EventPrority + 2 => Prioritet + okvitterat larm och normaltillstånd 
</attr>

<attr>AlarmCheck 
Används internt vid händelse detektering. 
</attr>

<attr>DetectCheck 
Anger om larmtillstånd ska detekteras eller ej. FALSE betyder att larmtillstånd 
inte ska detekteras; TRUE att larmtillstånd ska detekteras. 
</attr>

<attr>DetectSend 
Anger om meddelande sänts iväg till utenheter (eller mer precis till 
meddelande hanteraren) eller ej; TRUE betyder att meddelande har sänts. 
</attr>

<attr>DetectTime 
Datum och klockslag för senast detekterade larmtillstånd. 
</attr>

<attr>ReturnCheck 
Anger om objektet återgått till normaltillstånd eller ej. TRUE betyder att 
objektet återgått till normaltillstånd. 
</attr>

<attr>ReturnSend 
Anger om ett returmeddelande med ReturnText sänts till utenheterna eller ej. 
TRUE betyder att returmeddelande sänts. 
</attr>

<attr>ReturnTime 
Datum och klockslag för senast detekterade retur till normaltillstånd. 
</attr>

<attr>AckTime 
Datum och klockslag för senast detekterade kvittens. 
</attr>

<attr>AckOutunit 
Identitet på utenhet (operatör) varifrån kvittering skett. 
</attr>

<attr>BlockStatus 
Ej använd. 
</attr>

<attr>ActualValue 
Den övervakad storhetens värde vid tidpunkten TimeOfDetect . 
</attr>

<attr>CtrlPosition
Anger om det är TRUE eller FALSE som utgör den övervakade storhetens 
larmläge. 

FALSE = Frånslag. Då In -signalen 1 --> 0 => larmtillstånd.
TRUE = Tillslag. Då In -signalen 0 --> 1 => larmtillstånd. Detta är normal
fallet. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timerkön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när, efter det att larmtillstånd inträtt, 
meddelandet ska skickas. Om larmtillståndet försvinner innan tiden gått ut 
genereras inget meddelande. 

TimerTime = PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin 
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
<attr>TimerMax
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
</class>

#
# Class DtoEnum
#
<class> DtoEnum
@Summary Väljer ett uppräkningsvärde.
Väljer ett uppräkningsvärde. 
@image orm_dtoenum_fo.gif

Objektet innehåller en intern vektor men uppräknings-värden, som default
har värdena 0, 1, 2, ..., 31. Om en digital ingång sätts, sätts värdet på
motsvarande värde i vektorn på utgången. Om inte någon ingång är sätt, sätts
värdet i DefaultValue, som default är 0.

<attr>d0
Digital ingång som representerar uppräkningsvärdet på index 0 i vektorn.
</attr>
<attr>d1
Digital ingång som representerar uppräkningsvärdet på index 1 i vektorn.
</attr>
<attr>d2
Digital ingång som representerar uppräkningsvärdet på index 2 i vektorn.
</attr>
<attr>d3
Digital ingång som representerar uppräkningsvärdet på index 3 i vektorn.
</attr>
<attr>d4
Digital ingång som representerar uppräkningsvärdet på index 4 i vektorn.
</attr>
<attr>d5
Digital ingång som representerar uppräkningsvärdet på index 5 i vektorn.
</attr>
<attr>d6
Digital ingång som representerar uppräkningsvärdet på index 6 i vektorn.
</attr>
<attr>d7
Digital ingång som representerar uppräkningsvärdet på index 7 i vektorn.
</attr>
<attr>d8
Digital ingång som representerar uppräkningsvärdet på index 8 i vektorn.
</attr>
<attr>d9
Digital ingång som representerar uppräkningsvärdet på index 9 i vektorn.
</attr>
<attr>d10
Digital ingång som representerar uppräkningsvärdet på index 10 i vektorn.
</attr>
<attr>d11
Digital ingång som representerar uppräkningsvärdet på index 11 i vektorn.
</attr>
<attr>d12
Digital ingång som representerar uppräkningsvärdet på index 12 i vektorn.
</attr>
<attr>d13
Digital ingång som representerar uppräkningsvärdet på index 13 i vektorn.
</attr>
<attr>d14
Digital ingång som representerar uppräkningsvärdet på index 14 i vektorn.
</attr>
<attr>d15
Digital ingång som representerar uppräkningsvärdet på index 15 i vektorn.
</attr>
<attr>d16
Digital ingång som representerar uppräkningsvärdet på index 16 i vektorn.
</attr>
<attr>d17
Digital ingång som representerar uppräkningsvärdet på index 17 i vektorn.
</attr>
<attr>d18
Digital ingång som representerar uppräkningsvärdet på index 18 i vektorn.
</attr>
<attr>d19
Digital ingång som representerar uppräkningsvärdet på index 19 i vektorn.
</attr>
<attr>d20
Digital ingång som representerar uppräkningsvärdet på index 20 i vektorn.
</attr>
<attr>d21
Digital ingång som representerar uppräkningsvärdet på index 21 i vektorn.
</attr>
<attr>d22
Digital ingång som representerar uppräkningsvärdet på index 22 i vektorn.
</attr>
<attr>d23
Digital ingång som representerar uppräkningsvärdet på index 23 i vektorn.
</attr>
<attr>d24
Digital ingång som representerar uppräkningsvärdet på index 24 i vektorn.
</attr>
<attr>d25
Digital ingång som representerar uppräkningsvärdet på index 25 i vektorn.
</attr>
<attr>d26
Digital ingång som representerar uppräkningsvärdet på index 26 i vektorn.
</attr>
<attr>d27
Digital ingång som representerar uppräkningsvärdet på index 27 i vektorn.
</attr>
<attr>d28
Digital ingång som representerar uppräkningsvärdet på index 28 i vektorn.
</attr>
<attr>d29
Digital ingång som representerar uppräkningsvärdet på index 29 i vektorn.
</attr>
<attr>d30
Digital ingång som representerar uppräkningsvärdet på index 30 i vektorn.
</attr>
<attr>d31
Digital ingång som representerar uppräkningsvärdet på index 31 i vektorn.
</attr>
<attr>EnumValues
Uppräknings-värden.
</attr>
<attr>DefaultValue
Default värde som läggs i utgången om inte någon insignal är satt.
</attr>
<attr>Enum
Valt uppräknings-värde.
</attr>
</class>

#
# Class DtoMask
#
<class> DtoMask
@Summary Sammanställer digitala värdet till en bit-mask.
Sammanställer digitala värdet till en bit-mask.
@image orm_dtomask_fo.gif

Objektet har 32 digital ingångar och en 32-bits heltals utgång.
Varje ingång representerar en bit i utgången. När en ingång är sann, sätts
motsvarande bit till 1, och när ingången är falsk, sätts biten till 0.

@b Se även
<attr>d1
Digital ingång som representerar bit nummer 1.
</attr>
<attr>d2
Digital ingång som representerar bit nummer 2.
</attr>
<attr>d3
Digital ingång som representerar bit nummer 3.
</attr>
<attr>d4
Digital ingång som representerar bit nummer 4.
</attr>
<attr>d5
Digital ingång som representerar bit nummer 5.
</attr>
<attr>d6
Digital ingång som representerar bit nummer 6.
</attr>
<attr>d7
Digital ingång som representerar bit nummer 7.
</attr>
<attr>d8
Digital ingång som representerar bit nummer 8.
</attr>
<attr>d9
Digital ingång som representerar bit nummer 9.
</attr>
<attr>d10
Digital ingång som representerar bit nummer 10.
</attr>
<attr>d11
Digital ingång som representerar bit nummer 11.
</attr>
<attr>d12
Digital ingång som representerar bit nummer 12.
</attr>
<attr>d13
Digital ingång som representerar bit nummer 13.
</attr>
<attr>d14
Digital ingång som representerar bit nummer 14.
</attr>
<attr>d15
Digital ingång som representerar bit nummer 15.
</attr>
<attr>d16
Digital ingång som representerar bit nummer 16.
</attr>
<attr>d17
Digital ingång som representerar bit nummer 17.
</attr>
<attr>d18
Digital ingång som representerar bit nummer 18.
</attr>
<attr>d19
Digital ingång som representerar bit nummer 19.
</attr>
<attr>d20
Digital ingång som representerar bit nummer 20.
</attr>
<attr>d21
Digital ingång som representerar bit nummer 21.
</attr>
<attr>d22
Digital ingång som representerar bit nummer 22.
</attr>
<attr>d23
Digital ingång som representerar bit nummer 23.
</attr>
<attr>d24
Digital ingång som representerar bit nummer 24.
</attr>
<attr>d25
Digital ingång som representerar bit nummer 25.
</attr>
<attr>d26
Digital ingång som representerar bit nummer 26.
</attr>
<attr>d27
Digital ingång som representerar bit nummer 27.
</attr>
<attr>d28
Digital ingång som representerar bit nummer 28.
</attr>
<attr>d29
Digital ingång som representerar bit nummer 29.
</attr>
<attr>d30
Digital ingång som representerar bit nummer 30.
</attr>
<attr>d31
Digital ingång som representerar bit nummer 31.
</attr>
<attr>d32
Digital ingång som representerar bit nummer 32.
</attr>
<attr>Mask
Bit-mask.
</attr>
</class>

#
# Class DtoStr
#
<class> DtoStr
@Summary Konvertera digitalt värde till sträng.
Konvertera digitalt värde till sträng.
@image orm_dtostr_fo.gif

DtoStr objektet konverterar värdet på den digitala ingången till en sträng
som lagras i ActVal.

Observera att felaktiga format specifikationer kan få plc-programmet att
terminera. Storleken på den resulterande strängen ska inte överskrida
79 tecken.

<attr>In
Digital ingång som konverteras till sträng.
</attr>
<attr>Format
c-format som specificerar konverteringen.
</attr>
<attr>ActVal
Utgång som innehåller strängen.
</attr>
</class>

#
# Class Dv
#
<class> Dv
@Summary Digitalt värde
Digitalt värde. 

Konfigurerar beräknad binär storhet under 'Plant Configuration'. Storheten 
används som en binär flagga med värdena TRUE eller FALSE. 

@b Tips 

Placera i utvecklingsmiljön objektet under $PlantHier objekt. 

Objektet tilldelas initialt värde (? FALSE ) i målnoden, t.ex. med hjälp av 
StoDv.

@b Objektsbild
 @image orm_dv_og.png

<attr>Description 
Valfri beskrivande text för att beskriva vad storheten representerar eller vad 
den används till.
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de DvArea-objekt som används för 
bas- resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>InitialValue
InitialValue anger signalens startvärde vid s.k. kallstart. Vilket värde som utgör 
startvärde vid varmstart ( = PLC-programbyte) beror på om signalen är ny eller 
ej. Existerade signalen i förra programversionen används dess sista ärvärde 
som startvärde, annars InitialValue. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Edge
#
<class> Edge
@Summary Flankdetektor
Flankdetektor. 
@image orm_edge_fo.gif

Används för att detektera en positiv flank. 

Efter detektering sätts utsignalen TRUE under en programcykel. 

<attr>In 
Anger övervakad storhet. 

Ingången kan med hjälp av Objekts Editorn fås att invertera insignalen för 
avkänning av negativ flank. 
</attr>

<attr>Status 
När den övervakade signalen gör övergången FALSE -- > TRUE sätts 
utgången för att vid nästa exekvering tas ned igen. 
</attr>

<attr>StatusOld 
Anger den övervakade signalens värde vid senaste exekvering. 
</attr>
</class>

#
# Class EmumToD
#
<class> EnumToD
@Summary Identifiera ett uppräknings-värde.
Identifiera ett uppräknings-värde.
@image orm_enumtod_fo.gif

Ingångs-värdet jämförs med värden i en intern vektor, som default har
värdena 0, 1, 2, ..., 31. Om värdet på ingången är lika med ett värde
i vektorn, sätts motsvarande utgång till sann, annars sätts den till falsk.

@ Se även
<attr>Enum
Ingång för Uppräknings-värde.
</attr>
<attr>EnumValues
Vektor med uppräknings-värden.
Vektorn innehåller de uppräknings-värden som ingångs-värdet jämförs med.
Om ingångs-värdet är lika med ett värde i vektorn, sätts motsvarande
digitala utgång till sann, annars sätts den till falsk.
</attr>
<attr>od0
Digital utgång som representerar uppräknings-värdet i index 0 av EnumValues.
</attr>
<attr>od1
Digital utgång som representerar uppräknings-värdet i index 1 av EnumValues.
</attr>
<attr>od2
Digital utgång som representerar uppräknings-värdet i index 2 av EnumValues.
</attr>
<attr>od3
Digital utgång som representerar uppräknings-värdet i index 3 av EnumValues.
</attr>
<attr>od4
Digital utgång som representerar uppräknings-värdet i index 4 av EnumValues.
</attr>
<attr>od5
Digital utgång som representerar uppräknings-värdet i index 5 av EnumValues.
</attr>
<attr>od6
Digital utgång som representerar uppräknings-värdet i index 6 av EnumValues.
</attr>
<attr>od7
Digital utgång som representerar uppräknings-värdet i index 7 av EnumValues.
</attr>
<attr>od8
Digital utgång som representerar uppräknings-värdet i index 8 av EnumValues.
</attr>
<attr>od9
Digital utgång som representerar uppräknings-värdet i index 9 av EnumValues.
</attr>
<attr>od10
Digital utgång som representerar uppräknings-värdet i index 10 av EnumValues.
</attr>
<attr>od11
Digital utgång som representerar uppräknings-värdet i index 11 av EnumValues.
</attr>
<attr>od12
Digital utgång som representerar uppräknings-värdet i index 12 av EnumValues.
</attr>
<attr>od13
Digital utgång som representerar uppräknings-värdet i index 13 av EnumValues.
</attr>
<attr>od14
Digital utgång som representerar uppräknings-värdet i index 14 av EnumValues.
</attr>
<attr>od15
Digital utgång som representerar uppräknings-värdet i index 15 av EnumValues.
</attr>
<attr>od16
Digital utgång som representerar uppräknings-värdet i index 16 av EnumValues.
</attr>
<attr>od17
Digital utgång som representerar uppräknings-värdet i index 17 av EnumValues.
</attr>
<attr>od18
Digital utgång som representerar uppräknings-värdet i index 18 av EnumValues.
</attr>
<attr>od19
Digital utgång som representerar uppräknings-värdet i index 19 av EnumValues.
</attr>
<attr>od20
Digital utgång som representerar uppräknings-värdet i index 20 av EnumValues.
</attr>
<attr>od21
Digital utgång som representerar uppräknings-värdet i index 21 av EnumValues.
</attr>
<attr>od22
Digital utgång som representerar uppräknings-värdet i index 22 av EnumValues.
</attr>
<attr>od23
Digital utgång som representerar uppräknings-värdet i index 23 av EnumValues.
</attr>
<attr>od24
Digital utgång som representerar uppräknings-värdet i index 24 av EnumValues.
</attr>
<attr>od25
Digital utgång som representerar uppräknings-värdet i index 25 av EnumValues.
</attr>
<attr>od26
Digital utgång som representerar uppräknings-värdet i index 26 av EnumValues.
</attr>
<attr>od27
Digital utgång som representerar uppräknings-värdet i index 27 av EnumValues.
</attr>
<attr>od28
Digital utgång som representerar uppräknings-värdet i index 28 av EnumValues.
</attr>
<attr>od29
Digital utgång som representerar uppräknings-värdet i index 29 av EnumValues.
</attr>
<attr>od30
Digital utgång som representerar uppräknings-värdet i index 30 av EnumValues.
</attr>
<attr>od31
Digital utgång som representerar uppräknings-värdet i index 31 av EnumValues.
</attr>
</class>

#
# Class EventPrinter
#
<class> EventPrinter
@Summary Konfigurerar logisk händelseskrivare. 
Konfigurerar logisk händelseskrivare. 

Konfigurerar en logisk skrivare för utskrift av t.ex. larm och info-meddelanden.
Placeras under $Node-objektet i den nod där utskriftsprocessen kommer att 
exekvera. Utskriftsprocessen, som enbart finns för s. k. operatörsnoder, heter 
pwr_exe:rs_mh_eventprinter.exe 

<attr>Description 
Fri text för att beskriva EventPrinter-objektet. 
</attr>

<attr>DeviceName 
Anger terminalportens namn, t.ex. LTA55 
</attr>

<attr>PrinterName 
Ej använd. 
</attr>

<attr>PrinterNumber 
Ej använd. 
</attr>

<attr>PrinterType 
Ej använd. 
</attr>

<attr>PrintItemFormat
Ej använd. 
</attr>

<attr>TimeFormat 
Ej använd. 
</attr>

<attr>RowSize 
Anger radlängden. 
</attr>

<attr>SelectList
Meddelanden initierade av ASup - resp DSup-objekt får samma identitet som 
övervakat objekt. För mh_ApplMessage-meddelanden ( se ProviewR 
Programmer's Reference Manual ) bestäms identiteten av anropsparametern 
EventName . 

I SelectList anges hierarkin för de meddelanden som ska skickas till 
EventPrinter-objektet. Upp till 10 olika hierarkier kan anges. önskas t.ex 
meddelanden från en nods Watchdog-objekt anges nodens namn här. 

Lämnas SelectList blank skickas inga meddelanden till EventPrinter - objektet 
såvida det inte finns ASup - resp DSup-objekt med EventFlag = 8. 
</attr>
</class>

#
# Class Filter
#
<class> Filter
@Summary Första ordningens filter
Första ordningens filter. 
@image orm_filter_fo.gif

Insignalen får en exponentiell utjämning enligt: 

VAL = a · In t + (1 - a) · X = X + a · ( In t - X) , där 

X = FeedB, om FeedB är kopplad
    ActValt - 1, annars

a = ScanTime / FiltCon och 0 < a < 1.0. Om a = 1.0 sker ingen filtrering. 
 
@b Tips 

NB! För att undvika vikning krävs att alla frekvenskomponenter över halva 
samplingsfrekvensen med minst AD-omvandlarens upplösning måste filtreras 
bort analogt. 

En extern signal kan också användas som återkoppling, t ex
@image orm_en1-77.gif

@b Exempel 

Om a (= ScanTime / FiltCon ) är litet, 0.1 - 0.2, får utsignalen karaktären av 
uppdaterat väntevärde, som långsamt uppdateras. 
@image orm_en1-78.gif

<attr>In 
Värde på insignalen. 
</attr>

<attr>FeedB 
Extern återkoppling. Om ingången lämnas öppen kommer VAL-utgången att 
användas som intern insignal. 
</attr>

<attr>ActVal 
Filtrerat värde, se ovan. 
</attr>

<attr>ScanTime 
Programcykeltid (= samplings intervallet), i sekunder, lagras automatiskt vid 
kompilering. 
</attr>

<attr>FiltCon 
Filterkonstanten, i sekunder, kan vara fix eller ändringsbar. FiltCon > 
ScanTime är giltigt värde. FiltCon = ScanTime ger ingen filtrering. 
</attr>

<attr>AccCon 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
FiltCont . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinCon
Minsta tillåtna värde vid operatörsändring av FiltCon. 
</attr>

<attr>MaxCon 
Största tillåtna värde vid operatörsändring av FiltCon. 
</attr>
</class>

#
# Class FirstScan
#
<class> FirstScan
@Summary Indikerar första varvet i plc-tråden.
Indikerar första varvet i plc-tråden.
Värdet på utgången är sann första gången plc-tråden exekverar. Efter
det är den falsk.
Efter en mjuk omstart är värdet också sant.
@image orm_firstscan_fo.gif
<attr>Status
Sann första varvet efter start eller omstart.
</attr>
</class>

#
# Class Form
#
<class> Form
@Summary Konfigurerar fönster för visning av formulär. 
@h2 Föråldrad sedan V3.4
Konfigurerar fönster för visning av formulär. 

För att på bildskärm kunna visa formulär krävs att de knyts till Form-objekt 
placerade i de operatörsnoder där visning ska ske.
Användare (i betydelsen 'user') av operatörsstation representeras av User 
objekt. Ska användare av en operatörsstation kunna ta upp formulär krävs dels 
att formulärets namn finns i ett Form-objekt, dels att Form objektet anges i 
någon FastAvail -parameter i användarens User-objekt. Ett Form objekt kan 
refereras av flera User objekt.
Flera Form-objekt samlas med fördel under egen etikett (hierarki).
Formulär och processgrafik hanteras på liknande sätt. Formulären representeras 
av Form-objekt och processgrafiken av Graph-objekt. 

@b Tips 

Form objekt konfigureras ofta analogt med Graph objekt. 

@b Se även 

<attr>Description 
Valfri text. 
</attr>

<attr>FormName 
Anger namnet på formulärets frm-fil exklusive filkatalog och filtyp . 
</attr>

<attr>MaxNoOfInstances 
Anger max antal instanser av formuläret FormName som samtidigt tillåts 
existera på bildskärmen. Om MaxNoOfInstances = 1, formuläret finns på 
bildskärmen och operatören begär upp formuläret på nytt läggs det alltså inte 
ut. 
</attr>
</class>

#
# Class Frame
#
<class> Frame
En-radiga textobjekt. 

Utskrifter gjorda med resp objekts default attribut: 

Om ingen text anges i t.ex Frame objektet kan det användas för att rama in 
andra objekt. 
@image orm_text_3.gif

Frame, Head, Text och Title skiljer sig enbart i fråga om attributens 
defaultvärde. De används i Document objekt där t.ex 

Title används för att ange vad konfiguration på sidan gör, dess funktion. 
Head anger olika delfunktioner. 
Frame och Text för detaljinformation. 

@b Tips 

Ett välskrivet PLC program kan förutom de för datorexekveringen nödvändiga 
objekten också innehålla objekt vars syfte är att och göra programmet mer 
lättillgängligt vid senare betraktande.

Title , Head and Text Objects Make the Program Easy to Read. 

<attr>Text 
Anger den text som ska visas i objektet. 
</attr>

<attr>TextAttribute 
Attributet påverkar textens utseende. Följande värden finns: 
@image orm_text_1.gif
</attr>
 
<attr>FrameAttribute 
Attributet anger om texten ska omges med ram. 
@image orm_text_2.gif
</attr>
 
<attr>FrameWidth
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>

<attr>FrameHeight 
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>
</class>

#
# Class Text
#
<class> Text
En-radiga textobjekt. 

Utskrifter gjorda med resp objekts default attribut: 

Om ingen text anges i t.ex Frame objektet kan det användas för att rama in 
andra objekt. 
@image orm_text_3.gif

Frame, Head, Text och Title skiljer sig enbart i fråga om attributens 
defaultvärde. De används i Document objekt där t.ex 

Title används för att ange vad konfiguration på sidan gör, dess funktion. 
Head anger olika delfunktioner. 
Frame och Text för detaljinformation. 

@b Tips 

Ett välskrivet PLC program kan förutom de för datorexekveringen nödvändiga 
objekten också innehålla objekt vars syfte är att och göra programmet mer 
lättillgängligt vid senare betraktande.

Title , Head and Text Objects Make the Program Easy to Read. 

<attr>Text 
Anger den text som ska visas i objektet. 
</attr>

<attr>TextAttribute 
Attributet påverkar textens utseende. Följande värden finns: 
@image orm_text_1.gif
</attr>
 
<attr>FrameAttribute 
Attributet anger om texten ska omges med ram. 
@image orm_text_2.gif
</attr>
 
<attr>FrameWidth
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>

<attr>FrameHeight 
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>
</class>

#
# Class Head
#
<class> Head
En-radiga textobjekt. 

Utskrifter gjorda med resp objekts default attribut: 

Om ingen text anges i t.ex Frame objektet kan det användas för att rama in 
andra objekt. 
@image orm_text_3.gif

Frame, Head, Text och Title skiljer sig enbart i fråga om attributens 
defaultvärde. De används i Document objekt där t.ex 

Title används för att ange vad konfiguration på sidan gör, dess funktion. 
Head anger olika delfunktioner. 
Frame och Text för detaljinformation. 

@b Tips 

Ett välskrivet PLC program kan förutom de för datorexekveringen nödvändiga 
objekten också innehålla objekt vars syfte är att och göra programmet mer 
lättillgängligt vid senare betraktande.

Title , Head and Text Objects Make the Program Easy to Read. 

<attr>Text 
Anger den text som ska visas i objektet. 
</attr>

<attr>TextAttribute 
Attributet påverkar textens utseende. Följande värden finns: 
@image orm_text_1.gif
</attr>
 
<attr>FrameAttribute 
Attributet anger om texten ska omges med ram. 
@image orm_text_2.gif
</attr>
 
<attr>FrameWidth
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>

<attr>FrameHeight 
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>
</class>

#
# Class Title
#
<class> Title
En-radiga textobjekt. 

Utskrifter gjorda med resp objekts default attribut: 

Om ingen text anges i t.ex Frame objektet kan det användas för att rama in 
andra objekt. 
@image orm_text_3.gif

Frame, Head, Text och Title skiljer sig enbart i fråga om attributens 
defaultvärde. De används i Document objekt där t.ex 

Title används för att ange vad konfiguration på sidan gör, dess funktion. 
Head anger olika delfunktioner. 
Frame och Text för detaljinformation. 

@b Tips 

Ett välskrivet PLC program kan förutom de för datorexekveringen nödvändiga 
objekten också innehålla objekt vars syfte är att och göra programmet mer 
lättillgängligt vid senare betraktande.

Title , Head and Text Objects Make the Program Easy to Read. 

<attr>Text 
Anger den text som ska visas i objektet. 
</attr>

<attr>TextAttribute 
Attributet påverkar textens utseende. Följande värden finns: 
@image orm_text_1.gif
</attr>
 
<attr>FrameAttribute 
Attributet anger om texten ska omges med ram. 
@image orm_text_2.gif
</attr>
 
<attr>FrameWidth
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>

<attr>FrameHeight 
I det fall objektet har ram bestämmer attributen ramens storlek. 

0, 0 innebär att ramstorleken anpassas efter den aktuella textlängden. 

Används objektet bara för att rama in andra objekt ökas default värdena så att 
ramen får den önskade storleken. 
</attr>
</class>

#
# Class FriendNodeConfig
#
<class> FriendNodeConfig
@Summary Konfiguerar extern ProviewR node.
FriendNodeConfig objektet konfiguerar en ProviewR nod som tillhör ett annat
projekt, men som äger en volym som monteras av någon nod i det nuvarande 
projektet.

FriendNodeConfig objektet skapas i projekt volymen som barn till ett
BusConfig objekt i nod-hierarkin.

@b Se även
<attr>Description
Beskrivning av noden.
</attr>
<attr>NodeName
Nodens namn.
</attr>
<attr>Address
Nodens Ip adress.
</attr>
<attr>Port
QCOM port, om den skiljer sig från standard porten.
</attr>
<attr>Volume
Namn på nodens rot-volym.
</attr>
</class>

#
# Class GetAGeneric
#
<class> GetAGeneric
Ett GetAGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en analog ingång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_getageneric_fo.gif
</class>

#
# Class GetDGeneric
#
<class> GetDGeneric
Ett GetDGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en digital ingång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_getdgeneric_fo.gif
</class>

#
# Class GetIGeneric
#
<class> GetIGeneric
Ett GetIGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en heltals-ingång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_getigeneric_fo.gif
</class>

#
# Class GetSGeneric
#
<class> GetSGeneric
Ett GetSGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en sträng ingång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_getsgeneric_fo.gif
</class>

#
# Class StoAGeneric
#
<class> StoAGeneric
Ett StoAGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en analog utgång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_stoageneric_fo.gif
</class>

#
# Class StoDGeneric
#
<class> StoDGeneric
Ett StoDGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en digital utgång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_stodgeneric_fo.gif
</class>

#
# Class StoIGeneric
#
<class> StoIGeneric
Ett StoIGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en heltals-utgång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_stoigeneric_fo.gif
</class>

#
# Class StoSGeneric
#
<class> StoSGeneric
Ett StoSGeneric objekt är ett tillfälligt objekt, skapat i plc-editorn när
en koppling skapas från en sträng utgång. Objektet kommer att transformeras
till sin slutgiltiga form när det kopplas till en signal eller attribut. 
@image orm_stosgeneric_fo.gif
</class>

#
# Class GetAi
#
<class> GetAi
@Summary Hämtar värdet på Ai-signal 
Hämtar värdet på Ai-signal (GET Analog Input). 
@image orm_getai_fo.gif

Hämtar angiven Ai-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide . 

Ai-objektets fullständiga namn anges; dess sista namnled visas i GetAi - 
symbolens högra del. 

GetAi-objektet: 
- är en adressreferens till Ai-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Ai-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4.

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>AiObject 
Används av PLC Editorn. Anger Ai-objektets fullständiga namn. 
</attr>

<attr>AiObjectSegments 
Anger hur många segment av Ai-objektets namn som ska visas i GetAi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ai-objektet kopplade kanalobjektet ska visas i 
GetAi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetAi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetAo
#
<class> GetAo
@Summary Hämtar värdet på Ao-signal
Hämtar värdet på Ao-signal (GET Analog Output). 
@image orm_getao_fo.gif

Hämtar angiven Ao-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide . 

Ao-objektets fullständiga namn anges; dess sista namnled visas i GetAo - 
symbolens högra del. 

GetAo-objektet: 
- är en adressreferens till Ao-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 


@b Tips 

Det är lämpligt att ange Ao-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4. 

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>AoObject 
Används av PLC Editorn. Anger Ao-objektets fullständiga namn. 
</attr>

<attr>AoObjectSegments 
Anger hur många segment av Ao-objektets namn som ska visas i GetAo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ao-objektet kopplade kanalobjektet ska visas i 
GetAo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetAo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetAp
#
<class> GetAp
@Summary Hämtar värdet på analogt attribut
Hämtar värdet på analogt attribut (GET Analog Parameter). 
@image orm_getap_fo.gif

Hämtar värdet på analog storhet (= pwr_tFloat32) i godtyckligt objekt. 
Storheten kan avse skalär eller element i 1-dimensionell vektor. Antag ett 
objekt som bl. a. innehåller den analoga vektorn Temp[3]. Då gäller att 
Temp[0] refererar 1:a elementet i vektorn, Temp[1] det 2:a o.s.v. 

Storhetens fullständiga namn anges; se nedan. 

GetAp-objektet: 
- är en adressreferens till godtyckligt objekt 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Ett praktiskt sätt att ange den analoga storhetens fullständiga namn i GetAp -
objektet är följande: 

Välj, i Navigatören, aktuellt PLC program och starta PLC Editorn från popup-
menyn med hjälp av MB3 (=MouseButton knapp 3) genom att välja 'PLC 
Edit...' 
Välj 'Edit' i PLC Editorn och skapa ett GetAp-objekt 
Tag parallellt med PLC Editorn upp Navigatören och markera (välj ut) det 
objekt som innehåller den analoga storhet som GetAp-objektet ska hämta; t.ex. 
EX1-CONTROL-W-PID0 
Tryck ned Ctrl-tangenten och dubbelklicka samtidigt med MB1 ( vänstra 
knappen på en 3-knappars mus) på GetAp-objektets klassnamn, 'GetAp'. 
Därvid kopieras namnet på det i Navigatören utvalda objekt till GetAp- 
objektet. Det kopierade namnets sista namnled visas i GetAp-objektets symbol; 
se 'PID0' nedan. 
Dubbelklicka med MB1 på GetAp-objektet för att starta Objekts Editorn. 
Editera in under Parameter aktuellt parameternamn; t.ex. ControlDiff . Detta 
namn kommer också att skrivas ut i GetAp-objektets symbol.
Kom ihåg att dubbelklick med MB2 på ett objekt innebär att objektet raderas. 

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>ApObject 
Används av PLC Editor. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>ApObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
GetAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetAv
#
<class> GetAv
@Summary Hämtar värdet på Av-signal
Hämtar värdet på Av-signal (GET Analog Value). 
@image orm_getav_fo.gif

Hämtar angiven Av-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide .
Av-objektets fullständiga namn anges; dess sista namnled visas i GetAv - 
symbolens högra del. 

GetAv-objektet: 
- är en adressreferens till Av-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Av-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>ActVal
Används av PLC Editorn.
</attr>

<attr>AvObject
Används av PLC Editorn. Anger fullständigt namn på aktuellt Av-objekt. 
</attr>

<attr>AvObjectSegments 
Anger hur många segment av Av-objektets namn som ska visas i GetAv-
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class GetDi
#
<class> GetDi
@Summary Hämtar värdet på Di-signal
Hämtar värdet på Di-signal (GET Digital Input). 
@image orm_getdi_fo.gif

Hämtar angiven Di-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide . 

Di-objektets fullständiga namn anges; dess sista namnled visas i GetDi - 
symbolens högra del. 

GetDi-objektet: 
- är en adressreferens till Di-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 


@b Tips 

Det är lämpligt att ange Di-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4. 

<attr>Status 
Används av PLC Editorn. 
</attr>

<attr>DiObject 
Används av PLC Editorn. Anger Di-objektets fullständiga namn. 
</attr>

<attr>DiObjectSegments 
Anger hur många segment av Di-objektets namn som ska visas i GetDi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till signalobjektet kopplade kanalobjektet ska visas i 
GetDi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetDi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetDo
#
<class> GetDo
@Summary Hämtar värdet på Do-signal
Hämtar värdet på Do-signal (GET Digital Output). 
@image orm_getdo_fo.gif

Hämtar angiven Do-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide . 

Do-objektets fullständiga namn anges; dess sista namnled visas i GetDo -
symbolens högra del. 

GetDo-objektet: 
- är en adressreferens till Do-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Do-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4. 

<attr>Status 
Används av PLC Editorn. 
</attr>

<attr>DoObject 
Används av PLC Editorn. Anger Do-objektets fullständiga namn. 
</attr>

<attr>DoObjectSegments 
Anger hur många segment av Do-objektets namn som ska visas i GetDo-
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Do-objektet kopplade kanalobjektet ska visas i 
GetDo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetDo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetDp
#
<class> GetDp
@Summary Hämtar värdet på digitalt attribut
Hämtar värdet på digitalt attribut (GET Digital Parameter). 
@image orm_getdp_fo.gif

Hämtar värdet på binär storhet t.ex. utsignal från objekt eller internt digitalt 
attribut ( skalär eller element i 1-dimensionell vektor) i godtyckligt objekt. 

Storhetens fullständiga namn anges; se nedan. 

GetDp-objektet: 
- är en adressreferens till godtyckligt objekt 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet, 
steg 1  5.

<attr>Status 
Används av PLC Editorn. 
</attr>

<attr>DpObject 
Används av PLC Editorn. Anger fullständigt namn på aktuellt objekt. 
</attr>

<attr>DpObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
GetDp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Används av PLC Editorn. Anger parameterns fullständiga namn. PLC Editorn 
är 'case sensitive' vad gäller detta attribut. Avses ActualValue ska man i 
Objekts Editorn skriva ActualValue och inte t.ex. ACTUALVALUE. 
</attr>
</class>

#
# Class GetDv
#
<class> GetDv
@Summary Hämtar värdet på Dv-signal
Hämtar värdet på Dv-signal (GET Digital Value). 
@image orm_getdv_fo.gif

Hämtar angiven Dv-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide .
Dv-objektets fullständiga namn anges; dess sista namnled visas i GetDv -
symbolens högra del. 

GetDv-objektet: 
- är en adressreferens till Dv-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Dv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>Status 
Används av PLC Editorn. 
</attr>

<attr>DvObject 
Används av PLC Editorn. Anger fullständigt namn på aktuellt Dv-objekt. 
</attr>

<attr>DvObjectSegments 
Anger hur många segment av Dv-objektets namn som ska visas i GetDv-
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class GetIi
#
<class> GetIi
@Summary Hämtar värdet på Ii-signal 
Hämtar värdet på Ii-signal (GET Integer Input). 
@image orm_getii_fo.gif

Hämtar angiven Ii-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide. 

Ii-objektets fullständiga namn anges; dess sista namnled visas i GetIi- 
symbolens högra del. 

GetIi-objektet: 
- är en adressreferens till Ii-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Ii-objektets fullständiga namn på sätt som anges under 
GetAp-objektet.

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>IiObject 
Används av PLC Editorn. Anger Ii-objektets fullständiga namn. 
</attr>

<attr>IiObjectSegments 
Anger hur många segment av Ii-objektets namn som ska visas i GetIi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ii-objektet kopplade kanalobjektet ska visas i 
GetIi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetIi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetIo
#
<class> GetIo
@Summary Hämtar värdet på Io-signal
Hämtar värdet på Io-signal (GET Integer Output). 
@image orm_getio_fo.gif

Hämtar angiven Io-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide. 

Io-objektets fullständiga namn anges; dess sista namnled visas i GetIo- 
symbolens högra del. 

GetIo-objektet: 
- är en adressreferens till Io-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 


@b Tips 

Det är lämpligt att ange Io-objektets fullständiga namn på sätt som anges 
under GetAp-objektet. 

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>IoObject 
Används av PLC Editorn. Anger Io-objektets fullständiga namn. 
</attr>

<attr>IoObjectSegments 
Anger hur många segment av Io-objektets namn som ska visas i GetIo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Io-objektet kopplade kanalobjektet ska visas i 
GetIo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetIo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetIp
#
<class> GetIp
@Summary Hämtar värdet på analogt attribut
Hämtar värdet på analogt attribut (GET Integer Parameter). 
@image orm_getip_fo.gif

Hämtar värdet på heltals-storhet i godtyckligt objekt. 
Storheten kan avse skalär eller element i 1-dimensionell vektor. Antag ett 
objekt som bl. a. innehåller den analoga vektorn Temp[3]. Då gäller att 
Temp[0] refererar 1:a elementet i vektorn, Temp[1] det 2:a o.s.v. 

Storhetens fullständiga namn anges; se nedan. 

GetIp-objektet: 
- är en adressreferens till godtyckligt objekt 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Ip-objektets fullständiga namn på sätt som anges 
under GetAp-objektet. 

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>IpObject 
Används av PLC Editor. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>IpObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
GetAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetIv
#
<class> GetIv
@Summary Hämtar värdet på Iv-signal
Hämtar värdet på Iv-signal (GET Integer Value). 
@image orm_getiv_fo.gif

Hämtar angiven Iv-signals ingenjörsvärde från I/O-kopierad area. Se 
ProviewR Designer's Guide.
Iv-objektets fullständiga namn anges; dess sista namnled visas i GetIv - 
symbolens högra del. 

GetIv-objektet: 
- är en adressreferens till Iv-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Iv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet.

<attr>ActVal
Används av PLC Editorn.
</attr>

<attr>IvObject
Används av PLC Editorn. Anger fullständigt namn på aktuellt Iv-objekt. 
</attr>

<attr>IvObjectSegments 
Anger hur många segment av Iv-objektets namn som ska visas i GetIv-
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class GetIpToA
#
<class> GetIpToA
@Summary Hämtar värdet på heltalsattribut och konverterar till analogt värde.
Hämtar värdet på heltalsattribut och konverterar till analogs värde. 
@image orm_getiptoa_fo.gif

Hämtar i godtycklig instans värdet av 32-, 16- eller 8-bitars heltalsparameter. 
Parametern kan avse skalär eller element i 1-dimensionell vektor. 

Parameterns fullständiga namn anges.

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>IpObject 
Används av PLC Editor. Anger det aktuella objektets fullständiga namn. 
</attr>

<attr>IpObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
GetIpToA-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetPi
#
<class> GetPi
@Summary Hämtar värdet på Co-signal
Hämtar värdet på Co-signal (GET Pulse Input). 
@image orm_getpi_fo.gif

Hämtar I/O-kopierat råvärde från pulsgivarkort; RawValue från Co-objekt. 

Man kan välja att hämta kortets direkt avlästa råvärde ( som är ett 16 eller 24 
bitars tal) eller det utökade råvärdet (32 bitar) som tillhandahålls av I/O- 
kopieringen. Finns risk för 'overflow' bör det utökade råvärdet användas. 

Objektets sista namnled visas i GetPi -symbolens nedre fält; här PI0. 

 
GetPi-objektet: 
- är en adressreferens till Co-signalens värde i I/O-kopierad area 
- innehåller ingen relevant information i rtdb 
- saknar exekverbar kod 

@b Tips 

Det är lämpligt att ange Co-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>PulsIn 
Anger pulsräknarkortets avlästa råvärde RawValue (= 16 eller 24 bitars heltal). 
</attr>

<attr>PulsInEx 
Anger det utökade råvärdet RawValue (= 32 bitars heltal). 
</attr>

<attr>CoObject 
Används av PLC Editorn. Anger fullständigt namn på aktuellt Co-objekt. 
</attr>

<attr>CoObjectSegments 
Anger hur många segment av Co-objektets namn som ska visas i GetPi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Co-objektet kopplade kanalobjektet ska visas i 
GetPi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i GetPi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetSp
#
<class> GetSp
@Summary Hämtar värdet på ett sträng attribut
Hämtar värdet på ett sträng attribut (GET String Parameter). 
@image orm_getsp_fo.gif

Attributet kan vara en in- eller utsignal i ett godtyckligt objekt.
Storleken på attributet måste vara 80 byte eller mindre.

Storhetens fullständiga namn anges; se nedan. 

GetSp-objektet: 
- är en adressreferens till godtyckligt objekt 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

<attr>ActVal 
Används av PLC Editorn. 
</attr>

<attr>SpObject 
Används av PLC Editor. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>SpObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
GetAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class GetSv
#
<class> GetSv
@Summary Hämtar värdet på Sv-signal
Hämtar värdet på Sv-signal (GET String Value). 
@image orm_getsv_fo.gif

Sv-objektets fullständiga namn anges; dess sista namnled visas i GetSv - 
symbolens högra del. 

GetSv-objektet: 
- innehåller ingen relevant information (=data) i rtdb 
- saknar exekverbar kod 

<attr>ActVal
Används av PLC Editorn.
</attr>

<attr>SvObject
Används av PLC Editorn. Anger fullständigt namn på aktuellt Iv-objekt. 
</attr>

<attr>SvObjectSegments 
Anger hur många segment av Sv-objektets namn som ska visas i GetSv-
objektet. Segmenten räknas med början från signalobjektets sista namnled. 
</attr>
</class>

#
# Class Graph
#
<class> Graph
@Summary Konfigurerar fönster för visning av GMS-grafikbild. 
Konfigurerar fönster för visning av GMS-grafikbild. 

För att på bildskärm kunna visa GMS-grafik (t.ex. processbilder eller mer 
precis processgrafik) krävs att grafikbilden knyts till Graph-objekt placerade i 
de operatörsnoder där visning ska ske. 

Användare (i betydelsen 'user') av operatörsstation representeras av User 
objekt. De Graph-objekt som anges under FastAvail -parameter i användarens 
User-objekt kan operatören direkt aktivera från Operator Window. Ett Graph -
objekt kan refereras av flera User objekt. 

Flera Graph-objekt samlas med fördel under egen hierarki. 

Formulär och grafikbilder hanteras på liknande sätt. Formulären representeras 
av Form-objekt och grafikbilderna av Graph-objekt. 

@b Tips 

Knappen 'Graphic' i operatörsmiljön ger en lista över de Graph och Form 
objekt som finns på den aktuella noden oberoende av användare. 

Användarna 'Host' och 'Process', enligt figur 3-18, kommer att få samma lista 
men genom att gruppera i separata hierarkier kan konstruktören indikera vilka 
som är avsedda för 'Host' resp 'Process'. 

<attr>Title 
Fönstrets namn visas längst upp i fönstret. 

Graph objekt. Med hjälp av Title kan fönstret förses med eget namn. 
</attr>

<attr>Description 
Valfri text. 
</attr>

<attr>CodeBehind 
Anger om det finns applikationsskriven kod bakom GMS-grafiken eller inte. 
FALSE betyder att det saknas applikationskod och att ProviewR/ R:s paket 
för kodlösa bilder används; se också UpdateInterval . 

TRUE innebär att den GMS-grafik, som anges av GMS_Model , underhålls 
från ett applikationsskrivet program; se ClassName . 
</attr>

<attr>ClassName 
Om CodeBehind är TRUE identifierar attributet vilka rutiner som hör till 
bilden. Rutinerna bör länkas med operatörsmiljön. 
</attr>

<attr>GMS_Model 
Anger namnet på GMS-grafikens m1-fil exklusive filkatalog (= path) och filtyp 
(= extension). 
</attr>

<attr>UpdateInterval 
Om CodeBehind är FALSE, anges här uppdateringsperioden, i sekunder, för 
GMS-grafiken. 
</attr>

<attr>Width
För ett GMS-grafikbildfönster gäller att förhållandet mellan fönstrets höjd och 
bredd är konstant. ändras bredden kommer höjden att ändras på motsvarande 
sätt så att fönstrets proportioner bibehålls. 

Attributet anger fönstrets bredd uttryckt i pixel. Ett negativt värde ger default 
bredd. 

Om fönstret bredd ändras, uppdateras attributet, så att fönstrets senaste bredd 
kommer att användas nästa gång fönstret tas upp. 
</attr>

<attr>X
X och Y Anger, i pixel, var på bildskärmen GMS-grafikbildens fönster ska läggas 
ut. 
X, Y avser koordinaten för bildens övre vänstra hörn. Hela bildskärmsytan kan 
t.ex vara 1280 · 1024 pixel.
Om fönstret flyttas, uppdateras attributen, så att fönstrets senaste position 
kommer att styra var fönstret läggs ut nästa gång det tas upp. 

-1, -1 anger en default position. 
</attr>
<attr>Y
Se X
</attr>
 
<attr>GmsX1, GmsY1 resp GmsX2, GmsY2 
Attributen anger i GMS-koordinat system (World Coordinates) vilken del av 
arbetsytan som ska visas på bildskärmen. 
</attr>
<attr>GmsY1
Se GmsX1
</attr>
<attr>GmsX2 
Se GmsX1
</attr>
<attr>GmsY2 
Se GmsX1
</attr>
 
<attr>ScreenNo 
Attributet är avsett att ange numret på den monitor där fönstret ska visas. (Jfr. 
Server i OpPlace-objektets Display attribut.) 

-1 betyder att fönstret visas på samma monitor som Operator Window. 

Används ej idag. 
</attr>

<attr>RemSubscrWhenIcon 
Anger om GMS-grafikbildens prenumerationer ska tas ned eller ej då fönstret 
ikonifieras. FALSE innebär att de inte ska tas ned och TRUE att de ska tas ned 
då fönstret ikonifieras. Finns många fönster ikonifierade, som har 
RemSubscrWhenIcon = TRUE, belastas inte systemet av motsvarande 
prenumerationer. å andra sidan måste prenumerationerna sättas upp varje gång 
motsvarande fönster ska visas. 
</attr>
</class>

#
# Class Gray
#
<class> Gray
@Summary Konvertering graykod till flyttal.
Graykod ingång. Objektet omvandlar 16-bitars Graykod till decimaltal. 
@image orm_gray_fo.gif

Den kodning, som för att ändra utsignalen en enhet, alltid kräver att en och 
endast en digital insignal byter värde är Graykoden. 

16 binära positioner ger upplösningen 1 på 2 16 = 65 536. 

<attr>Din0
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din1
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din2
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din3
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din4
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din5
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din6
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din7
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din8
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>Din9
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinA
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinB
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinC
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinD
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinE
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>
<attr>DinF
di0 är minst signifikanta biten och diF mest signifikanta. 
</attr>

<attr>ActVal 
Anger omvandlingens resultat. 
</attr>

<attr>Inv 
Anger om alla ingångar ska inverteras eller ej. FALSE betyder att ingen ingång 
ska invertera sin insignal; TRUE innebär att alla ingångar ska invertera sin 
resp. insignal. Om t.ex, bara de 4 första ingångarna används, ska de övriga 12 
sättas till TRUE för att unvika fel. 
</attr>
</class>

#
# Class Ii
#
<class> Ii
@Summary Heltals-ingång.
Heltals-ingång. 

Konfigurerar heltals insignal i 'Plant Configuration'. 

@b Tips 

Placera objektet i utvecklingsmiljön under $PlantHier objekt så att det kommer 
att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objektsbild
 @image orm_ii_og.png

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de IiArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini.
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). ConversionOn i 
kanalobjektet ChanIi, anger om det inlästa värdet ska lagras.
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Inc3P
#
<class> Inc3P
@Summary Inkrementell 3-punksingång
Inkrementell 3 - punktsutgång med dödzon men utan lägesåterföring. 
Inkrementell syftar på insignalen och trean på att tre diskreta order kan ges 
med innebörden höger/vänster/ 0, upp/ner/0, öka/minska/0 etc. Utgångarna är 
satta under en tid som är proportionell mot storleken på insignalen. 
@image orm_en1-100.gif

Insignalen OutChange betraktas som ett reglerfel. Detta fel överförs till en tid 
genom multiplikation med Gain . Produkten adderas till ackumulatorn Acc.
Absolutvärdet av Acc begränsas till MaxWindup.

Om absolut värdet av Acc är större än MinTim sätts någon av utgångarna Open 
eller Close till TRUE. 

Om Acc > MinTim sätts 'öka' signalen (= Open ) så länge som Acc > 0 , om, å 
andra sidan, Acc < - MinTim sätts 'minska' signalen (= Close ) så länge som 
Acc < 0. Vid varje exekvering räknas värdet av Acc ned respektive upp med ett 
tidsbelopp av ScanTime , beroende på om 'öka' eller 'minska' signalen satts. 

För att undvika 'obefogade' styringrepp, som skulle kunna skada ställdon vid 
små reglerfel, måste absolutvärdet av Acc -attributet överstiga värdet på den 
ändringsbara dödzonen MinTim , innan någon reglersignal sätts.

@image orm_en1-101.gif
Output Signals from an Inc3P 

S.k. tidsproportionell reglering ('timerstyrning'), också använd av Pos3P.

Precis som för Pos3P är det möjligt att välja mellan att styra direkt med 
utgångarna Open / Close och/eller indirekt med signaler angivna av DoOpen / 
DoClose . Utgångar och signaler kan båda sätts TRUE med en frekvens som 
följer av det aktuella PlcPgm-objektets ScanTime . Men det är endast signaler 
som kan sättas FALSE av timerstyrningen . 

Fördelen med timerstyrning är förbättrad upplösning då det aktuella PLC 
programmet ej kör med PLC-jobbets bascykeltid. Timerstyrningen arbetar 
alltid med PLC-jobbets bascykeltid. Om Inc3P-objektet ingår i ett PlcPgm som 
kör med bascykeltiden, ger timerstyrningen inte denna fördel. 

@h2 Exempel
@b Timerstyrning av utgångar
Antag en flödesreglering med elektriskt ställdon för öka/minska styrning.
Flödessignalen (här 'kalle2') fnns. En lösning visas i figuren nedan. Notera
att PID-objektets inkrementella utgång används.
@image orm_en1-102.gif
Styrsignalerna har angivits vid DoOpen resp DoClose. Dess sista namnled
visas i Inc3p0-symbolen; här Do2 resp Do1.

@b Se även 

<attr>OutChange 
Styrsignalförändring. Hämtas i praktiken ofta från OutChange i ett Pid-objekt. 
</attr>

<attr>Open 
Anger om utgången ska sättas eller ej. FALSE betyder ingen aktivitet; TRUE 
innebär öppna ( upp, öka, höger eller vad som kan vara relevant i det enskilda 
fallet). 
</attr>

<attr>Close 
Anger om utgången ska sättas eller ej. FALSE betyder ingen aktivitet; TRUE 
innebär stäng ( ned, minska, vänster eller vad som kan vara relevant i det 
enskilda fallet). 
</attr>

<attr>Gain 
Förstärkning, i sekunder, per styrsignalenhet. 

Ofta ligger styrsignalen i intervallet 0 - 100 %. Antag att gångtiden kan mätas, 
t.ex tiden för att köra en ventil från fullt stängt till fullt öppet. Välj då Gain = 
gångtid / skalområdet; (här är skalområdet = 100 - 0 ). 
</attr>

<attr>MinTim 
Dödzon i sekunder; se beskrivning ovan. Om absolutvärdet av Acc är mindre 
än MinTim sätts ingen av utgångarna TRUE. 
</attr>

<attr>MaxTim 
Maximal löptid i sekunder för integrering utan ingrepp. Om tiden MaxTim har 
förlöpt utan att någon utsignal blivit TRUE nollställs Acc . 
</attr>

<attr>DoOpen 
Vid timerstyrning anger attributet namn på extern signal, t.ex Do eller Dv ( 
svarande mot Open ); även om DoOpen anger en signal manövreras Open av 
objektet. 
</attr>

<attr>DoClose 
Vid timerstyrning anger attributet namn på extern signal, t.ex Do eller Dv ( 
svarande mot Close ), även om DoClose anger en signal manövreras Close av 
objektet. 
</attr>

<attr>ScanTime 
Programcykeltid i sekunder. Lagras automatiskt vid kompilering. 
</attr>

<attr>Acc 
Ackumulerad styrsignal - ingrepp i form av tid. 
</attr>

<attr>AccTim 
Ackumulerad löptid utan ingrepp. 
</attr>

<attr>MaxWindup 
Absolutvärdet av Acc begränsas till MaxWindupsekunder, för att undvika oändlig 
uppvridning vid felsatta parametrar. Negativt eller noll ger ingen begränsning.
Bör vara nära gångtid från helt stängd till helt öppen. Default 30 sek.
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timerkön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när utgångarna ska sättas FALSE. TimerTime = 
PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>
</class>

#
# Class InitStep
#
<class> InitStep
@Summary Första steget i en Grafcet-kedja. 
Första steget i en Grafcet-kedja. 
@image orm_initstep_fo.gif

Minst ett InitStep-objekt ska finnas i varje sekvenskedja. 

Objektet är aktivt när det PLC program som innehåller objektet startar sin 
exekvering allra första gången. 

PlcPgm-objekt har ett attribut, ResetObject , där namnet på ett Di , Do , eller 
Dv objekt anges. Detta attribut används som reset signal i en eller flera 
sekvenskedjor i PLC program enligt följande. Då resetsignalen gör 
övergången: 

0 --> 1 blir samtliga Step , InitStep och Order objekt i PLC programmet 
inaktiva. Lagrade order ( se Order objekt) tas bort. 
1 --> 0 blir PLC programmets InitStep objekt aktiva. 
Erfordras individuella resetsignaler för varje enskild sekvenskedja måste 
antalet sekvenskedjor begränsas till en per PLC program 

De vertikala anslutningarna ansluts till Trans-objekt. 

Till den horisontella anslutningen kan samtidigt kopplas dels en eller flera 
Order-objekt, dels en eller flera Stoxx -, Setxx - eller Resxx objekt.
 
@h2 Exempel
I figuren nedan visas hur ett InitStop, ISO, kan konfigureras i en rak
sekvenskedja. En kedja sägs vara rak om den saknar förgreningar.
@image orm_en1-104.gif

And-objektet i figuren nedan kommer att exekvera varje gång PLC programmet
exekverar. Kompileringen resulterar i  varningen 'No Grafcet standard' på
grund av anslutningen mellan And objektet och Order objektet, men lösningen
fungerar.
@image orm_en1-105.gif

<attr>StatusIn 
Används av PLC Editorn. 
</attr>

<attr>StatusOut 
Används av PLC Editorn. 
</attr>

<attr>Order
Anger stegets tillstånd. FALSE betyder att steget är inaktivt och TRUE innebär 
att steget är aktivt. Värdet kan läsas med hjälp av GetDp objekt.
Order [0] används både av Order och objekt. 

Attributet sätts av ett i sekvensen föregående Trans objekt. Om efterföljande 
Trans objekts övergångsvillkor är uppfyllt, kontrolleras både Order [0] och 
Order [1]. Om Order [0] = Order [1] = TRUE kommer Order [0] att sättas 
FALSE av efterföljande steg. 

I pwr_inc:BaseClasses.h betecknas attributet Status[0] vilket är den beteckning 
som ska användas då attributet refereras. 
</attr>

<attr>Order
Dummy variabel som följer Order [0]. 

I pwr_inc:BaseClasses.h betecknas detta attribut Status[1] vilket är den 
beteckning som ska användas då attributet refereras. 
</attr>

<attr>ResetOld 
</attr>

<attr>StatusInit 
</attr>
</class>

#
# Class Inv
#
<class> Inv
Summary Inverterare. 
Inverterare. 
@image orm_inv_fo.gif

Inverterar en logisk signal. 

<attr>In 
Anger den logiska signal som ska inverteras. 
</attr>

<attr>Status 
Anger den inverterade insignalen. 
</attr>
</class>

#
# Class Io
#
<class> Io
@Summary Heltals-utgång
Heltals-utgång (Integer Output). 

Konfigurerar heltals-utsignal i 'Plant Configuration'.

@b Tips 

Placera i utvecklingsmiljön objektet under $PlantHier objekt så att det 
kommer att tillhöra samma målnod som dess associerade kanalobjekt. 

@b Objektsbild
 @image orm_io_og.png

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de IoArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue). 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class IOHandler
#
<class> IOHandler
@summary Konfigurering av IO processen.
Innehåller attribut som används av IO-jobbet. 

IO-jobbet hanterar, 

- analoga signaler anslutna till lokalt I/O-system
- analoga, digitala och pulsräknar signaler anslutna till distribuerade I/O-
system 

Objektet konfigureras i utvecklingsmiljön under $Node-objekt som 
representerar process nod. Detta ombesörjs normalt av utvecklingsmiljön i 
samband med konfigurering av $Node objekt. 

Har inget IOHandler objekt konfigurerats kommer ProviewR vid initiering av 
nodens realtidsmiljö att skapa ett. Attributen kommer då att innehåller 
defaultvärden. 

@b Objektsbild
 @image orm_iohandler_og.png

<attr>CycleTimeBus 
Anger, i sekunder, med vilken cykeltid Ai och Ao signaler anslutna till lokalt 
I/O-system ska läsas in från hårdvaran och konverteras till ingenjörsvärde resp 
konverteras till råvärde och ställas ut. 

Minsta tillåtna cykeltid är 0.1 sekund. 
</attr>

<attr>CycleTimeSerial 
En process nod kan förutom sitt lokala I/O-system under sig ha distribuerade 
I/O-system.
Attributet anger, i sekunder, med vilken cykeltid fysiska signalers (Ai, Ao, Co, 
Di och Do) råvärden ska läsas in från distribuerade I/O-system och omvandlas 
till ingenjörsvärden respektive omvandlas från ingenjörsvärden till råvärden 
och skickas ut till nodens distribuerade I/O-system.
Minsta tillåtna cykeltid är 0.5 sekunder. 
</attr>

<attr>IOReadWriteFlag 
Anger om den fysiska I/O-hårdvaran ska adresseras eller ej. FALSE betyder att 
ingen fysisk I/O-hårdvara ska adresseras; TRUE innebär att den ska adresseras. 

Om, noden har I/O och ska köra 'skarpt' sätts IOReadWriteFlag till TRUE och 
IOSimulFlag till FALSE. 
vill testa program utan att ha tillgång till I/O sätts IOReadWriteFlag till FALSE 
och IOSimuFlag till TRUE. Läsning och skrivning sker i den s.k. I/O-
kopierade arean. WATCH kan användas. 
Saknas I/O betyder det att Av och Dv är de enda signalobjekt som kan 
användas på vanligt sätt. Men för testning kan alla typer av signalobjekt 
användas. 
det vid omstart gällde att IOSimulFlag = TRUE, kan IOReadWriteFlag 
'togglas'. 
Attributet beaktas inte i fallet OperatingSystem = 2, dvs. av OpenVMS-noder. 
</attr>

<attr>IOSimulFlag
Anger om den fysiska I/O-hårdvaran ska initieras i samband med omstart eller 
ej. FALSE betyder att I/O:et initieras för läsning / skrivning och TRUE att det 
inte initieras. 

Attributet beaktas inte i fallet OperatingSystem = 2, dvs. av OpenVMS-noder. 
</attr>

<attr>NumberOfDI
Anger antal konfigurerade Di. 
</attr>

<attr>NumberOfDO
Anger antal konfigurerade Do. 
</attr>

<attr>NumberOfAI
Anger antal konfigurerade Ai.
</attr>

<attr>NumberOfAO 
Anger antal konfigurerade Ao.
</attr>

<attr>NumberOfAV
Anger antal konfigurerade Av. 
</attr>

<attr>NumberOfDV 
Anger antal konfigurerade Dv. 
</attr>

<attr>NumberOfCO 
Anger antal konfigurerade Co-objekt. 
</attr>

</class>

#
# Class ItoA
#
<class> ItoA
@Summary Konvertera heltals-värde till analogt.
Konvertera heltals-värde till analogt.
@image orm_itoa_fo.gif

ItoA objektet konverterar värdet på heltals-ingången till ett analogt
värde som lagras i ActVal.

<attr>In
Heltals-ingång som ska konverteras till analogt värde.
</attr>
<attr>ActVal
Utgång som innehåller det analoga värdet.
</attr>
</class>

#
# Class ItoStr
#
<class> ItoStr
@Summary Konvertera heltals-värde till sträng.
Konvertera heltals-värde till sträng.
@image orm_itostr_fo.gif

ItoStr objektet konverterar värdet på heltals-ingången till ett sträng-
värde som lagras i ActVal.

Observera att felaktiga format specifikationer kan få plc-programmet att
terminera. Storleken på den resulterande strängen ska inte överskrida
79 tecken.

<attr>In
Heltals-ingång som ska konverteras till sträng.
</attr>
<attr>Format
c-format som specificerar konverteringen.
</attr>
<attr>ActVal
Utgång som innehåller strängen.
</attr>
</class>

#
# Class Iv
#
<class> Iv
@Summary Integer värde
Integer värde. 

Konfigurerar beräknad heltals-storhet under 'Plant Configuration'. Värdet
är ett 32-bitars signed heltal. 

@b Tips 

Placera i utvecklingsmiljön objektet under $PlantHier objekt. 

@b Objektsbild
 @image orm_iv_og.png

<attr>Description 
Valfri beskrivande text för att beskriva vad storheten representerar eller vad 
den används till.
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de IvArea-objekt som används för 
bas- resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>InitialValue
InitialValue anger signalens startvärde vid s.k. kallstart. Vilket värde som utgör 
startvärde vid varmstart ( = PLC-programbyte) beror på om signalen är ny eller 
ej. Existerade signalen i förra programversionen används dess sista ärvärde 
som startvärde, annars InitialValue. 
</attr>

<attr>PresMinLimit
Skalområdets undre gräns i objektbildens stapeldiagramm. 
</attr>

<attr>PresMaxLimit
Skalområdets övre gräns i objektbildens stapeldiagramm. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>
</class>

#
# Class Limit
#
<class> Limit
@Summary Dubbelsidig begränsare
Dubbelsidig begränsare. Begränsar analog signal uppåt/nedåt och signalerar 
om begränsning sker. 
@image orm_limit_fo.gif

Gränserna Max och Min kan vara externa signaler eller ändringsbara 
parametrar. 
@image orm_en1-108.gif
 
Insignalen kan vara konstant medan en eller båda gränserna varierar. 

Om begränsning åt endera hållet inte ska göras kopplas insignalen även till 
denna gräns. 

@b Exempel 

Antag att Max och Min båda är anslutna till signaler på sådant sätt att 
gränserna flyter. Exemplet nedan visar varför det är lämpligt att ansluta 
flytande gränser via ett Maxmin-objekt. 

Antag att Max = 10, Min = 50 och In = 20.
Först kontrolleras In -värdet mot Max -värdet. Eftersom In är större än Max 
tilldelas ActVal värdet av Max (= 10). High = TRUE och Low = FALSE. 
Antag att Max = 10, Min = 50 och In = 0. 
In -värdet kontrolleras mot Max -gränsen. In är mindre än Max . 
Kontroll mot Min -gränsen. In är mindre än Min ==> ActVal = Min och Low = 
TRUE. 
Ny kontroll mot Max -gränsen!
ActVal (=50 ) > Max (=10) ==> ActVal = Max = 10 och High = TRUE. Det 
betyder att både High och Low är TRUE ! 

<attr>Max 
Anger aktuellt värde på maxgränsen. 
</attr>

<attr>In 
Anger aktuellt värde på insignalen. 
</attr>

<attr>Min 
Anger aktuellt värde på mingränsen. 
</attr>

<attr>ActVal 
Aktuellt värde.
</attr>
 
<attr>High 
Anger om begränsning uppåt skett eller ej. FALSE betyder ingen begränsning 
uppåt för ögonblicket; TRUE innebär att utsignalen begränsas uppåt till värdet 
av Max . 
</attr>

<attr>Low 
Anger om begränsning nedåt skett eller ej. FALSE betyder ingen begränsning 
nedåt för ögonblicket; TRUE innebär att utsignalen begränsas nedåt till värdet 
av Min . 
</attr>


<attr>AccMax
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Max resp Min . Om värdena uppdateras av externa signaler saknar manuella 
ändringar mening. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>
<attr>AccMin
Se AccMax
</attr>

<attr>MinmaxC, MaxmaxC 
Minsta tillåtna värde vid operatörsändring av Max. 
</attr>
<attr>MaxmaxC 
Största tillåtna värde vid operatörsändring av Max. 
</attr>

<attr>MinminC
Minsta och största tillåtna värde vid operatörsändring av Min. 
</attr>
<attr>MaxMinC 
Största tillåtna värde vid operatörsändring av Min. 
</attr>
</class>

#
# Class ListDescriptor
#
<class> ListDescriptor
@Summary Beskriver innehåll i och utseende på enskild lista. 
Beskriver innehåll i och utseende på enskild lista. 


Hjälpprogrammet pwrc innehåller olika funktioner för att operera på 
arbetsbänken, t.ex för att skapa listor. En given lista innehåller namnet på de 
objekt i arbetsbänken som uppfyller ett bestämt sökvillkor angivet i 
ListDescriptor objekt. 

Information om olika av typer standardlistor finns ProviewR Designer's 
Guide . De flesta standardlistor är sammansatta av flera listor, var och en 
bestämd av sitt ListDescriptor objekt. 

Genom att välja 'Utilities...' i Navigatörens Function-meny kan pwrc 
startas. Hjälpprogrammet pwrc kan också startas direkt från prompten: 

> pwrc ... och hjälpprogrammet svarar med prompten: 

pwrc > 

ProviewR distributionen levereras med några för-konfigurerade 
ListDescriptor objekt (strukturer) för standardlistor. De återfinns i 
Konfigurationseditorns 'Node Configuration' under hierarkin Layout-Lists. 
Kommandon för att skapa listor, vare sig man kör pwrc direkt eller 
indirekt via 'Utilities'-fönstret, använder dessa för-konfigurerade ListDescriptor 
objekt. 

Om något för-konfigurerat ListDescriptor objekt ska ändras bör hierarki 
objektet 'Lists' och hela hierarkin därunder först flyttas så att $System objektet 
blir det nya förälder objektet istället för $Layout objektet. pwrc 
programmet söker nämligen först efter objekt med namnet 'Lists', under 
$System objektet och först om inget hittats fortsätter sökningen efter 'Lists' 
under $Layout objektet. Dessutom, skulle vid nästa byte av ProviewR 
distribution, ett modifierat för-konfigurerat ListDescriptor objekt gå förlorat 
om det inte flyttats enligt ovan. 


- 

- 


@b Tips 

För att öka kunskapen om ListDescriptor objektens användning kan det vara 
konstruktivt att studera några av de för-konfigurerade ListDescriptor objektens 
(strukturer) som levereras med ProviewR distributionen. 

För att skapa en lista med hjälp av ListDescriptor objekt är det alltid möjligt att 
använda 'Utilities'-fönstret. Välj i kommando-boxens först 'List' och sedan 'List 
Descriptor'. Gör sedan 'insert' på det aktuella ListDescriptor objektet. 

<attr>Title 
Text som ska skrivas i rubrikdelen.
</attr>

<attr>PageHeader 
Rubriktext som ska skrivs längst upp på varje sida i utskriften. 
</attr>

<attr>AlphaOrder 
Anger i vilken ordning objektnamnen ska listas. Följande värden finns: 

0 -- Objektnamnen skrivs ut i samma ordning som de påträffas i arbets-
bänkens databas (samma ordning som de visas i t.ex Navigatören).
1 -- Objektnamnen skrivs ut i alfabetisk ordning med hänsyn till
objektnamnets första namnled.
2 -- Objektnamnen skrivs ut i alfabetisk ordning med hänsyn till
objektnamnets sista namnled.
3 -- Objektnamnen skrivs ut i alfabetisk ordning med hänsyn till
refererat objekts namn. 
</attr>

<attr>NoPrint 
Anger om namn på objekt som matchar sökkriteriet ska skrivas ut i ( ordinär 
eller avancerad) lista eller ej. TRUE betyder att objektnamnet inte ska skrivas 
ut; FALSE att det ska skrivas ut. 

Attributet har sin utgångspunkt i situationer där objektnamn används som rena 
söknycklar för underlistor. 
</attr>

<attr>NoPrintIfNoList 
Antag att ett objekt hittats enligt sökkriteriet. NoPrintIfNoList = TRUE betyder 
att objektnamnet skrivs ut i listan enbart om det följs av en icke-tom underlista. 
</attr>

<attr>Landscape 
Anger hur texten vid utskrift ska orienteras på papperet. 
</attr>

<attr>PageBreak 
1 -- Sidbyte före utskrift av namn på nytt objekt. Praktiskt t.ex. när
`förälder' listan innehåller flera underlistor.
2 -- Sidbyte och omstart av sidnumreringen till sid 1 före utskrift av namnet
på nästa objekt. 
</attr>

<attr>RowsToPageBreak 
Anger nr ny sida ska skapas i en utskrift. Sidbyte sker d antalet oskrivna rader, 
rknat frn slutet av sidan, r lika med RowsToPageBreak .
</attr>

<attr>ClearRowsPre
Anger antal blanka rader före objektnamn i listan. 
</attr>

<attr>ClearRowsPost 
Anger antal blanka rader efter objektnamn i listan. 
</attr>

<attr>ClearRowsPreList
Anger antal blanka rader i början av listan. 
</attr>

<attr>ClearRowsPostList 
Anger antal blanka rader i slutet av listan. 
</attr>

<attr>TableOfContents 
Anger om listan ska ha innehållsförteckning och i så fall hur den ska se ut. 
Följande värden finns: 

0 -- Ingen innehålsförteckning.
1 -- Namnet på ett objekt som matchar sökkriteriet ingår i innehålls-
förteckning enbart om det också skrivs ut i den egentliga listan.
2 -- Namnet på ett ojekt som matchar sökkriteriet ingår i innhålls-
förteckningen enbart om det inte skrivs ut i den egentliga listan; dvs. om
NoPrintIfNoList är true. 
TCSegments 

Anger hur många av objektens namnled som ska ingå i innehållsförteckningen. 
Namnleden räknas med början från det sista namnledet och framåt. 
</attr>

<attr>TCMarginString 
Anger antal blanktecken som ska föregå TcSegments . 
</attr>

<attr>Hierarchyobject 
Anger det objekt varifrån sökningen ska utgå. Om attributet lämnas blankt 
kommer alla objekt under 'Plant' och 'Node Configuration' att väljas. 
</attr>

<attr>Name 
Sökning efter objekt med ett angivet namn bland de objekt som uppfyller 
Hierarchyobject . 'Wildcards' (*) är tillåtet i Name . Om attributet lämnas 
blankt eller om objekt anges, som inte tillhör den mängd Hierarchyobject 
definierar, påverkas inte den av Hierarchyobject utvalda mängden. Se också 
Deep. 
</attr>

<attr>Class 
Sökning efter objekt som tillhör en bestämd klass eller någon av angivna 
klasser. Sökning utförs bland den mängd objekt som uppfyller Hierarchyobject 
och Name. 

Ange namn på klass/er, t.ex Di, Do, Dv, Ai, Ao, Av, Co. Då mer än en klass 
anges separeras klassnamnen med kommatecken. Se också Deep . 
</attr>

<attr>Deep 
Tilldela Deep värdet TRUE om sökningen ska göras på alla nivåer under 
utgångsobjektet och FALSE om sökningen ska begränsas till första nivån under 
utgångsobjektet. 
</attr>

<attr>Crossreference 
Anger om listan ska innehålla korsreferenser eller inte. En korsreferenslista 
innehåller namn varje objekt som refererar det aktuell signalobjektet eller, med 
andra ord, svarar på frågan -- Vem använder det aktuella signalobjektet? 
Sökningen utförs bland arbetsbänkens alla objekt. 
</attr>

<attr>Externreference 
Anger om listan ska innehålla externa referenser eller inte. Sökningen 
genomförs bland arbetsbänkens samtliga objekt. Antag att ett objekt hittas 
enligt söknyckeln: 

0 Inga externa referenser ska beaktas.

1 Objekt under utgångsobjekt kan referera till objekt/attribut som
varken är signalobjekt eller tillhör den aktuella hierarkin. Ange
"1" för att inkludera sådana objekt placerad i hierarkier utanför
den aktuell men refererade av objekt under utvalt objekt.

2 Signalobjekt refererade från objekt under utgångsobjekt
(vanligtvis Getxxx, Setxxx, Stoxxx etc) skrivs ut. Namnen på
kanalobjekt anslutna till signalobjekten skrivs också ut.

3 Objekt i hierarkier utanför den aktuella kan också referera till
attribut i objekt under utgångsobjektet. Ange "3" för att inklud-
era namn på objekt (signalobjekt undantagna) i andra hierarkier
med denna typ av referens.
</attr>

<attr>Parameter 
Om värdet på något av de utvalda objektens attribut ska ingå i en 'ordinär' lista 
anges attributets namn här. 
</attr>

<attr>Full 
Bitmask för att styra vilka av de utvalda objektens attribut som ska ingå i en 
'ordinär' utskrift. Olika flaggor får kombineras. Följande värden finns: 

0 Anger att attributet inte ska inverka på utskriften.

1 Alla attributvars värden skiljer sig från original (`template')
objektet ska ingå i utskriften.

2 Objektnamnet ska ingå i utskriften enbart om det modifierats.

4 Ändringar i attribut, som tillhör objektets RtBody (!), ska inte
ingå i utskriften.

8 Ändringar i attribut, som tillhör objektets DvBody (!), ska inte
ingå i utskriften.

16 

32 Ändringar i attribut, som tillhör objektets SysBody (!), ska inte
ingå i utskriften.

64 Tag med Stoxx, Setxx, och Resxx objekt vars ingångar lämnats
öppna och sedan tilldelats värde.
</attr>

<attr>ColumnHeader 
Anger om kolumnrubriker ska skrivas ut eller ej. TRUE betyder att 
P1ColumnHeader , P2ColumnHeader , ... kommer att skrivas ut. 
</attr>

<attr>ColHead_____ 
Anger om kolumnrubrikerna ska strykas under eller ej. TRUE betyder att 
kolumnrubrikerna ska strykas under. 
</attr>

<attr>P1Parameter 
'Avancerad' utskrift. För objekt som uppfyller sökvillkoret är det möjligt att 
ange vad som ska ingå i listan. Detta gäller både objektet själv och dess 
attribut. 

PrintObjName Det utvalda objektets hela namn ska skrivas ut.

PrintObjClass Det utvalda objektets klass ska skrivas ut.

PrintNode Det utvalda objektets nodtillhörighet skrivs ut.

PrintObjRefPar Utskrift av de objekt och attribut som tillhör andra
hierarkier men som refereras från objekt under
utgångsobjektet.

PrintRefObjPar Utskrift av objekt och attribut, belägna under
utgångsobjektet, där det finns referenser från
objekt utanför utgångsobjektet.

PrintRefObj Utskrift av objekt beläget under utgångsobjektet
som refereras från hierarkier utanför utgångs-
objektet.

PrintRefClass Utskrift av det refererade objektets klass enligt
PrintRefObjPar eller PrintRefObj .

PrintObjSigChan Utskrift av det anslutna objektets namn. Relevant
för signal- och kanalobjekt.

PrintSigChanId Utskrift av Identity. Relevant för kanalobjekt.

PrintWrite Utskrift av Write. Relevant för ExternRef objekt.
</attr>

<attr>P1ColumnHeader 
</attr>

<attr>P1MarginString 
Anger tecken som ska föregå PxParameter 
</attr>

<attr>P1PrintParName 
Anger om attributnamnet ska skrivas ut eller ej. TRUE betyder att attributets 
namn skrivs ut. 
</attr>

<attr>P1CarriageRet 
Anger om raden ska avslutas efter denna kolumn eller ej. TRUE betyder att 
detta är radens sista kolumn. 
</attr>

<attr>P1SizeTabs 
Anger kolumnbredd uttryckt som antal 'tabbar'. 
</attr>

<attr>P1Segments 
Anger hur många av objektets namnled som ska skrivas ut. Namnleden räknas 
med början från det sista namnledet och framåt. 

NB! Kolumn 2 till 15 hanteras på samma sätt som kolumn 1.
</attr>
</class>

#
# Class MaskToD
#
<class> MaskToD
@Summary Omvandlar en bitmask till digitala signaler.
@Summary Omvandlar en bitmask till digitala signaler.
@image orm_masktod_fo.gif

Objektet har en 32-bitar heltals-ingång, och 32 digitala utgångar.
Varje utgång representerar en bit i ingången. När en bit är 1, sätts
motsvarande utgång till sann. och när en bit är 0, sätts utgången till
falsk.

<attr>Mask
Bit mask.
</attr>
<attr>od1
Digital utgång som representerar bit 1.
</attr>
<attr>od2
Digital utgång som representerar bit 2.
</attr>
<attr>od3
Digital utgång som representerar bit 3.
</attr>
<attr>od4
Digital utgång som representerar bit 4.
</attr>
<attr>od5
Digital utgång som representerar bit 5.
</attr>
<attr>od6
Digital utgång som representerar bit 6.
</attr>
<attr>od7
Digital utgång som representerar bit 7.
</attr>
<attr>od8
Digital utgång som representerar bit 8.
</attr>
<attr>od9
Digital utgång som representerar bit 9.
</attr>
<attr>od10
Digital utgång som representerar bit 10.
</attr>
<attr>od11
Digital utgång som representerar bit 11.
</attr>
<attr>od12
Digital utgång som representerar bit 12.
</attr>
<attr>od13
Digital utgång som representerar bit 13.
</attr>
<attr>od14
Digital utgång som representerar bit 14.
</attr>
<attr>od15
Digital utgång som representerar bit 15.
</attr>
<attr>od16
Digital utgång som representerar bit 16.
</attr>
<attr>od17
Digital utgång som representerar bit 17.
</attr>
<attr>od18
Digital utgång som representerar bit 18.
</attr>
<attr>od19
Digital utgång som representerar bit 19.
</attr>
<attr>od20
Digital utgång som representerar bit 20.
</attr>
<attr>od21
Digital utgång som representerar bit 21.
</attr>
<attr>od22
Digital utgång som representerar bit 22.
</attr>
<attr>od23
Digital utgång som representerar bit 23.
</attr>
<attr>od24
Digital utgång som representerar bit 24.
</attr>
<attr>od25
Digital utgång som representerar bit 25.
</attr>
<attr>od26
Digital utgång som representerar bit 26.
</attr>
<attr>od27
Digital utgång som representerar bit 27.
</attr>
<attr>od28
Digital utgång som representerar bit 28.
</attr>
<attr>od29
Digital utgång som representerar bit 29.
</attr>
<attr>od30
Digital utgång som representerar bit 30.
</attr>
<attr>od31
Digital utgång som representerar bit 31.
</attr>
<attr>od32
Digital utgång som representerar bit 32.
</attr>
</class>

#
# Class Maxmin
#
<class> Maxmin
@Summary Max/Min väljare. 
Max/Min väljare. 
@image orm_maxmin_fo.gif

Maxmin-objektet väljer största respektive minsta värdet bland upp till 8 
insignaler, varav de två första kan vara konstanter. 

De använda ingångarna ska väljas konsekutivt. 

- 
@b Exempel 

Välj ut minsta värdet bland insignalerna AI1, AI2 och konstanten 3.5 

Lösning: - Koppla IN2 och IN3 till Ai- objekten AI1 och AI2.
- Lägg konstanten 3.5 på ingången In1 .
- MAX-utgången används inte varför den inte markeras i `Used'. 
- MIN-utgången innehåller det begärda värdet. 

<attr>In1
Värde på insignal 1.
</attr>
<attr>In2
Värde på insignal 2.
</attr>
<attr>In3
Värde på insignal 3.
</attr>
<attr>In4
Värde på insignal 4.
</attr>
<attr>In5
Värde på insignal 5.
</attr>
<attr>In6
Värde på insignal 6.
</attr>
<attr>In7
Värde på insignal 7.
</attr>
<attr>In8
Värde på insignal 8.
</attr>

<attr>MaxVal 
Största värde bland insignalerna; dvs Max ( In1 , In2 , ..., In8 ) 
</attr>

<attr>MinVal 
Minsta värde bland insignalerna; dvs. Min( In1 , In2 , ..., In8 ) 
</attr>
</class>

#
# Class MessageHandler
#
<class> MessageHandler
@Summary Konfigurering av eventmonitorn.
Objektet innehåller en enskild meddelandehanterares (=mh:s) attribut. 

Varje meddelandehanterare kräver ett MessageHandler objekt. 
@image orm_en1-120.gif

Message Handler Jobs in Different Nodes with their
MessageHandler Objects 

Om, för en given nod, MessageHandler-objektet inte konfigureras i 
utvecklingsmiljön kommer det likväl att skapas i målmiljön. I det senare fallet 
kommer attributen att få sina respektive standard (= default) värden. Om 
defaultvärdena inte kan accepteras konfigurera explicit ett MessageHandler 
objekt under den aktuella nodens $Node objekt. Ge det namnet 
'MessageHandler' och tilldela attributen önskade värden. 

I samband med konfigurering av $Node objekt ombesörjer utvecklingsmiljön 
normalt att MessageHandler-objektet skapas. 

@b Tips 

För information om meddelandehanteraren hänvisas till ProviewR 
Designer's Guide . 

@b Objektsbild
 @image orm_messagehandler_og.png

<attr>OutunitServer 
</attr>

<attr>BlockFile 
</attr>

<attr>EventLogSize 
</attr>

<attr>EventListSize 
</attr>

<attr>MaxApplAlarms 
Anger max antal samtidigt utestående larm från något tillämpningsprogram. 
Attributet används för att förhindra ett enskilt jobb från att helt lägga beslag 
på  meddelandehanterares händelselista.
</attr>

<attr>DetectTimer 
</attr>

<attr>MessageTimer 
</attr>

<attr>AlarmFirstIdx 
</attr>

<attr>AlarmLastIdx 
</attr>

<attr>AlarmCount 
</attr>

<attr>AlarmMaxCount 
</attr>

<attr>BlockFirstIdx 
</attr>

<attr>BlockLastIdx 
</attr>

<attr>BlockCount 
</attr>

<attr>BlockMaxCount 
</attr>

<attr>EventFirstIdx 
</attr>

<attr>EventLastIdx 
</attr>

<attr>EventCount 
</attr>

<attr>EventMaxCount 
</attr>

<attr>FreeCount 
</attr>

<attr>MaxNoOfEvents 
Anger max antal händelser som nodens meddelandehanterare samtidigt ska 
kunna rymma i sin händelselista, dvs händelsehorisonten. Då NoOfEvents 
överstiger MaxNoOfEvents skapas nytt utrymme i listan genom att den äldsta 
händelsen stryks från listan.
</attr>

<attr>NoOfEvents 
Antal händelser räknat från senaste omstart. 
</attr>

<attr>NoOfAlarms 
Antalet aktiva larm räknat från senaste omstart. 
</attr>
</class>

#
# Class Mode
#
<class> Mode
@Summary Val av reglermod för PID
Hanterar val av reglermod (MANUAL / AUTO / CASCADE) och s.k. 
tvångsstyrning åt Pid-objekt. 
@image orm_en1-121.gif

Följande reglermoder finns: 

MANUAL  -- då operatören själv sätter Pid-objektets styrsignal. 
AUTO    -- då operatören väljer börsvärde och Pid-objektet
           beräknar styrsignal. 
CASCADE -- utsignalen från ett objekt, t.ex. Pid-objekt, används som 
           börvärde av det med Mode-objektet associerade Pid-objektet. 
 

Tvångsstyrning innebär att Pid objektets OutVal baseras på Mode objektets 
attribut XForceVal , inte på PID-algoritmen.

Pid-objektet har två utgångar som båda kan användas som styrsignal. Vilken 
som används i det enskilda fallet beror på hur regleringen är ordnad: 

OUT (attributet OutVal ) innehåller ett värde som kan komma från 
evalueringen av PID-algoritmens 'positional form', från operatören i läge 
MANUAL eller vara ett s.k. tvångsstyrningsvärde. Kunskapen om var 
ställdonet ska stå ligger i detta fall på regulatorsidan eftersom hela värdet 
används. 
OC (attributet OutChange ) anger hur ställdonet ska ändras mellan två 
successiva programcykler. I detta fall talar man om PID-algoritmens 'velocity' 
eller 'incremental form'. 

@b Objektsbild
 @image orm_mode_og.png

<attr>XSetVal 
Externt börvärde (= Set point Val ue). Attributet används enbart i läge 
CASCADE och då på så sätt att SetVal = XSetVal . 
</attr>

<attr>ProcVal 
ärvärde (= Proc ess Val ue). Attributet används i Mode objektets objektbild vid 
visning av ärvärdet. 
</attr>

<attr>XForcVal 
Externt tvångsstyrningsvärde (= Forc ed Val ue). Attributet används enbart vid 
tvångsstyrning (dvs. Force1 eller Force2 är TRUE) och då på så sätt att 
ForceVal = XForceVal . 
</attr>

<attr>Forc1 
Anger om ovillkorlig tvångsstyrning valts eller ej.
</attr>

<attr>Forc2 
Anger, i läge AUTO och CASCADE, om tvångsstyrning valts eller ej.
</attr>

<attr>OutVal 
Då reglerkretsen sätts i läge MANUAL skulle processen få en större eller 
mindre stöt ('bump') om värdet på ForcVal inledningsvis avvek från det 
aktuella ärvärdet, ProcVal . 

För att undvika detta gäller följande: Vid omkoppling till läge MANUAL 
initieras internt FOV-utgången med värdet av OutVal . Alltså återstår att se till 
att värdet på OutVal ger 'bumpless transfer'. Detta brukar lösas med en analog 
återkoppling från Pid-objektets OUT -utgång. 
</attr>

<attr>SetVal 
Anger, i läge AUTO och CASCADE, aktuellt börvärde. Attributet kan i läge 

- MANUAL och AUTO, ändras från Mode objektets objektbild 

- CASCADE, internt tilldelas värdet av XSetVal . 

Ofta ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
</attr>

<attr>ForcVal 
Normalt ansluts utgången till motsvarande ingång på efterföljande Pid-objekt. 
Värdet på Pid-objektets utgångar OUT och OC kommer att baseras på ForcVal 
i följande fall: 

ovillkorlig tvångsstyrning, dvs Forc1 är TRUE och ForceVal = XForceVal 
villkorlig (= reglermod är AUTO eller CASCADE) tvångsstyrning då Force2 = 
TRUE och ForceVal = XForceVal 
OpMod = MANUAL. ForcVal sätts av operatören, t.ex från Mode-objektets 
objektbild. 
</attr>

<attr>Force 
Normalt ansluts utgången till motsvarande ingång på efterföljande Pid - objekt. 

Attributet anger för Pid-objektet om värdena till utgångarna OUT och OC ska 
hämtas från algoritmen eller ej. FALSE betyder att AUTO eller CASCADE 
gäller, dvs. värdena baseras på algoritmen. TRUE innebär att tvångskörning 
eller MANUAL gäller och att värdena istället ska bygga på FOV-utgångens 
värde. 
</attr>

<attr>AutMode 
Anger om reglermod AUTO valts eller ej. FALSE betyder att annan mode 
gäller; TRUE innebär att AUTO valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr>CascMode 
Anger om reglermod CASCADE valts eller ej. FALSE betyder att annan mode 
gäller; TRUE innebär att CASCADE valts. 

Eftersom ett efterföljande Pid-objekt inte behöver skilja mellan AUTO och 
CASCADE används attributet ofta för ren indikering. 
</attr>

<attr>OpMod 
Anger vald reglermod. Attributet kan ändras från Mode-objektets objektbild. 

= 1 MANUAL. Operatören väljer regulatorns styrsignal. Regulatorns
styrsignal tvångsstyrs till angivet värde i ForceVal.

MinOut och MaxOut definierar styrsignalens tillåtna intervall.

= 2 AUTO. Operatören väljer börvärde, Regulatorns börvärde = 
SetVal och styrsignalen räknar regulatorn fram.

MinSet och MaxSet definierar böbrvärdets tillåtna intervall.

= 4 CASCADE. Som i AUTO men regulatorns börvärde = XSetVal. 

 
Illustrates the Connection between Forced Control and
Control Modes 
</attr>

<attr>AccMod 
Anger operatörens behörighet att ändra värde på OpMod . Följande 
behörigheter är möjliga: 

1 -- Bara MANUAL 5 -- CASCADE / MANUAL
2 -- Bara AUTO 6 -- CASCADE / AUTO
3 -- MANUAL / AUTO 7 -- MANUAL / AUTO / CASCADE
4 -- Bara CASCADE
</attr>

<attr>AccOut 
Ej implementerad funktion. Anger operatörens behörighet att ändra ForcVal . 
Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinOut, MaxOut 

Minsta tillåtna värde vid operatörsändring av ForcVal . 

I läge MANUAL kan ForcVal ändras från Mode-objektets objektbild. 
</attr>

<attr>MaxOut

Största tillåtna värde vid operatörsändring av ForcVal . 

I läge MANUAL kan ForcVal ändras från Mode-objektets objektbild. 
</attr>

<attr>AccSet 
Ej implementerad funktion. Anger operatörens behörighet att ändra SetVal . 
Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinSet, MaxSet 
Minsta tillåtna värde vid operatörsändring av SetVal . 

I läge MANUAL och AUTO kan SetcVal ändras från Mode-objektets 
objektbild. 
</attr>

<attr>MaxSet 
Största tillåtna värde vid operatörsändring av SetVal . 

I läge MANUAL och AUTO kan SetcVal ändras från Mode-objektets 
objektbild. 
</attr>

<attr>SetMinShow
Undre gräns vid presentation av är-och börvärde i Mode-objektets 
objektbild. Gränserna kan ändras från objektbilden. 
</attr>

<attr>SetMaxShow 
Övre gräns vid presentation av är-och börvärde i Mode-objektets 
objektbild. Gränserna kan ändras från objektbilden. 
</attr>

<attr>OutMinShow
Undre gräns vid presentation av Pid-objektets OutVal i Mode -
objektets objektbild. Gränserna kan ändras från Mode-objektets MERbild. 
</attr>

<attr>OutMaxShow 
Övre gräns vid presentation av Pid-objektets OutVal i Mode -
objektets objektbild. Gränserna kan ändras från Mode-objektets MERbild. 
</attr>

<attr>SetEngUnit 
Anger ingenjörsenheten för XSetVal / SetVal / SetMinShow / SetMaxShow, t.ex kg.
Används i Mode-objektets objektbild. 
</attr>

<attr>OutEngUnit 
Anger ingenjörsenheten för XForcVal / OutVal /ForcVal / OutMinShow / OutMaxShow, t.ex %.
Används i Mode-objektets objektbild. 
</attr>

<attr>PidObjDid 
Anger fullständigt namn på det med Mode-objektet associerade Pid-objektet. 
Attributet gör det möjligt att via knapp i Mode-objektets objektbild starta 
objektbilden för det associerade Pid-objektet. 
</attr>
</class>

#
# Class Mvalve
#
<class> Mvalve
@Summary Styrning av motorventil
Styrning, typ motorventil, med tre lägesverkan samt övervakning av gångtid, 
gränslägesindikeringar och kontaktorsvar. Objektet realiserar öka-minska 
styrning. 
@image orm_en1-123.gif

Objektet, som liknar Valve objektet, kan stoppas i pågående driftorder , dvs 3-
lägesverkan. Orderna betecknas här OPEN, STOP och CLOSE men kan tolkas 
som: upp - stopp - ned, höger - stopp - vänster, öka - stopp - minska etc. 

OPEN gäller då OrderOpen är TRUE, CLOSE då OrderClose är TRUE och 
STOP då både OrderClose och OrderOpen är FALSE. 

Med hjälp av gångtidsövervakningen är det möjligt att upptäcka om 
reglerelementets förflyttning mellan två positioner hindras. 

Objektet har tre driftlägen, LOCAL / MANUAL / AUTO, som väljs med hjälp 
av Local och ManMode enligt följande: 
@image orm_en1-124.gif
 
I läge AUTO ska AutoOpen / AutoClose -direktiven ligga kvar så länge 
operationen ska fortgå , annars stoppar rörelsen. 

Styrdirektiven, se skiss nedan, har olika prioritet. Skulle en konflikt uppstå
genom att flera sinsemellan motstridiga direktiv samtidigt är förhanden vinner
det som har högsta prioritet, se nedan.
@image orm_en1-125.gif

Kontaktorlarmen, Alarm5 och Alarm 6 , stoppar pågående manöver. Ny order 
tar ned larmen och ger nytt startförsök. 

@h2 Exempel 

@b Vagnsdrift 
@image orm_en1-126.gif
Vagnen körs endast i läge MANUAL. 

Kontaktorsvar och hastighetsvakt har gemensam övervakningstid. 
Gångtidsövervakningen larmar också. 
 
@image orm_en1-127.gif
MValve Object Used in Motor Control 

Reglerventil 
@image orm_en1-127.gif 
Motor Valve Control 

Antag att nivån i en behållare ska regleras med hjälp av en ventil. Ventilen 
styrs av en elektrisk motor som i sin tur styrs av signalerna 'öppna' och 'Stäng' 
enligt konfigurationen i figuren ovan. 

Om nivån i behållaren är sådan att signalen 'LowLow' blir TRUE körs ventilen 
till stängt läge; produktionsförregling. 

Om signalen 'Nödstopp' sätts stoppas all reglering av ventilen; 
säkerhetsförregling. 

Larm vid fel i kontaktorsvar eller lång gångtid. Driftorder bryts vid påverkat 
ändgränsläge. 

@b Se även 

<attr>AutoOpen 
Anger, i läge AUTO, om OPEN ska begäras eller ej. FALSE saknar betydelse 
och TRUE innebär OPEN-begäran. 
</attr>

<attr>AutoClose 
Anger, i läge AUTO, om CLOSE ska begäras eller ej. FALSE saknar betydelse 
och TRUE innebär CLOSE-begäran. 
</attr>

<attr>EndOpen 
Anger om ändgränsläget för OPEN är påverkat eller ej. FALSE betyder ingen 
påverkan och TRUE innebär att ändgränsläget är påverkat och OrderOpen sätts 
FALSE. 

Attributet används av Alarm1 och Alarm3 . 
</attr>

<attr>EndClose 
Anger om ändgränsläget för CLOSE är påverkat eller ej. FALSE betyder ingen 
påverkan och TRUE innebär att ändgränsläget är påverkat och OrderClose sätts 
FALSE. 

Attributet används av Alarm2 och Alarm4 . 
</attr>

<attr>ConOpen 
Kontaktorsvar vid OPEN-order. 

Om cop-ingången lämnas öppen används internt värdet på oop-utgången som 
insignal och värdet lagras i ConOpen . FALSE betyder att kontaktorn inte gått 
till, TRUE innebär att kontaktorn dragit inom föreskriven tid. 
</attr>

<attr>ConClose 
Kontaktorsvar vid CLOSE-order. 

Om ccl-ingången lämnas öppen används internt värdet på ocl-utgången som 
insignal och värdet lagras i ConOpen . FALSE betyder att kontaktorn inte gått 
till, TRUE innebär att kontaktorn dragit inom föreskriven tid. 
</attr>

<attr>Local 
Anger om läge LOCAL valts eller ej. FALSE betyder att 'NOT LOCAL' valts 
och ManMode om det då är MANUAL eller AUTO som gäller. TRUE innebär 
att LOCAL valts. 

I praktiken kan signalen komma från t.ex vridomkopplare. 
</attr>

<attr>LocalOpen, LocalClose, LocalStop 
LocalOpen, LocalClose, LocalStop anger, i läge LOCAL, om OPEN-, CLOSE- 
eller STOP-order ska ges. FALSE representerar ingen aktivitet. 

LocalOpen = TRUE, betyder OPEN-order och den kommer att kvarstå tills att 
CLOSE eller STOP-order ges. 

LocalClose = TRUE, betyder CLOSE-order och den kommer att kvarstå tills 
att OPEN eller STOP-order ges. 

LocalStop = TRUE, betyder STOP-order och den kommer att kvarstå tills att 
OPEN eller CLOSE-order ges. 
</attr>

<attr>LocalClose
Se LocalOpen
</attr>

<attr>LocalStop 
Se LocalOpen
</attr>

<attr>SafeOpen 
Anger säkerhetsförreglingens tillstånd visavi OPEN-order. Förreglingen gäller 
oberoende av driftläge. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en ovillkorlig 
OPEN-order såvida inte också någon av SafeClose , SafeStop eller Alarm5 är 
TRUE. Om SafeClose , SafeOpen , SafeStop alla är TRUE vinner SafeStop i 
kraft av sin högre prioritet; se ovan 
</attr>

<attr>SafeClose 
Anger säkerhetsförreglingens tillstånd visavi CLOSE-order. Förreglingen 
gäller oberoende av driftläge. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en ovillkorlig 
CLOSE-order såvida inte också någon av SafeOpen , SafeStop eller Alarm6 är 
TRUE. Om SafeClose , SafeOpen , SafeStop alla är TRUE vinner SafeStop i 
kraft av sin högre prioritet; se ovan 
</attr>

<attr>SafeStop 
Anger säkerhetsförreglingens tillstånd visavi STOP-order. Förreglingen gäller 
oberoende av driftläge. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en ovillkorlig STOP-
order.
</attr>

<attr>ProdOpen 
Anger, i läge AUTO och MANUAL, driftförreglingens tillstånd visavi OPEN- 
order. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en OPEN-order 
såvida inte någon av SafeClose , Safestop , ProdClose , ProdStop , Alarm5 
eller Local är TRUE. 
</attr>

<attr>ProdClose 
FALSE betyder att förreglingen är inaktiv. TRUE innebär en CLOSE-order 
såvida inte någon av SafeOpen , SafeStop , ProdStop , Alarms eller Local är 
TRUE. 
</attr>

<attr>ProdStop 
Anger, i läge AUTO och MANUAL, driftförreglingens tillstånd visavi STOP- 
order. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en STOP-order ( 
OrderClose och OrderOpen är FALSE) såvida inte någon av SafeOpen , 
SafeClose , eller Local är TRUE. 
</attr>

<attr>ManMode 
Anger driftläge ( MANUAL eller AUTO) när LOCAL är FALSE. Attributet 
används som en traditionell parameter, dvs man kan skriva/läsa i den från olika 
program. Tanken med att placera attributet som ett utgångsattribut är att 
attributet då enklare kan användas i den grafiska konfigurationen. FALSE 
betyder att AUTO gäller och TRUE att driftläget är MANUAL. 
</attr>

<attr>OrderOpen 
Driftsorder. FALSE betyder att ingen OPEN-order gäller och om OrderClose 
också är FALSE betyder det STOP. TRUE innebär OPEN-order. 
</attr>

<attr>OrderClose 
Driftsorder. FALSE betyder att ingen CLOSE-order gäller och om OrderOpen 
också är FALSE betyder det STOP. TRUE innebär CLOSE-order. 
</attr>

<attr>IndOpen 
Indikerar, i läge AUTO och MANUAL, huruvida ändgränsläget för OPENED- 
manöver är påverkat och om någon CLOSING-manöver påbörjats eller ej.
Attributet är TRUE om EndOpen = TRUE och IndClosed = OrderClose = 
Local = EndClose = FALSE, annars är attributet FALSE. 
</attr>

<attr>IndClosed 
Indikerar, i läge AUTO och MANUAL, huruvida ändgränsläget för CLOSED- 
manöver är påverkat och om någon OPENING-manöver påbörjats eller ej. 

Attributet är TRUE om EndClose = TRUE och IndOpen = OrderOpen = Local 
= EndOpen = FALSE, annars är attributet FALSE. 
</attr>

<attr>Alarm1 
Gångtidsövervakning vid OPEN-manöver. 

Anger om OrderOpen varit TRUE under en tid längre än RunTime utan att 
ändgränsläget för 'fullt öppet' ( attributet EndOpen ) påverkats.
FALSE betyder inget larm; TRUE innebär att EndOpen inte påverkats inom 
tidsgränsen RunTim . Driftordern, OrderOpen , påverkas inte av larmet. 

Larmet kvarstår tills att EndOpen blir TRUE eller tills att CLOSE-order ges. 
Larmet påverkas inte av STOP-order.
Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
'Förlång gångtid vid OPEN av xxx ' i övervakningsobjektets DetectText . 
</attr>

<attr>Alarm2 
Gångtidsövervakning vid CLOSE-manöver. 

Anger om OrderOpen varit FALSE under en tid längre än RunTime utan att 
ändgränsläget för 'fullt stängt' ( attributet EndClosed ) påverkats. 

FALSE betyder inget larm; TRUE innebär att EndClosed inte påverkats inom 
tidsgränsen RunTim . Driftordern, OrderClose , påverkas inte av larmet. 

Larmet kvarstår tills att EndClosed blir TRUE eller tills att OPEN-order ges. 
Larmet påverkas inte av STOP-order 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlång gångtid vid CLOSE av xxx ' i övervakningsobjektets DetectText . 
</attr>

<attr>Alarm3 
övervakning av ändgränsläget för OPEN-manöver. 

Attributet signalerar genom att bli TRUE, om EndOpen indikeringen förloras 
trots avsaknad av CLOSE-order eller om båda gränslägesindikeringarna ( 
EndOpen , EndClose ) samtidigt är påverkade. Driftordern, OrderOpen , 
påverkas inte av larmet. 

Larmet kvarstår tills OrderClose blir TRUE eller EndOpen = TRUE och 
EndClose = FALSE. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat 'fullt öppen'-indikeringen på xxx ' i övervakningsobjektets DetectText.
</attr>

<attr>Alarm4 
Övervakning av ändgränsläget för CLOSE-manöver. 

Attributet signalerar genom att bli TRUE, om EndClose indikeringen förloras 
trots avsaknad av OPEN-order eller om båda gränslägesindikeringarna ( 
EndOpen , EndClose ) samtidigt är påverkade. Driftordern, OrderClose , 
påverkas inte av larmet. 

Larmet kvarstår tills OrderOpen blir TRUE eller EndClose = TRUE och 
EndOpen = FALSE. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat 'fullt stängt'-indikeringen på xxx ' i övervakningsobjektets DetectText.

Om EndClose = EndOpen = TRUE är både Alarm3 och Alarm4 aktiva. 
</attr>

<attr>Alarm5 
Övervakning av kontaktorsvar vid OPEN-manöver. 

FALSE betyder inget larm. 

TRUE innebär antingen att kontaktorsvaret vid OPEN-manöver, ConOpen , 
inte kom inom föreskriven tid (= Ctime ) eller också att det därefter föll bort 
under pågående OPEN-order. ProviewR tar då spontant ned OPEN-ordern. 

Larmet kvarstår tills ny OPEN- eller CLOSE-order ges.
Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat kontaktorsvar vid OPEN av xxx ' i övervakningsobjektets DetectText. 
</attr>

<attr>Alarm6 
Övervakning av kontaktorsvar vid CLOSE-manöver. 

FALSE betyder inget larm. 

TRUE innebär antingen att kontaktorsvaret vid CLOSE-manöver, ConClose , 
inte kom inom föreskriven tid (= Ctime ) eller också att det därefter föll bort 
under pågående CLOSE-order. ProviewR tar då spontant ned CLOSE-ordern.
Larmet kvarstår tills ny OPEN- eller CLOSE-order ges.
Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat kontaktorsvar vid CLOSE av xxx ' i övervakningsobjektets 
DetectText. 
</attr>

<attr>SumAlarm 
Summalarm. 

Anger om något av objektets interna larm är aktivt eller ej. FALSE betyder att 
inget aktivt internlarm finns; TRUE innebär att minst en av utgångarna al1 , al2 
, .... , al6 är TRUE. Driftorder påverkas ej av larmet.
Koppla ett DSup objekt till utgången om meddelande ska skickas och ange 
DetectText. 
</attr>

<attr>ManOpen 
Anger, i läge MANUAL, ett OPEN-direktiv. FALSE betyder ingen aktivitet; 
TRUE innebär att OPEN-order ska ges. Sedan den satta flaggan noterats ser 
ProviewR till att den tas ned. 
</attr>

<attr>ManClose 
Anger, i läge MANUAL, ett CLOSE-direktiv. FALSE betyder ingen aktivitet; 
TRUE innebär att en CLOSE-order ska ges. Sedan den satta flaggan noterats 
ser ProviewR till att den tas ned. 
</attr>

<attr>ManStop 
Anger, i läge MANUAL, ett STOP-direktiv. FALSE betyder ingen aktivitet; 
TRUE innebär att en STOP-order ska ges. Sedan den satta flaggan noterats ser 
ProviewR till att den tas ned. 
</attr>

<attr>Ctime 
Den, i sekunder, längsta tillåtna tiden för väntan på kontaktorsvar. Om en 
driftorder (OPEN eller CLOSE) gällt under en tid längre än Ctime utan att 
motsvarande kontaktorsvar ( ConOpen , ConClose ) blivit aktivt sätts Alarm5 
eller Alarm6 . Tiden räknas från det att OrderOpen eller OrderClose blir 
TRUE. 

Ctime = PLC-jobbets bascykeltid. 
</attr>

<attr>RunTime 
Den, i sekunder, längsta tillåtna gångtiden. Om en driftorder (OPEN eller 
CLOSE) gällt under en tid längre än RunTime utan att motsvarande 
gränslägesindikering blivit aktivt sätts Alarm1 eller Alarm2 . 

RunTime = PLC-jobbets bascykeltid. 
</attr>

<attr>ManAcc 
Ej implementerad funktion. Anger operatörens behörighet att växla mellan 
driftlägena MANUAL / AUTO. Följande behörigheter är möjliga: 

0 -- Ingen växling tillåten
? 0 -- Växling tillåten. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller om sådant inte används, på TimerDoDum. 
Efter tiden TimerTime tas den signal, som utpekas av TimerDo , ned. 
</attr>

<attr>TimerTime 
Väntetid i sekunder. Attributet sätts i målmiljön till Ctime eller RunTime . 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts i samband med 'Create Load Files ...' för 
användning i målmiljön. 
</attr>

<attr>Status 
Följande status värden är möjliga: 

1 eller -1 -- Väntar på OPEN eller CLOSE indikering
2 eller -2 -- OPENING eller CLOSING
3 eller -3 -- OPEN eller CLOSED 
</attr>
</class>

#
# Class NameToStr
#
<class> NameToStr
@Summary Konverterar AttrRef till sträng.
Konverterar AttrRef till sträng.
Användningen av detta objekt är huvudsakligen in Template plc där
symboliska namn som $PlcHost och $PlcConnected kan konverteras.

Konverteringen utförs när plc programmet kompileras.
@image orm_nametostr_fo.gif

<attr>Out
Sträng-utgång som innehåller namnet på AttrRef'en.
</attr>
<attr>Object
Refererat attribut.
</attr>
<attr>ObjectSegments
Antalet namn-segment som visas i plc symbolen.
</attr>
</class>


#
# Class NodeConfig
#
<class> NodeConfig
@Summary Konfiguering av en nod.
NodeConfig objektet konfigurerar en node i det aktuella projektet på
vilken Proview's runtime-miljö ska kunna startas.

NodeConfig objektet skapas i projekt volymen som barn till ett BusConfig-
objekt i nod-hierarkin. Det är roten till ett objektsträd av VolumeLoad och
distributions-objekt, som tillsammans konfigurerar QCOM, näthanteraren och
distributören. Följande objekt kan ingå i trädet.

NodeConfig objektet ska ha ett RootVolumeLoad objekt som barn, som
anger vilken volym som ska laddas i noden.

Extra klassvolymer som tillhör monterade volymer kan laddas med ClassVolumeLoad-
objekt.

Distributions objekt (Distribute, ApplDistribute) konfigurerar applikations-
program och andra filer som ska kopieras till noden.

@b Se även
<attr>Description
Beskrivning av noden.
</attr>
<attr>NodeName
Nodens namn.
</attr>
<attr>OperatingSystem
Nodens operativsystem.
</attr>
<attr>BootNode
Boot-nod för noden.
Laddatafiler, applikationer och graf-filer kopieras till denna nod av
distributören.
I de flesta fall är det noden själv.
För ELN-system som bootas från en VMS nod. är VMS-noden bootnod.
Om noden är en utvecklings nod som har direkt tillgång till filkatalogerna
i utvecklingsmiljön, behövs inte någon distribution. Detta markeras med ett
'-' tecken i BootNode attributet.
</attr>
<attr>Address
Nodens ip adress.
</attr>
<attr>Port
QCOM port, om denna skiljer sig från standard porten.
</attr>
<attr>SimulateSingleProcess
Samlar alla plcprogram i en tråd med en tidbas.
</attr>
<attr>SimulateSingleScanTime
Skantid för tråden.
</attr>
</class>

#
# Class NodeLinkSup
#
<class> NodeLinkSup
@Summary Övervakar en länk med en annan nod.
Övervakar en länk med en annan nod.

En NodeLinkSup lägger upp en prenumeration på an annan node $Node objekt,
och kontrollerar mottagandet av det prenumererade värdet. Om ett nytt
värde inte har anlänt inom timout tiden skickas ett larm-meddelande.

NodeLinkSup objekt hanteras av server processen rt_linksup.

<attr>Node
$Node objektet på den övervakade noden. Specificera nodobjektet med volume
och path, t ex 'RemoteVolume:Nodes-PlcNode'.

Obs! Om noden är monterad är det lätt att förväxla monterings-objektet med
$Node objektet. Se till att ange $Node-objektet.
</attr>
<attr>TimeoutTime
Timeout tid i sekunder.
Om prenumerationsvärdet inte har anlänt inom timout tiden, skickas ett
larm-meddelande.
</attr>

<attr>SubscriptionInterval
Uppdateringsperioden för prenumerationen i sekunder.
</attr>

<attr>LinkUp
Indikerar att länken är uppe.
LinkUp är sann om länken är uppe, falsk om länken är nere.
</attr>

<attr>UpTime
Tid när länken senast upprättades.
</attr>

<attr>DownTime
Tid när länken senast förlorades.
</attr>

<attr>UpCount
Antal gånger länken har upprättats.
</attr>

<attr>SubId
SubId för prenumerationen.
</attr>

<attr>Control
Anger om övervakningen är aktiv.
Vid sann är övervakningen aktiv, vid falsk ej aktiv.
</attr>

<attr>Action 
Anger den övervakade storhetens tillstånd. FALSE innebär normaltillstånd och 
TRUE larmtillstånd. 

Utsignalen kan t.ex. användas för att aktivera åtgärdspaket vid larmtillstånd. 
</attr>

<attr>Acked 
Anger om larmtillståndet kvitterats eller ej. FALSE betyder att okvitterat larm 
finns. Utsignalen sätts initialt TRUE då DSup-objektet skapas i rtdb och när 
larmtillstånd kvitteras. 
</attr>

<attr>Blocked 
Anger om övervakningsobjektet är blockerat eller ej. Med blockering avses 
övervakningsobjektets förmåga att initiera meddelanden. Blockering påverkar 
inte objektets act-utgång. 

FALSE innebär att ASup-objektet inte är blockerat och TRUE att det är 
blockerat. Vid blockering av övervakningsobjekt som befinner sig i larmläge 
tas existerande meddelanden för det aktuella objektet bort. 

Blockering /deblockering görs med hjälp av larmblockeringsformuläret i 
Operator Window. 
</attr>

<attr>Description 
Fri text för att beskriva objektet. Används i bilden 'Larmgränser'. 
</attr>

<attr>DetectOn 
Anger om den åtgärd som vid larmtillstånd består i att skicka DetectText ska 
blockeras eller ej. FALSE betyder att inget meddelandet skickas vid 
larmtillstånd; TRUE betyder att meddelandet DetectText skickas vid 
larmtillstånd. 
</attr>

<attr>DetectText 
Fri text som ingår i meddelandet vid larmtillstånd. Texten skrivs ut vid 
larmtillstånd om DetectOn är TRUE. 
</attr>

<attr>ShowDetectText 
Anger om DetectText ska visas i DSup-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. 
</attr>

<attr>ReturnText 
Fri text som ingår i meddelandet vid återgång till normaltillstånd. Meddelandet 
skrivs i händelselistan. 
</attr>

<attr>EventType 
Anger vilken typ av meddelande (= DetectText ) som ska skickas vid 
larmtillstånd.
64 -- ALARM Meddelandet kräver kvittering och skickas till
larmfönstret, larmlistan och händelselistan.
32 -- INFO Om meddelandet kräver kvittering skickas det till
larmfönstrets informationsdel och händelselistan annars
enbart till händelselistan. 
</attr>

<attr>EventPriority 
Prioritet. Gäller enbart ALARM-meddelanden. 

67 = A-larm; högst prioritet. (= 43Hex)
66 = B-larm (= 42Hex)
65 = C-larm (= 41Hex)
64 = D-larm ; lägst prioritet. (= 40Hex) 
</attr>

<attr>EventFlags 
Bitmask. En kombination av flaggor används också för att specificera 
meddelandet. Följande värden (flaggor) finns: 

1 = Om denna flagga finns ska ett returmeddelande med ReturnText
skickas till utenheternas händelselistor, annars inte.

2 = Om denna flagga finns ska ett kvittensmeddelande skickas till
utenheternas händelselistor, annars inte.

4 = Om den enskilda utenheten har akustisk signal (pip-funktion)
ska den aktiveras då meddelandet tas emot.

8 = Meddelandet ska tas emot av varje utenhet oberoende av vad det
står i urvalslistorna.

16 = Om meddelandet är av typen INFO placeras det förutom i
händelselistan också i larmfönstrets info-del. Kvittens- resp
returmeddelande som för t ex. A-larm.
</attr>

<attr>Attribute 
Anger komplett namn på övervakat attribut. Om ingången 'in' lämnas öppen 
ska vid konfigureringen Attribute fyllas i. Knyts ingången till annat objekt 
ifylls attributet vid kompileringen av ProviewR. 
</attr>

<attr>AlarmStatus 
Aktuellt statusvärde. Bitmask bestående av 16 bitar där de 8 minst signifikanta 
bitarna anger tillståndet och de 8 mest signifikanta prioriteten . 

Tillståndet är en kombination av följande: 

0 -- Normaltillstånd
1 -- Larmtillstånd
2 -- Okvitterat larmtillstånd 

Prioriteten är en av prioriteterna EventPriority . 

Följande värde på AlarmStatus kan förekomma: 

EventPrority + 1 => Prioritet + larmtillstånd
EventPrority + 3 => Prioritet + okvitterat larm och rådande larmtillstånd
EventPrority + 2 => Prioritet + okvitterat larm och normaltillstånd 
</attr>

<attr>AlarmCheck 
Används internt vid händelse detektering. 
</attr>

<attr>DetectCheck 
Anger om larmtillstånd ska detekteras eller ej. FALSE betyder att larmtillstånd 
inte ska detekteras; TRUE att larmtillstånd ska detekteras. 
</attr>

<attr>DetectSend 
Anger om meddelande sänts iväg till utenheter (eller mer precis till 
meddelande hanteraren) eller ej; TRUE betyder att meddelande har sänts. 
</attr>

<attr>DetectTime 
Datum och klockslag för senast detekterade larmtillstånd. 
</attr>

<attr>ReturnCheck 
Anger om objektet återgått till normaltillstånd eller ej. TRUE betyder att 
objektet återgått till normaltillstånd. 
</attr>

<attr>ReturnSend 
Anger om ett returmeddelande med ReturnText sänts till utenheterna eller ej. 
TRUE betyder att returmeddelande sänts. 
</attr>

<attr>ReturnTime 
Datum och klockslag för senast detekterade retur till normaltillstånd. 
</attr>

<attr>AckTime 
Datum och klockslag för senast detekterade kvittens. 
</attr>

<attr>AckOutunit 
Identitet på utenhet (operatör) varifrån kvittering skett. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timerkön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när, efter det att larmtillstånd inträtt, 
meddelandet ska skickas. Om larmtillståndet försvinner innan tiden gått ut 
genereras inget meddelande. 

TimerTime = PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin 
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
<attr>TimerMax
Anger tillåtet intervall för TimerTime vid operatörs inmatning. 

TimerMin <= TimerTime <= TimerMax 
</attr>
</class>

#
# Class OpPlace
#
<class> OpPlace
@Summary Konfiguering av operatörsstation
Konfigurerar logisk operatörsstation för operatörskommunikation. En logisk 
operatörsstation representerar en arbetsstation, X-terminal e.dyl. 


Objektet, som placeras i utvecklingsmiljön under aktuellt $ Node-objekt, anger 
var bildfiler ska hämtas och på vilken skärm (monitor) de ska visas. 

Flera OpPlace-objekt kan konfigureras under ett $ Node-objekt. Så är fallet då 
t.ex noden innehåller dels en arbetsstation, dels en X-terminal.

Det ska till varje OpPlace-objekt finnas precis en kategori användare, dvs bara 
ett User-objekt. Om en fysiska operatörsstation ska hanteras av olika 
användarkategorier konfigureras ett OpPlace-objekt ( med tillhörande User -
objekt) per kategori. 

Då ett händelsemeddelande som kräver kvittering anländer aktiveras den 
akustiska signalen i enlighet med BellVolume och BellDelay . 

I två olika situationer kan man undvika att ideligen starta den akustiska 
signalen: 

Vid s.k. larmskurar kan man kräva en viss minsta tid från kvittering ( av 
akustisk signal eller larm) tills att en tillkommande , kvitteringskrävande 
händelse tillåts reaktivera den akustiska signalen på normalt sätt. Denna 
blockeringstid anges av TimeBeforeNextBell.

Påminnelse om okvitterade larm. För att påminna operatören, efter en 
kvittering av akustisk signal eller efter en larmkvittering, om existensen av 
okvitterade händelser ges korta akustiska signaler med perioden 
ReactivateBellTime . Efter ett visst antal sådana perioder ( 
ReactivateBellCount anger antalet) löper den s.k. påminnelsetiden ut och den 
akustiska signalen aktiveras åter på normalt sätt. Om det f.n. saknas okvitterade 
händelser och TimeBeforeNextBell > 0 kan ett tillkommande kvitterings-
krävande larm först komma att annonseras genom påminnelsefunktionen. 

@b Tips 

På en arbetsstation kan operatörskommunikationen alltid startas från DCL- 
nivån genom kommandot: 

$ pwr_pop <namn på aktuellt OpPlace-objekt> 

<attr>Description 
Valfri text för att beskriva användarkategorin etc. 
</attr>

<attr>OpNumber 
De logiska operatörsstationerna ges en unik numrering inom respektive nod. 
Ibland väljer man att göra en numrering för de logiska operatörsstationerna 
inom hela ProviewR-systemet; t.ex 1, 2, .... 

OpNumber är också ett attribut i User-objekt. Ett OpPlace-objekt och ett User 
-objekt knyts till varandra genom att OpNumber ges samma värde i de båda 
objekten. 
</attr>

<attr>Display 
Anger vilken monitor operatörskommunikationen ska köras mot. 

Om operatörskommunikationen körs på den lokala noden och visning ska ske 
på den egna monitorn ('default display') bör Display attributet lämnas blankt 

Kommandot 

$ show display
visar var operatörsdialogen kommer att ske. Om Transport = Local går trafiken 
mellan operatörskommunikationsjobbet och aktuell monitor inte över DECnet 
varför mindre resurser erfordras. Används inte Local kan mekanismen väljas 
med kommandot: 

$ set display/create/transport=local 

Om 'default display' inte används för operatörsdialogen gäller följande för 
Display attributet: 

Operatörsstationen är en arbetsstation.

Syntax: <DECnets Node name>::<Server>:<Screen>, där Server default är 0.
Noden kan vara försedd med flera bildskärmar. Screen anger då vilken som
avses.

Exempel: PSS1::0.0

Operatörsstationen är en X-terminal. 
Kontrollera / ändra DECterm-fönstrets display adress på följande sätt:
$ show log decw$display eller $ show display
$ set display/create/trans=LAT/node = LAT_.. där LAT_... ersätts med LAT
Host Name enligt Terminal Manager 
Se till att Display attributet är lika med decw$display 
Operatörskommunikationen startas t.ex. med
$ pwr_pop <namn på aktuellt OpPlace-objekt> 
OpWinProgram 

Då GMS-bilder av typen 'code behind' används länkas dessa och placeras i en 
exe-fil vars 'directory' och filnamn ska anges här. 

Finns enbart kodlösa GMS-bilder lämnas attributet blankt varvid pwr_exe:ps- 
cont.exe kommer att exekveras för att hantera Operator Window, formulär och 
GMS-bilder. 
</attr>

<attr>FilePath
Anger (logiskt) namn på sökväg till ProviewR-distributionens *.frm, *.m1 m. 
fl. filer; t.ex pwr_lang: 

Den effektivaste hanteringen erhålls genom följande förfarande: 

Sätt FilePath[0] till 'pwr_lang:' och lämna övriga FilePath attribut blanka. ( 
lang i pwr_lang kommer från language) 
Sätt upp projektets sökväg till 'pwrp_exe' med kommandot 
$ set deault pwrp_exe 
Operatörskommunikationen startas t.ex med kommandot
$ pwr_pop <namn på aktuellt OpPlace-objekt> 
</attr>

<attr>AlarmProcess 
Anger om den process som hanterar presentation av larmlista, händelselista, 
blockeringslista och larmgränser ska ingå i operatörsdialogen eller ej. FALSE 
innebär att larmhanteringen inte ska ingå i operatörsdialogen och TRUE att den 
ska ingå. 

Då larmpresentationen ingår i operatörskommunikationen gäller att den körs 
mot separat monitor om AlarmDisplay är definierad, annars mot samma 
bildskärm som den övriga operatörsdialogen. 
</attr>

<attr>AlarmDisplay 
Attributet ger möjlighet att definiera separat monitor för larmdialogen då 
AlarmProcess är TRUE. Syntaxen är den samma som för Display . 
</attr>

<attr>Navigator 
Anger om operatören ska ha tillgång till Runtime Navigator eller ej. FALSE 
innebär att knappen för att aktivera Runtime Navigator saknas i Operator 
Window och TRUE att den ingår. 
</attr>

<attr>HistEvent 
Anger om operatören ska ha tillgång till historiska händelselistan eller ej. 
FALSE innebär att knappen för att aktivera historiska händelselistan saknas i 
Operator Window och TRUE att den ingår. 
</attr>

<attr>HistTrend 
Anger om operatören ska ha tillgång till historiska trendkurvor eller ej. FALSE 
innebär att knappen för att aktivera historiska trendkurvor saknas i Operator 
Window och TRUE att den ingår. 
</attr>

<attr>ExitButton 
Anger om alternativet 'Exit Operator' ska finnas i den Window Manager meny 
som hör till Operator Window. Genom att välja 'Exit Operator' kan den aktuella 
operatörsmiljön tas ned. 

FALSE innebär att alternativet 'Exit Operator' görs osynligt i Window Manager 
menyn och TRUE att den görs synlig. 
</attr>

<attr>BellVolume 
Anger styrkan på operatörsstationens akustiska signal. Styrkan anges i skalan 0 
- 10, där 0 innebär avstängd signal. 

Signalen används bl. a. för att fästa uppmärksamhet på ankommande larm. 
</attr>

<attr>BellDelay 
Anger, i millisekunder, fördröjningen mellan två successiva pip, d.vs två 
akustiska signaler. 
</attr>

<attr>TimeBeforeNextBell 
Blockeringstiden för den normala akustiska signalen räknat från senaste 
kvittering ( av akustisk signal eller händelse) är TimeBeforeNextBell och anges 
i 1/10 sekunder. Under denna tid kan inte en tillkommande kvitteringskrävande 
händelse aktivera den akustiska signalen på normalt sätt. 
</attr>

<attr>ReactivateBellTime 
Påminnelse om okvitterade larm under påminnelsetiden. 

Den akustiska signalen kommer att reaktiveras korta ögonblick (betydligt 
kortare än de som normalt används) under påminnelsetiden om, 

det finns okvitterade händelser 
det f.n. saknas okvitterade händelser och TimeBeforeNextBell > 0 men 
kvitteringskrävande larm anländer 
ReactivateBellTime anger perioden för ljudstötarna i 1/10 sekunder. 

Påminnelsetiden är som längst ReactivateBellTime · ReactivateBellCount och 
räknas från det att den akustiska signalen kvitterats eller larmkvittering gjordes. 
Om TimeBeforeNextBell = 0 upphör påminnelsefunktionen direkt så snart en 
kvitteringskrävande händelse anländer. 
</attr>

<attr>ReactivateBellCount 
Under den s.k. påminnelsetiden ges maximalt ReactivateBellTime korta 
akustiska signaler . Se också ReactivateBellTime . 
</attr>

<attr>MhScanInterval 
Meddelanden skickas från meddelandehanterare till utenheter inom 
ProviewR systemet. Varje utenhet mottager meddelanden i en kö i enlighet 
med dess Select -attribut. 

Utenheten operatörsdialog representeras av User objekt. 

MhScanInterval anger, i tiondels sekunder, hur ofta denna meddelandekö ska 
tömmas. 
</attr>

<attr>SubscriptionInterval 
Attributet anger, i 1/10 sekunder, uppdateringsperioden för alla 
prenumerationer operatörskommunikationen sätter upp till icke-lokala objekt. 

Prenumerationsperioden bör väljas så att den matchar t.ex UpdateInterval i 
Graph objekten. Tider kortare än 1 sekund rekommenderas inte. 
</attr>

<attr>ANSIQueue 
Anger namn på printer kö för ANSI-filer, t.ex händelselista, blockeringslista 
och larmstatistik. Print funktionens 'qualifiers' kan användas. 

Exempel: LPS17_ANSI/notify/del 
</attr>

<attr>PostScriptQueue 
Anger namn på PostScript printer kö för t.ex utskrift av processgrafikbilder. 
Print funktionens 'qualifiers' kan användas. 

Exempel:. LPS17_PS/notify/del 
</attr>

<attr>IsBellOn 
Attributet följer den akustiska signalen. Genom att övervaka attributets 
tillstånd, t.ex från PLC program, kan den akustiska signalen användas för att 
manövrera ytterligare aktiviteter. FALSE betyder att den akustiska signalen är 
från och TRUE att den är till. 
</attr>

<attr>UnackedAAlarm 
Attributet anger om det finns okvitterade A-larm eller ej. FALSE betyder att 
det saknas okvitterade A-larm och TRUE att det finns okvitterade, existerande 
eller icke-existerande, A-larm. 
</attr>

<attr>UnackedBAlarm 
Attributet anger om det finns okvitterade B-larm eller ej. FALSE betyder att 
det saknas okvitterade B-larm och TRUE att det finns okvitterade, existerande 
eller icke-existerande, B-larm. 
</attr>

<attr>UnackedCAlarm 
Attributet anger om det finns okvitterade C-larm eller ej. FALSE betyder att 
det saknas okvitterade C-larm och TRUE att det finns okvitterade, existerande 
eller icke-existerande, C-larm. 
</attr>

<attr>UnackedDAlarm 
Attributet anger om det finns okvitterade D-larm eller ej. FALSE betyder att 
det saknas okvitterade D-larm och TRUE att det finns okvitterade, existerande 
eller icke-existerande, D-larm. 
</attr>

<attr>Address 
Används av Package Handler för att hantera packet. Se vidare ProviewR 
Programmer's Reference Manual . 
</attr>
</class>

#
# Class Or
#
<class> Or
@Summary ELLER-grind
ELLER-grind. 
@image orm_or_fo.gif

Eller-grind för upp till 8 ingångar. Använda ingångar behöver inte vara 
konsekutivt valda. Ingångarna kan med hjälp av Objekts Editorn fås att 
invertera resp. insignal. 

Grundsymbolen har två ingångar. Med Objekts Editorn kan antalet ingångar 
ändras. 

Insignalerna används utan föregående lagring. 


<attr>In1
Logisk ingång. 
</attr>
<attr>In2
Logisk ingång. 
</attr>
<attr>In3
Logisk ingång. 
</attr>
<attr>In4
Logisk ingång. 
</attr>
<attr>In5
Logisk ingång. 
</attr>
<attr>In6
Logisk ingång. 
</attr>
<attr>In7
Logisk ingång. 
</attr>
<attr>In8
Logisk ingång. 
</attr>

<attr>Status 
Eller-grindens tillstånd. 
</attr>
</class>

#
# Class Order
#
<class> Order
@Summary Grafcet order. 
Grafcet order. 
@image orm_en1-131.gif

Till varje sekvenssteg kan ett eller flera Order-objekt kopplas.
Aktiviteter ( t.ex StoDo , ResDv , And , Or , Wait objekt) knutna till Order - 
objekt kan antingen kopplas direkt till Order-objektets utgång eller placeras i 
ett med Order-objektet associerat s.k. aktivitetsfönster (= a sub-window). Ett 
Order-objekt kan dock inte samtidigt ha både ett aktivitetsfönster och 
direktanslutna objekt. Aktivitetsfönster kan förbättra programmets 
överskådlighet. Objekten i aktivitetsfönstret får ett WindowOrderact objekt 
som förälder objekt. 

NB! Objektets orderlista består antingen av objekten i ett aktivitetsfönster eller 
Stoxx, Setxx, eller Resxx objekt direkt kopplade till Order-objektets utgång. 
Övriga objekt ( And, Or, Wait, etc.) direkt kopplade till Order-objektets utgång 
inkluderas inte i orderlistan. Det betyder att sådana objekt kommer att 
evalueras varje gång PLC programmet exekverar , dvs oberoende av stegets 
eller Order-objektets tillstånd.

Kod i objektets orderlista evalueras däremot så länge steget , till vilket ordern 
hör, är aktivt eller ordern ( om lagrad) är aktiv; dvs orderlistan kan evalueras 
oberoende av Order-objektets tillstånd . Den sista exekveringen av orderlistan 
kommer att ske med inaktivt Order-objekt . Detta betyder, om Order-objektets 
tillstånd, Status[0] är TRUE, när steget gör övergången 1 --> 0 eller då en 
lagrad order tas ned, kommer ytterligare en exekvering av objektets orderlista 
att göras. 

Ett Order-objekts tillstånd kan användas som signal i dess aktivitetsfönster. 
Tillståndet hämtas då med OrderAct-objekt.
Utifrån exekveringssynpunkt behandlas Stoxx , Setxx och Resxx objekt på 
samma sätt vare sig de placerats i ett aktivitetsfönster eller kopplats direkt till 
Order-objektet. 

Till varje order kan s.k. order-attribut (se Attr1 , ...., Attr6 ) knytas med hjälp 
av Objekts Editorn. Förekomsten av order-attribut framgår av symbolens 
vänstra fält. Saknas order-attribut gäller att ordern ställs ut (blir aktiv) så länge 
steget är aktivt och upphör när steget blir inaktivt.

'Condition' är ett order-attribut. Man talar om C-order då ett Order-objekt har 
Condition-attribut. En C-orders villkor kan definieras på endera av följande 
sätt. genom direkt anslutning av villkoret till ordersymbolens vertikala 
anslutning. via ett kombinatoriskt nät i ett villkorsfönster . Ett SetCond-objekt 
i villkorsfönstret lagrar villkorets status i Order-objektet. Objekten i fönstret 
får ett WindowCond objekt.

@h2 Exempel
Figuren nedan visar några tillämpningar med Order-objekt:
- Flera order-instanser (ORD0, ORD1,...) kan knytas till ett steg; här S0
- Enkla aktiviteter kan knytas direkat till steg utan någon mellanliggande
  order; jfr Do1 och Do2.
- Flera aktiviteter kan knytas direkt till ett Order-objekt; här två aktiviteter
  knutna directk till ORD0-instansen.
@image orm_en1-132.gif
- Den tjocka vertikala linjen i ORD5 indikerar att ett underliggande 'subwindow'
  har knutits till objektet, i dett fall ett aktivitetsfönster. Ett sådant kan i
  PLC-editorn skapas genom Shift/MB1 och dubbel-klick i högra delen av order
  objektet.
- Do1 kommer att sättas så länge S0 är aktivt. Eftersom en SetDo används 
  förblir Do1 satt också sedan S0 blivit inaktivt. SetDo-objektet ingår
  inte i orderlistan.
- Eftersom StoDo för Do2 inte ingår i någon orderlista kommer den att
  evalueras varje gång PLC programmet exekverar. Do2 får status såsom
  steget.
- Do0 kommer att sättas då S0 blir aktiv. Men genom att ORD1 är en S-order
  kommer den att förbli aktiv också efter det att S0 blivit inaktiv. Do0
  tas ned först då ORD1 görs inaktiv av en Reset_SO; jfr med Do2.
- Dv1 och Dv4 sätts inte direkt efter det att S0 blivit aktiv. ORD0-
  instansen har order-attributen D och C, dvs ett fördröjt frigivningsvillkor.

  -- Om S0 är aktiv när fördröjningen löpt ut och Dv3 är TRUE blir Dv1
     TRUE. Set-funktioner har självhållning varför Dv-signalen förblir
     TRUE också sedan S0 blivit inaktiv.
  -- När fördröjningen löpt ut följer Dv4 villkoret Dv3 så länge steget
     är aktivt.

- Det tjocka vertikala linjen i ORD4 indikerar att ett underliggande
  'subwindow' knutints till ovbjektet, i dett fall ett villkorsfönster. Om
  ORD4 är aktivt, villkoret uppfyllt och DI1 inte är TRUE kommer Dv2 att bli
  TRUE, annars blir Dv2 FALSE.

  AND0 tillhör inte Order-objektets orderlista.

  Ett villkorsfönster öppnas i PLC-editorn med Shift/MB1 och dubbelklick i
  vänstra delen av Order-objektet.

Figuren nedan visar en del av en sekvenskedja. ORD0 indikerar ett aktivitets-
fönster och dess innehåll visas till höger i figuren.
@image orm_en1-133.gif
Antag att PLC programmet exekverar med frekvensen 10 Hz och att
Av1=Av2=0. ORD1 ser till att stegets aktiva tillstånd varar i 5 sekunder.
Vilket värde har Av1 resp Av2 därefter?

Orderlistan börjar exekvera så fort steget blivit aktivt. Av1 kommer att
räknas upp och lagras 20 gånger då ORD0 är inaktiv och sedan 30 gånger då
ORD0 är aktiv. Efter att steget blivit inaktivt sker ytterligare en exekvering
av orderlistan med inaktiv order. Därför blir Av1=51. Av2 lagras endast då
ORD0 är aktiv, varför Av2=30.

För att utnyttja fördröjningen i en D-order används OrderAct som i fallet
ORD0 eller ordens tillstånd i ORD1. Vi konstaterar också att så länge steget
är aktivt exekveras orderlistan oberoende av ordens tillstånd.

<attr>Step 
Statusingång. Kontrollerar det anslutna stegets status (InitStep, Step, SubStep, 
SsBegin eller SsEnd-objekt) genom att titta på dess Status [0] och Status [1]. 
</attr>

<attr>Cond 
Villkorsingång. Ingången kan används för att koppla en binär villkorssignal till 
en C-order.
</attr>

<attr>Status

Status[0] anger objektets status. FALSE betyder inaktiv order och TRUE innebär 
aktiv order. Värdet kan plockas upp i annat program med hjälp av GetDp objekt.
 
Status[1] hänför sig till stegets status. TRUE betyder att steget, som ordern 
tillhör, är aktivt eller att en lagrad order är aktiv.
Antag en D-order, dvs order med D-attribut. Då steget blir aktivt sätts Status 
[1] till TRUE. Objektets orderlista evalueras med Status [0] = FALSE. Om 
Order-objektet har ett aktivitetsfönster kan värdet på Status [0] hämtas med 
OrderAct-objekt. 

Då fördröjningen löper ut blir Status [0] TRUE och evalueringen av orderlistan 
fortsätter så länge Status [1] = TRUE eller så länge det gäller att Status [0] var 
TRUE vid förra evalueringen. 
</attr>

<attr>Attr1
I utgångsläget gäller att Order-objektet blir aktivt då steget blir aktivt och 
inaktivt när steget blir inaktivt. Med de s.k. order-attributen kan detta 
förhållande påverkas. Alternativen, som betecknas med VERSALER, är: 

D = Fördröjd Order-objektet blir aktivt en viss tid efter det att steget
(Delayed) blivit aktivt. AttrTime1, ..., AttrTime6 anger tiden för
motsvarande attribut.

L = Tidsbegränsad Order-objektet blir aktivt samtidigt med steget men detta
(Limited) gäller bara för begränsad tid. AttrTime1, ..., AttrTime6
anger tiden för motsvarande attribut.

P = Puls Ska Order-objektet evalueras med aktiv status precis en 
(Pulse) programcykel ersätts L med P.

C = Villkorlig Order-objektet blir aktivt först när steget är aktivt och
(Conditionally) frigivningsvillkoret uppfyllt; ( Cond eller villkorsfönster)

S = Lagrad Order-objektet blir aktivt samtidigt med steget. Till-
(Stored) kvarstår sedan också efter det att steget blivit inaktivt.
En lagrad order tas ned med Reset_SO-objekt.

Varje order-attribut definierar ett sub-objekt i rtdb. Ett sub-objekt med namnet 
S är av typen S-order osv. Entydigheten kräver att givet order-attribut 
förekommer högst en gång i varje Order-objekt. 

Ett Order-objekt kan ha upp till 5 definierade order-attribut. Order attributens 
sekvens bestämmer funktionen, t.ex. 

En CDS-order lagras ( dvs. tar självhållning) först då det påverkande villkoret 
varit uppfyllt under begärd tid -- förutsatt att steget då fortfarande är aktivt. 
Ordern förblir sedan aktiv tills den tas ned med ett Reset_SO-objekt. 
SDC-order. Uppgiften om att steget är aktivt lagras direkt. Då den begärda 
tiden förlupit kommer orderns tillstånd att följa villkorets. 
DSC-order. Uppgiften om att steget är aktivt lagras först då fördröjningen löpt 
ut -- såvida steget då fortfarande är aktivt. Ordern blir aktiv då villkoret 
uppfylls. Orderns tillstånd kan komma att växla beroende på villkoret. Ordern 
förblir lagrad tills den tas ned med Reset_SO-objekt. 
AttrTime1, AttrTime2, ..., AttrTime6 

Anger, i sekunder, tiden för D respektive L order-attribut. AttrTime1 hör ihop 
med Attr1 osv. 
</attr>

<attr>Attr2
Se Attr1
</attr>
<attr>Attr3
Se Attr1
</attr>
<attr>Attr4
Se Attr1
</attr>
<attr>Attr5
Se Attr1
</attr>
<attr>Attr6
Se Attr1
</attr>

<attr>ShowAttrTime 
Anger om AttrTime -värdet för D- och L-order ska visas i Order-objektets 
symbol eller ej. FALSE betyder ingen visning och TRUE visning. Enheten är 
sekunder. 
</attr>
</class>

#
# Class OrderAct
#
<class> OrderAct
@Summary Hämtar status av grafcet order
Hämtar, i aktivitetsfönster, Order-objektets tillstånd. 
@image orm_orderact_fo.gif

Används endast i aktivitetsfönster. 

Ett Order-objekts orderlista evalueras så länge steget, till vilket ordern hör, är 
aktiv eller som i fallet med 'lagrad order' tills att ordern tas bort. Sista 
evalueringen sker alltid med inaktivt Order-objekt. 

Ett Order-objekts tillstånd kan användas som signal i dess aktivitetsfönster. 
Tillståndet hämtas då med OrderAct objekt.

Ingen exekverbar kod. Genererar ingen data i rtdb. 

@b Se även 

<attr>OrderObject 
Används av PLC Editorn. Anger Order-objektets fullständiga namn. 
</attr>

<attr>Status 
Anger värdet på Status [0] i associerat Order-objekt. 
</attr>
</class>

#
# Class Out2P
#
<class> Out2P
@Summary Två-punktsutgång med till/från styrning
Två-punktsutgång med till/från styrning. En analog insignal konverteras till en 
binär signal. Styrningen utförs antingen som proportionell till/från styrning 
med dödzon eller som till/från styrning med hysteres. 
@image orm_out2p_fo.gif

Siffran 2 i objektnamnet syftar på objektets utgång som har 2-lägesverkan. Två 
diskreta order kan ges med innebörden höger/vänster, upp/ner, öka/minska etc.
Två typer av till/från styrning finns. Vilken typ av styrning som gäller bestäms 
av om dödzon definierats eller ej.

MinOut < MaxOut ger puls-proportionell styrning i dödzonen enligt följande: 

Så länge OutVal < MinOut är Order alltid FALSE och så länge OutVal > 
MaxOut är Order alltid TRUE. 
@image orm_en1-136.gif
 
Då MinOut = OutVal = MaxOut är utgången puls-proportionell ('pulsad') med 
cykeltiden Period . 

Vid puls-proportionell till/från styrning gäller att gäller att förhållandet 
mellan till/från bestäms av  

Kvoten uppdateras varje programcykel. Om en period inleds med tillslag 
kommer detta att bestå under tiden,

 (OutVal(t) - MinOut) / (MaxOut(t) - MinOut(t)) * Period

Därefter kommer frånslaget att sitta resten av perioden; dvs,

 (1 - (OutVal(t) - MinOut) / (MaxOut(t) - MinOut(t)) * Period

MinOut = MaxOut ger till/från-verkan med hysteres, som ett kombinerat 
Compl / Comph objekt. 
@image orm_en1-140.gif

@b Tips 

Temperaturreglering av elektrisk ugn är exempel på en tillämpning där Out2P 
objekt skulle kunna användas. 

@b Se även 

<attr>OutVal 
Analog insignal, t.ex anslutning till OutChange i Pid-objekt. 
</attr>

<attr>Order 
Utsignalens uppförande är olika beroende på om MinOut < MaxOut eller 
MinOut = MaxOut . Se ovan. 
</attr>

<attr>MaxOut
Anger dödzonens övre gräns. Styrningens karaktär beror av om 
MinOut < MaxOut eller MinOut = MaxOut . Se ovan. 
</attr>

<attr>MinOut 
Anger dödzonens nedre gräns. Styrningens karaktär beror av om 
MinOut < MaxOut eller MinOut = MaxOut . Se ovan. 
</attr>

<attr>Period 
Pulsperioden, i sekunder, vid puls-proportionell styrning. 
</attr>

<attr>RunTime 
Ackumulerad tid, i sekunder, sedan senaste till/från-omslag. 
</attr>

<attr>ScanTime 
Programcykeltid i sekunder. Initieras automatiskt vid kompilering. 
</attr>
</class>

#
# Class PID
#
<class> Pid
@Summary Implementerar olika former av PID reglering. 
Implementerar olika former av PID reglering. 
@image orm_en1-141.gif

@h1 Bra att veta
I normalfallet används Pidobjekt tillsammans med ett Modeobjekt. Gäller även
CompPID och CompMode.
Modeobjektet spelar då rollen av interface till Pidobjektet. Från Modeobjektet är 
det möjligt att välja MANUAL, AUTO och CASCADE: 
 
   - Manual mod är en mod när regulatorns utsignal är tvångsstyrd till önskat 
     värde.   
   - Auto mod är en mod när regulatorns arbetar med internt börvärde från 
     modobjektet.
   
   - Cascade mod (kaskad) är en mod där regulatorns arbetar med ett externt
     börvärde, dvs modobjektets ingång XSetVal [XSV].
    
@h1 Regulatorn

Algoritmens proportionella term respektive derivata term kan baseras antingen på 
ärvärdet eller reglerfelet. 
PidAlg anger fördelningen.
Exempel: PI+D innebär att P-delen och I-delen verkar på regleravvikelsen, medan 
D-delen bara påverkas av ärvärdesförändringar. En stegändring av börvärdet ger 
inte någon spik från D-delen, utan bara en stegändring från P-delen, och sedan 
en integrering av reglerfelet.
I+P innebär på samma sätt att P-delen bara påverkas av ärvärdesförändringar. Vid 
en stegändring av börvärdet får vi inget steg på utgången. Utstyrningen ändras 
bara genom att det större reglerfelet börjar integrera utsignalen.

Vid P- och PD-algoritm används en absolut algoritm. Utsignalen kan då alltså inte 
ligga stabilt skilt från noll utan regleravvikelse, annat än om man använder en 
framkopplingssignal. Om flaggan PDAbsFlag sitter, så beräknas en offset i manuell mod,
så att vi får en stötfri övergång till auto.
Vid alla algoritmer med I-del delas utsignalen upp i två delar ned hjälp av masken WindupMask.
I-delen ingår alltid i OutWindup, medanBias, P-delen och D-delen kan tillhöra antingen OutWindup
eller AbsOut.
OutWindup begränsas av MinWindup och MaxWindup, vilket sätter flaggorna EndMin och EndMax.
Resten av utsignalen lagras i AbsOut, och total utsignal begränsas med MinOut och MaxOut
Man kan även stänga av integrereringen med en insignal till objektet.
 
Pid-objektet har två utgångar som båda kan användas som styrsignal. Vilken som 
används i det enskilda fallet beror på hur regleringen är ordnad: 
OUT (attributet OutVal ) innehåller ett värde som kan komma från regleralgoritmen,
från operatören i läge  MANUAL eller vara ett s.k. tvångsstyrningsvärde.
Signalen används för t ex varvtalsutstyrning, eller som börvärdesposition till 
ett ställdon.
OC (attributet OutChange ) anger hur ställdonet ska ändras mellan två successiva 
exekveringar.
I detta fall talar man om algoritmens 'velocity' eller 'incremental form'.
Detta är användbart för ställdon som bara har öka- och minska-signaler, utan 
lägesåterföring. Används då normalt med INC3P-objektet, som integrerar 
förändringarna och omvandlar till tid för öka resp minska.
OutChange fortsätter att ge signal, även OutVal bottnat i MinOut eller MaxOut.

Derivata termen filtreras internt med 1:a ordningens filter. Filtreringen kopplas 
bort genom att sätta DerGain = 0, men regleringen blir då ofta mycket störkänslig.
Normalt är DerGain ca 3, vilket innebär att utsignalen påverkas momentant 3 ggr 
så mycket av derivatadelen som av P-delen. Derivatatillskottet smetas sedan ut 
över tiden, så att det totala integrerade tillskottet blir lika stort som den 
skulle bli utan filtrering.
 
En framkopplingssignal, Bias, kan inkluderas i algoritmen genom en ingångssignal 
till objektet. Förstärkning framkoppling anges med BiasGain.

Regulatorns utsignal OutVal är uppdelad i två delar, OutWindup och AbsOut.
I-delen innefattas alltid i OutWindup. Med WindupMask kan man styra även Bias,
P-delen och D-delen till OutWindup.
OutWindup, begränsas till intervallet { MinWindup, MaxWindup }. Det innebär att 
man kan tappa det stabila läget vid en orolig reglering, speciellt vid inkopplad 
D-del. Om man sätter flaggan WindupMask till BIP, så tar man bort D-delens inflytande 
på OutWindup. Man kan även sätta den till BI eller I för att ta bort P-delen och
Bias från OutWindup.
Den totala utsignalen OutVal begränsas till intervallet { MinOut , MaxOut }.

Exempel: Vi har en ganska orolig flödesreglering (utsignal 0-100 %) och reglerar 
nära maxvarvet för pumpen. WindupMask = BPID. Vi behöver styra ut i snitt 98 % för 
att nå önskat börvärde. Utsignalen fladdrar ca +- 5 % pga störningar. 
Om MaxWindup är 100 %, så innebär det att regulatorn bottnar regelbundet. Utsignalen 
kommer då att svänga mellan 90 och 100 % med en medelutsignal på ca 95%, och vi når inte önskat 
börvärde.
Lösning: Sätt WindupMask till I eller BI. Störningarna kommer inte att  påverka MaxWindup.

För en servoventil med positionsreglering, kan man vilja ha en långsam I-del för läckagekontroll,
begränsad till +- 20 %. Sätt WindupMask till I eller BI.
Sätt MinWindup = -20% och MaxWindup till +20%, MinOutput = -100 %, MaxOutput = 100 %
EndMin och EndMax kan användas för läckagelarm.


Regulatorn har stötfri omkoppling AUTO / MANUAL och efter annan tvångsstyrning av 
regulatorn.
Dock ej vid P- eller PD-reglering, om man har PDAbsFlag satt.
 
EXEMPEL 1

Exempelkurvor för att visa P- och Delens inverkan vid olika typinställningar. 
Insignal steg och ramp.

@image orm_pid_3.png

Övre delen:
Brun kurva.  Ärvärde (samma som P-del från regulatorn). Steg samt ramp.
Lila kurva.  Utsignal från PD med Kp = 1, DerTime = 10s, DerGain = 3.

Nedre delen -  D-del från regulatorn.
Grön kurva.  DerTime = 10s. Ingen filtrering (DerGain = 0). Notera spiken vid 
             stegändringen.
Gul kurva.   DerTime = 10s. Filtrerad D-del DerGain = 3.
Blå kurva.   DerTime = 20s. Filtrerad D-del DerGain = 3.


EXEMPEL 2 för att visa skillnaden mellan PID, PI+D och I+PD vid återkopplat
system och stegförändring av börvärdet:

@image orm_pid_4.png

I+PD (uppe till vänster) börjar sakta integrera upp styrsignalen vid stegändring.
PI+D (uppe till höger) ger ett stegsvar som medför att vi får en snabbare 
     reglering till nya börvärdet.
PID  (nere till vänster) ger en kort spik vid stegändringen. Denna regulator har 
     MaxOut = 500%
PID  (nere till höger) är identisk med föregående, men har MaxOut = 100%, vilket 
     ger "bakvänt" resultat. P ger ca 30 % upp, D ger en spik på ca 90 % Totalt ca 
     155 % Regulatorn bottnar i 100 % utsignal, och när vi sedan tar bort D-spiken 
     på 90 % får regulatorn börja om från 10 % utsignal.

@h1 Exempel

@h2 Flödesreglering 
Flödesreglering med varvtalsreglerad pump; se figur nedan (Speed Control of 
a Pump). 

- Börvärde sätts från externt optimeringsprogram (Av-signalen OptFlow) t.ex 
  1 gång / 10 min eller direkt av operatör. 
- Börja med styrsignalen 0 vid pumpstart. 
 
@image orm_en1-151.gif
Speed Control of a Pump 

En principlösning för styrning av den varvtalsreglerade pumpen visas i figuren
nedan (Configuration of Speed Control of a Pump) 

 
@image orm_en1-152.gif
Configuration of Speed Control of a Pump 

Mode-objektets attribut modifieras enligt följande: 
@image orm_en1-153.gif
 
Pid-objektets attribut modifieras enligt följande: 
@image orm_en1-154.gif
 
Insignalen på fo1-ingången tillsammans med OpMod-attributet i Mode-objektet 
bestämer aktuellt driftfall. 

@b OpMod = MANUAL (=1)
  Då Mode-objektets for-utgång blir TRUE tvingas Pid-objekt utgång
  anta värdet på FOV-ingången.

  Vid ändring av driftläge, AUTO --> MANUAL, innehåller ForcVal styr-
  signalens ( OutVal ) senaste värde. Detta är ett bra värde att starta
  manuella ändringar utifrån.

  I detta driftläge kan operatören ändra ForcVal liksom börvärdet SetVal.
  MinOut och MaxOut, i Pid-objektet, utgör ingen begränsning i läge
  MANUAL. 

@b OpMod = AUTO (=2)
  Operatören sätter flödesbörvärdet SetVal. Värdet ska ligga i intervallet
  MinSet till MaxSet. Optimeringsbörvärdet XSetVal ignoreras.

  Regulatorns styrsignal, OutVal varierar i intervallet MinOut till
  MaxOut.

  Mode-objektet avläser Pid-objektets OutVal och lagrar värdet i
  utgången ForcVal så länge AUTO gäller. 

@b OpMod = CASCADE (=4)
  Det externa optimeringsbörvärdet i XSetVal kopieras över till SetVal.
  Pid-objektet reglerar mot detta börvärde.

@b Force1 = 1 PUMP STOP
  Oberoende av värdet på OpMod tvångsstyrs regulatorns styrsignal till
  ForcVal = XForcVal (=0), dvs MinOut och MaxOut utgör ingen
  begrgänsning vid tvångsstyrning.

@h2 Alternativa regulatorer med följning 
 
@image orm_en1-155.gif
Shunt Control 

Genom shuntreglering över värmeväxlaren, skall TT1-temperaturen hållas 
konstant i sekundärnätet. TT2-temperaturen på returflödet till pannan ('BOILER') 
får dock inte understiga daggpunkttemperaturen vilket skulle kunna ske vid stora 
effektuttag. 

Vid låg primärtemperatur väljs TT2-reglering. Då driftsförhållanden medger sker 
återgång till TT1-reglering. 

I läge MANUAL sker styrningen med TT1-regulatorn. TIC2 får ej läggas i MANUAL. 
Se figur nedan (PLC program with Alternative Controllers). 

Inställningar 

... i Mode-objektet TIC1M har valts: 

- AccMod = 3 , dvs AUTO / MANUAL är båda tillåtna. 
- OpMod = AUTO, betyder att operatören sätter SetVal
        = MANUAL, betyder att operatören sätter utsignalen ForcVal 

... i Pid-objektet TIC1 har valts: 

- Inverse = TRUE, dvs. låg TT1-temperatur medför ökat flöde genom värmeväxlaren. 

... i Mode-objektet TIC2M har valts: 

- AccMod = 2 , dvs. endast AUTO 
- Konstruktören sätter gränsvärdet, dvs minvärdet av TT2, i SetVal 

... i Pid-objektet TIC2 har valts: 

- Inverse = FALSE, dvs. omvänt styringrepp, vid låga TT2-temperaturer minskar 
  flödet genom värmeväxlaren, by-pass flödet ökar. 
  
@image orm_en1-156.gif
PLC program with Alternative Controllers 

Driftfall: 

- Normal drift. TIC1 i AUTO. TIC2 följer i tvångsstyrning. 
- TT2 låg. TIC1 väljer i tvångsstyrning. 
- TIC1M i MANUELL. TIC1 ställer ut operatörens värde från TICM. ForcVal . 
- TIC2 följer i tvångsstyrning. 
- TIC2 återgår till AUTO då TT2 går under gränsen 
- Flödet genom värmeväxlaren är tillräckligt för att TT1-temperaturen ska gå 
  över börvärdet. Växla till TT1-reglering, dvs TIC1 styr shuntventilen. 

@h2 Kaskad reglering 

Temperaturreglering i ugn med två separata bränsleflödesloopar, med undantag 
för förbränningsluftregleringen, visas i figuren nedan. TT avser en temperatur 
transmitter, FT flödes transmittrar och FIC flödesregulatorer. TIC är en 
temperatur regulator 
 
@image orm_en1-157.gif
Block Diagram for Temperature Control 

Alla Pid-objekt har Inverse satt till TRUE. Lösningen bör kompletteras med 
tvångsstyrning av TIC1M till medelflöde då ingen FICx ligger i kaskad. En 
realiseringen visas i figuren nedan (Traditional Cascade Configuration). 

@image orm_en1-158.gif 
Traditional Cascade Configuration 

@h2 Gemensam eller individuell styrning av flera reglerloopar 
I figuren nedan (Two Levels with Mode Objects in a Control Loop) delar två 
reglerloopar en gemensamma mode-instans för synkront uppträdande i AUTO och 
MANUAL. Men varje enskild loop kan också styras individuellt från separata 
Mode-objekt med internt börvärde och egen manuell utsignal. Den individuella 
styrningen överrider den gemensamma. 

@image orm_en1-159.gif 
Two Levels with Mode Objects in a Control Loop 

@h2 Kvotreglering ('ratio control') 
Figuren nedan (Addition of a Reagent) visar tillsats av en reagens. 
Blandningsförhållandet ska hållas konstant oberoende av FT2-flödet. FT är 
flödestransmittern och FIC flödesregulatorn. 

@image orm_en1-160.gif 
Addition of a Reagent 

En realisering visas i figuren nedan (Ratio Control). Regleringen kan ske i 
AUTO (= operatören ger kvotbörvärde) eller MANUAL ( = operatören ger själv 
utsignalens storlek). Kvotärvärdet bör kontrollers för att förhindra division 
med noll. 
 
@image orm_en1-161.gif
Ratio Control 

@b Objektsbild
 @image orm_pid_og.png

@b Se även

<attr>ProcVal 
Ärvärdet (PROCess VALue). 
</attr>

<attr>SetVal 
Börvärdet (SETpoint VALue). Ingången kopplas ofta till motsvarande utgång 
på det associerade Mode-objektet. 
</attr>

<attr>Bias 
Framkopplingsvärdet ( 'feed forward value'). Attributet kan ändras från Pid - 
objektets MERbild. 
</attr>

<attr>ForcVal 
Tvångsstyrningsvärdet. Då Force är TRUE sätts OutVal = ForcVal . Ingången 
kopplas ofta till motsvarande utgång på det associerade Mode-objektet. 
</attr>

<attr>Force 
Anger om något av alternativen tvångsstyrning / MANUAL gäller eller ej. 
FALSE betyder att inget av dessa alternativ är förhanden; TRUE innebär att 
antingen tvångsstyrning eller MANUAL valts. Ingången kopplas ofta till 
motsvarande utgång på det associerade Mode-objektet. 
</attr>

<attr>IntOff 
Anger om integrationen kopplats bort eller ej. FALSE betyder att 
integrationstermen ska vara med; TRUE innebär att integrationen kopplats 
bort. Attributet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutVal 
Regulatorns syrsignal. Värdet baseras på algoritmens 'positional form', från 
operatören i läge MANUAL eller på ett s.k. tvångsstyrningsvärde. 
</attr>

<attr>OutChange 
Regulatorns syrsignal baserad på 'incremental form', eller förändring i styrsignalen
vid 'positional form'.
Attributet avser styrsignalsförändringen mellan två konsekutiva exekveringar; 
dvs. OutVal t - OutVal t-1 . 
</attr>

<attr>ControlDiff 
Reglerfelet (= ProcVal - SetVal ). 
</attr>

<attr>EndMin
Om beräknat värde på OutWindup inte tillhör intervallet { MinWindup , MaxWindup } ska 
begränsning ske till motsvarande intervallgräns. Attributet anger om sådan 
begränsning skett vid den senaste exekveringen eller ej. 

Om begränsning görs mot 

-- MinWindup , ska EndMin sättas TRUE
-- MaxWindup , ska EndMax sättas TRUE 

annars är de FALSE. 

EndMin / EndMax kan endast sättas i driftläge AUTO och CASCADE. Se 
också EndHys nedan. 
</attr>

<attr>EndMax 
Se EndMin
</attr>

<attr>PidAlg 
Det finns åtskilliga diskreta variationer av PID algoritmen. PidAlg anger det 
aktuella valet. Följande realiseringar finns att välja mellan: 

1 -- I I-regulator. Regulator med endast I-verkan.
Gain används inte.

3 -- I + P Integrerande regulator med proportionell regler-
verkan. P-termen baseras på ärvärdet ProcVal.

6 -- P P-regulator. Ger endast proportionell reglerverkan.

7 -- PI PI-regulator. Regulator som ger proportionell och
integrerande reglerverkan.
P-termen baseras på reglerfelet ControlDiff.

11 -- I + PD Integrerande regulator med proportionell deriverande
reglerverkan.
Både P- och D-termen baseras på ärvärdet ProcVal.

14 -- P + D Proportionell regulator med deriverande reglerverkan.
P baseras på reglerfelet, D på ärvärdet.

15 -- PI + D Proportionell integrerande regulator med deriverande
reglerverkan. P-termen baseras på reglerfelet ControlDiff,
D på ärvärdet value.

30 -- PD PD-regulator. Regulator som ger proportionell och
deriverande reglerverkan.
Både P- och D-termen baseras på reglerfelet.

31 -- PID PID-regulator. Regulator som ger proportionell
integrerande och deriverande reglerverkan. Både P- och
D-termen baseras på reglerfelet.
</attr>

<attr>Gain 
Proportionalitetsfaktorn. Anger förstärkningen; = 0.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>IntTime 
Anger, i sekunder, integrationstiden.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>DerTime 
Anger deriveringstiden i sekunder.

Normalt gäller att DerTime är större än ScanTime och
1.0 = DerGain <  
</attr>

<attr>DerGain 
Derivatatermens bidrag till styrsignalen kan filteraras i ett 1:a ordningens filter. 
Attributet definierar filtret. Om,
1.0 = DerGain <  , annars ingen filtrering 

DerGain är normalt i storleksordningen 3 till 4. 

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>Inverse 
Anger om reglerverkan ska ske inverterat eller ej. FALSE betyder att ett vid 
oförändrat börvärde spontant växande ärvärde möts av en ökande styrsignal, 
dvs. omvänd reglerverkan. TRUE är normalfallet, då ett spontant ökande 
ärvärde möts med en minskande styrsignal. 
</attr>

<attr>BiasGain 
Anger framkopplingens förstärkning; faktorn får vara negativ.

Värdet kan ändras från Pid-objektets MERbild. 
</attr>

<attr>MinOut
I driftläge AUTO och CASCADE ska den utställda styrsignlaen OutVal vara i 
intervallet { MinOut , MaxOut }.
Om OutVal är större än MaxOut eller mindre än MinOut , begränsas OutVal 
till värdet av motsvarande intervallgräns.
Om MinOut >= MaxOut sker ingen begränsning. 
</attr>

<attr>MaxOut 
Se MinOut
</attr>

<attr>ScanTime 
Programcykeltid i sekunder. Initieras automatiskt vid kompilering. 
</attr>

<attr>AccGain
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Gain resp. IntTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccInt
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Gain resp. IntTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccDer
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
DerTime. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccDGain 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
DerGain . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>


<attr>AccBias
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Bias. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccBGain 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
BiasGain . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinGain
Minsta tillåtna värde vid operatörsändring av Gain. 
</attr>

<attr>MaxGain 
Största tillåtna värde vid operatörsändring av Gain. 
</attr>

<attr>MinInt
Minsta tillåtna värde vid operatörsändring av IntTim. 
</attr>

<attr>MaxInt
Största tillåtna värde vid operatörsändring av IntTim. 
</attr>

<attr>MinDer
Minsta tillåtna värde vid operatörsändring av DerTim . 
</attr>

<attr>MaxDer 
Största tillåtna värde vid operatörsändring av DerTim . 
</attr>

<attr>MinBias 
Minsta tillåtna värde vid operatörsändring av Gain . 
</attr>

<attr>MaxBias
Största tillåtna värde vid operatörsändring av Gain . 
</attr>

<attr>MinBGain
Minsta tillåtna värde vid operatörsändring av BiasGain . 
</attr>

<attr>MaxBGain 
Största tillåtna värde vid operatörsändring av BiasGain . 
</attr>

<attr>MinDMaxDGain 
Minsta och största tillåtna värde vid operatörsändring av DerGain . 
</attr>

<attr>SetMinShow
Skalområdets nedre gräns vid presentation av ProcVal och SetVal i 
Pid-objektets objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>SetMaxShow 
Skalområdets övre gräns vid presentation av ProcVal och SetVal i 
Pid-objektets objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutMinShow
Skalområdets nedre gräns vid presentation av OutVal i Pid-objektets 
objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>OutMaxShow 
Skalområdets övre gräns vid presentation av OutVal i Pid-objektets 
objektbild. 

Värdena kan ändras från Pid-objektets MERbild. 
</attr>

<attr>SetEngUnit 
Anger ingenjörsenheten på SetMinShow / SetMaxShow , t.ex. meter. Används 
i Pid-objektets objektbild. 
</attr>

<attr>OutEngUnit 
Anger ingenjörsenheten på OutMinShow / OutMaxShow , t.ex. %. Används i 
Pid-objektets objektbild. 
</attr>

<attr>ModeObjDid 
Anger fullständigt namn på det med Pid-objektet associerade Mode-objektet. 
Attributet gör det möjligt att via knapp i Pid-objektets objektbild starta 
objektbilden för det associerade Mode-objektet. 
</attr>

<attr>EndHys 
Anger hysteresen på MinOut och MaxOut i samband med manövreringen av 
EndMin / EndMax flaggorna. 
</attr>
 
<attr>FiltDer 
Filtrerad derivata sparas till nästa exekevering. 
</attr>

<attr>PDAbsFlag 
Anger att utsignalen beräknas direkt med regleravvikelsen.
Vid nollvärde beräknas en offset i manuell mod, så att vi får stötfri övergång till auto. 
</attr>

<attr>WindupMask 
Möjliga värden är:
1  -- I		Bara I-delen begränsas i OutWindup
2  -- BI	I-delen och Bias begränsas i OutWindup
4  -- BIP	Också P-delen begränsas i OutWindup
8  -- BIPD	Hela utsignalen, även D-delen begränsas i OutWindup
</attr>

<attr>MinWindup
I driftläge AUTO och CASCADE ska den utställda styrsignalen OutWindup vara i 
intervallet { MinWindup , MaxWindup }. Flaggorna EndMin / EndMax används för att 
signalera då begränsning sker.
Om OutWindup är större än MaxWindup eller mindre än MinWindup , begränsas OutWindup 
till värdet av motsvarande intervallgräns.
Om MinWindup >= MaxWindup sker ingen begränsning. 
</attr>

<attr>MaxWindup 
Se MinOut
</attr>

<attr>PDManOffset 
Offset beräknas i manuell mod, och används vid P och PD-algoritm 
för att få stötfri övergång till auto. 
</attr>

<attr>OutWindup 
Utsignal som begränsas av MinWindup och MaxWindup
</attr>

<attr>AbsOut 
Utsignaldel som ligger utanför OutWindup
</attr>

<attr>OpMod
OpMod = MANUAL (=1)
Då Mode-objektets for-utgång blir TRUE tvingas Pid-objekt utgång
anta värdet på FOV-ingången.
Vid ändring av driftläge, AUTO --> MANUAL, innehåller ForcVal styr-
signalens ( OutVal ) senaste värde. Detta är ett bra värde att starta
manuella ändringar utifrån.
I detta driftläge kan operatören ändra ForcVal liksom börvärdet SetVal.
MinOut och MaxOut, i Pid-objektet, utgör ingen begränsning i läge
MANUAL. 

OpMod = AUTO (=2)
Operatören sätter flödesbörvärdet SetVal. Värdet ska ligga i intervallet
MinSet till MaxSet. Optimeringsbörvärdet XSetVal ignoreras.
Regulatorns styrsignal, OutVal varierar i intervallet MinOut till
MaxOut.
Mode-objektet avläser Pid-objektets OutVal och lagrar värdet i
utgången ForcVal så länge AUTO gäller. 

OpMod = CASCADE (=4)
Det externa optimeringsbörvärdet i XSetVal kopieras över till SetVal.
Pid-objektet reglerar mot detta börvärde.

Force1 = 1 PUMP STOP
Oberoende av värdet på OpMod tvångsstyrs regulatorns styrsignal till
ForcVal = XForcVal (=0), dvs MinOut och MaxOut utgör ingen
begrgänsning vid tvångsstyrning.
</attr>
</class>

#
# Class PiPos
#
<class> PiPos
@Summary Översätter pulsräknarvärde till ingenjörsvärde
Översätter pulsräknarvärde till ingenjörsvärde (position, volym etc.). 
@image orm_pipos_fo.png

Antag att ingenjörsvärdet är en position. Den aktuell positionen, ActVal , 
beräknas vid varje exekvering med hjälp av den linjära ekvationen 

ActVal = Gain · ( PulsIn - PiCal1 ) + PosCal1 

Positionen beräknas relativt den kända positionen i 'calibration point 1' utifrån 
aktuell pulssignal, PulsIn , sparad pulssignal PiCal1 och sparad position, 
PosCal1 , i 'calibration point 1'. Förstärkningen, Gain , är antingen given eller 
beräknad med hjälp av en andra kalibreringspunkt, 'calibration point 2'. 
@image orm_en1-163.gif
 
Hur kalibreringen utförs beskrivs nedan under Calibration. 

@h1 Calibration 

Bestämning av position genom kalibrering med hjälp av 'calibration point 1'. 

Det finns fyra olika sätt att bestämma position: 

Ingen kalibrering. Vid konfigureringen anges pulsvärdet PICal1 när ActVal är 
lika med den kända positionen PosCal1 . Metoden kan användas då pulsvärdet, 
vid konfigureringen, är känt för en bestämd position. 
Operatören kalibrerar. Operatören anger det styrda föremålets position CalPos1 
och initierar därefter kalibreringen genom att sätta CalOrder1 . 
Automatisk kalibrering vid bestämd position. Koppla co1 -ingången till binär 
signal. Ange motsvarande position i CalPos1 . Vid positiv flank på CalOrder1 
avläses pulsvärdet PulsIn och lagras i PICal1 och värdet i CalPos1 kopieras till 
PosCal1 . 
Automatisk kalibrering mot en varierande position. Som i fall 3) men CalPos1 
kopplas också till en signal för den beräknade positionen. Vid positiv flank på 
CalOrder1 avläses pulsvärdet PulsIn och lagras i PICal1 och värdet PosCal1 
uppdateras i enlighet med den externa signalen.
Automatisk kalibrering bör ske vid låg hastighet för att undvika positionsfel 
Bestämning av förstärkningen (= Gain ) genom kalibrering med hjälp av 
'calibration point 2' . 

Ingen kalibrering.
Konstruktören anger Gain ; (= lägesdifferens per puls ). Detta är det normala 
förfarandet då konstruktören vet pulsgivarens karakteristik. Om 
omsättningsfaktorn betecknas Omsfak och Omsfak anger antal pulser per 
enhet, t.ex mm, grader etc. gäller att Gain =1 / Omsfak 
Moment 2- 4 som för positionskalibrering ovan.
Först görs en kalibrering med hjälp av 'calibration point 1'. Därefter görs en 
kalibrering med hjälp av 'calibration point 2', varvid en ny position med 
tillhörande pulsvärde avläses. Därefter beräknas Gain .
Automatisk kalibrering av förstärkningen är förmodligen ovanlig. Däremot kan 
det vara aktuellt med omkalibrering efter byte av pulsgivare eller vid 
förslitning av mäthjul. 

<attr>PulsIn
Pulsräknarvärde ( i form av heltal). T.ex kan pulsvärdet hämtas genom 
anslutning till PI-utgång på Count-objekt, till PI- eller PIX-utgång på GetPi -
objekt. 

NB! Ansluts en analog signal, t.ex Av-signal, blir resultatet felaktigt. 
</attr>

<attr>CalPos1 
Anger positionen i kalibreringspunkt 1. Värdet används vid 
positionskalibrering. 

Attributet kan tilldelas värde utvecklingsmiljön med hjälp av Objekts Editorn 
och i målmiljön med t.ex funktion i C eller PLC program. är motsvarande 
ingång ansluten sker uppdatering utifrån kopplad storhet. 
</attr>

<attr>CalOrder1 
'Calibration order 1'. 

Flaggan anger om kalibrering av position ( se nedan under Calibration ) ska 
initieras eller ej. FALSE betyder ingen kalibrering. 

Övergången FALSE -> TRUE initierar 'calibration in point 1'. Pulsvärdet 
PulsIn avläses och lagras i PICal1 och värdet i CalPos1 kopieras över till 
PosCal1 . 

Lämnas ingången öppen kan attributet sättas t.ex via funktion i C-program. 

Sedan flaggan noterats ser ProviewR till att den tas ned. 
</attr>

<attr>CalPos2 
Anger positionen i kalibreringspunkt 2. Värdet används vid kalibrering av 
förstärkningen, dvs av Gain . 

Attributet kan tilldelas värde i utvecklingsmiljön med hjälp av Objekts Editorn 
och i målmiljön med t.ex funktion i C eller PLC program. är motsvarande 
ingång ansluten sker uppdatering utifrån kopplad storhet. 
</attr>

<attr>CalOrder2 
'Calibration order 2'. 

Flaggan anger om kalibrering av Gain ( se nedan under Calibration ) ska 
initieras eller ej. FALSE betyder ingen kalibrering. 

Övergången FALSE -> TRUE initierar 'calibration in point 2'. 

Lämnas ingången öppen kan attributet sättas t.ex via funktion i C-program. 

Sedan flaggan noterats ser ProviewR till att den tas ned. 
</attr>

<attr>ActVal 

Aktuell position. Enheten följer av enheten på Gain . Om Gain är i mm / puls 
blir ActVal i mm. 
</attr>

<attr>Gain 
Antag att omsättningsfaktorn betecknas Omsfak . Om Omsfak anger antalet 
pulser per enhet, t.ex mm, grader etc. Gain erhålls då som 1 / Omsfak .
Attributets värde är antingen givet eller beräknat; se nedan under Calibration 
</attr>

<attr>PICal1 
Pulsräknarvärde vid senaste positionskalibreringen i 'calibration at point 1'. 
Motsvarande ingenjörsvärde finns i PosCal1 . 
</attr>

<attr>CalOrder1Old
Används för flankdetektering. 
</attr>

<attr>CalOrder2Old 
Används för flankdetektering. 
</attr>

<attr>PosCal1 
Position vid senaste positionskalibrering enligt 'calibration at point 1'. 
Motsvarande pulsräknarvärde finns i PiCal11 . PosCal1 har samma dimension 
som ActVal . 
</attr>

<attr>PosCal2 
Position vid senaste positionskalibrering enligt 'calibration at point 2'. 
Motsvarande pulsräknarvärde finns i PiCal12 . PosCal2 har samma dimension 
som ActVal . 
</attr>

<attr>AccCalPos1
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
CalPos1. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccCalOrder1 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
CalOrder1. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccCalOrder2 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
CalOrder2. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccCalPos2
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
CalPos2. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinCalPos1
Minsta tillåtna värde vid operatörsändring av CalPos1. 
</attr>

<attr>MaxCalPos1 
Största tillåtna värde vid operatörsändring av CalPos1. 
</attr>

<attr>MinCalPos2
Minsta tillåtna värde vid operatörsändring av CalPos2 . 
</attr>

<attr>MaxCalPos2 
Största tillåtna värde vid operatörsändring av CalPos2 . 
</attr>
</class>

#
# Class PiSpeed
#
<class> PiSpeed
@Summary Hastighetsberäkning av pulsräknaringång. 
Derivering av pulsräknarsignal. 
@image orm_pispeed_fo.gif

Omvandlar pulsgivarsignal för t.ex volym till flöde, sträcka till hastighet etc.
Pulsdifferensen är korrekt också om insignalen har 'overflow'. 


<attr>PulsIn 
Pulsräknarvärde (i form av heltal). T.ex kan pulsvärdet hämtas genom 
anslutning till PI-utgång på Count-objekt, till PI- eller PIX-utgång på GetPi -
objekt. 

NB! Ansluts analog signal, t.ex Av-signal, blir resultatet felaktigt. 
</attr>

<attr>ActVal 
Ändringshastighet. (Ändring per tidsenhet).
ActVal t = Gain · TimFact ·  , där TimFact är
deriveringstid.
</attr>

<attr>Gain 
Omsättningsfaktor. Dimension är ingenjörsvärde / puls. 
</attr>

<attr>TimFact 
Deriveringstid i sekunder. Skalfaktor uttryckt i sekunder / tidsenhet. 

Om Gain är i m / puls ger divisionen m / sek. Med TimFact = 3600 sekunder / 
h blir resultatet i m / h. 
</attr>

<attr>ScanTime 
Programcykeltid i sekunder. Värdet lagras automatiskt vid kompilering. 
</attr>
</class>

#
# Class PlcPgm
#
<class> PlcPgm
@Summary Representerar ett PLC program. 
Representerar ett PLC program. 


PlcPgm-objekt konfigureras under $ PlantHier-objekt med hjälp av 
Configuration Editor och dess innehåll, själva PLC programmen, med PLC 
Editorn.
Under PlcPgm-objektet skapas ett WindowPlc objekt, som blir förälderobjekt 
till objekten i PLC programmet. 

PlcPgm-objekten namn fungerar som etiketter på olika PLC program.
PlcPgm-objekt representera både kod och data. 

Olika PlcPgm-objekt med samma värde på ScanTime kommer att exekvera i 
en och samma PLC- subprocess.

NB! PLC-subprocessen med kortaste cykeltiden, dvs. med högsta frekvensen, 
kallas basefrekvenssubprocessen. Den hanterar också inläsning/utställning av 
Di-, Do-, Dv- och Co-signaler anslutna till nodens lokala I/O-system. De 
övriga subprocesserna benämns gemensamt som delfrekvenssubprocesserna.

<attr>ScanTime 
Anger, i sekunder, den nominella tiden mellan två successiva exekveringar av 
PLC programmet. Minsta tillåtna värde på ScanTime är 0.02 sekunder. Vid 
'Create Plc Files ...' erhålls meddelande om ScanTime ? heltalsmultipel av 20 
millisekunder. Lämnas ScanTime blankt kommer det att få värdet 0.02. 

En ändring av ScanTime med hjälp av Configuration Editor eller Utilities 
Window kommer att beaktas utan att PLC programmet omkompileras förutsatt 
att nya 'load files' och ny 'boot file' skapas. 

Eftersom systemklockans upplösning är 10 ms är det lämpligt att ange 
ScanTime med högst 2 decimaler.

ScanTime and Slip 

frekvenssubprocessen och därmed I/O-hanteringen. Praktiska överväganden får 
avgöra detta val; vad klarar I/O:et, vad får det kosta i CPU-last , 
storleksordningen av processens dödtider etc. Vanliga val är 0.02 (=50 Hz) och 
1 (= 1 Hz). 

Basfrekvenssubprocessen arbetar i två steg enligt följande: 

Inläsning och utställning av digitala signaler. Inläsning av Co-signaler. 
Exekverar PlcPgm-kod. 
Dvs under denna cykel beräknade utsignaler ställs ut först vid nästa 
basfrekvenscykel. 

Sätts delfrekvenssubprocessernas ScanTime = 'heltalsmultipel av basperioden' 
kommer delfrekvenssubprocesserna att få 'färska' insignalvärden. Om inte, säg 
t.ex. att basperioden är 60 sek och en delfrekvenssubprocess har ScanTime = 
100 sek, då är de till delfrekvenssubprocessen inlästa signalvärdena drygt 40 
sek gamla när de tidigast börjar användas och signalerna från 
delfrekvenssubprocessen kommer att ställs ut drygt 20 sek efter det att de 
beräknats! 

En ytterligare aspekt till valet av ScanTime är hanteringen av övriga signaler 
mellan hårdvara och I/O-kopierad area. Analoga signaler hanteras med 
frekvensen 5 Hz, räknares ActualValue uppdateras med 1 Hz (av separat 
IO_COMM-jobb). är det fråga om distribuerat I/O av typen RTP spelar också 
konfigureringen av DIOC ( 'Distributed IO Controller') in. (PLC-jobbet är inte 
synkroniserat med IO_COMM-jobbet.) 
</attr>

<attr>ResetObject 
Anger komplett namn på det Di -, Dv - eller Do-objekt som används som 
resetsignal i PLC programmets Grafcet-kedja/or. Vad gäller resetsignalens 
användning.

Saknas behov av att kunna göra reset på Grafcet-kedja lämnas attributet blankt. 

Naturligtvis kan Objekts Editorn alltid användas för att ange namn på 
ResetObject . Men i PLC Editorn kan följande metod vara ett alternativ: 

Öppna Edit-menyn under ikonpaletten och välj ShowPlcAttr . Skapa på vanligt 
sätt ett ShowPlcAttr-objekt i PLC programmet. 

Välj nu namnet på önskat ResetObject i Navigator genom att med MB1 klicka 
på det och därefter dubbel-klicka med CTRL/MB1 i Reset-fältet.
</attr>

<attr>ExecuteOrder 
Kontrollerar exekveringsordning av olika PlcPgm på samma tråd.
Lägre värden av ExecuteOrder exekverar före högre.
</attr>

</class>

#
# Class PlcTemplate
#
<class> PlcTemplate
@Summary Konfiguerar ett temlate PLC program i en klassdefinition.
Konfiguerar ett temlate PLC program i en klassdefinition.

Ett sammansatt funktions-objekt innehåller PLC-kod, och den här koden
definieras i ett PlcTemplate program.
Objektet placeras i klass-definitions hierarkin under $ClassDef objektet,
och ska namnges 'Code'.

<attr>Description
Beskrivning av programmet.
</attr>
<attr>ThreadObject
Används ej.
</attr>
<attr>ScanTime
Används ej.
</attr>
<attr>ResetObject
Används ej.
</attr>
<attr>ExecuteOrder
Används ej.
</attr>
</class>

#
# Class PlcThread
#
<class> PlcThread
@Summary Innehåller data för en plc-tråd.
Innehåller data för en plc-tråd. Prio och ScanTime är indata till plc
processen som startar alla trådarna. Övriga attribut är utdata från 
plc tråden och uppdateras periodiskt.

@b Objektsbild
  @image orm_plcthread_og.png

<attr>Description
Beskrivning av plc-tråden.
</attr>
<attr>Prio
Plc-trådens prioritet.
</attr>
<attr>ScanTime
Plc-trådens skantid.
</attr>
<attr>ActualScanTime
Verklig skantid för senaste scan.
</attr>
<attr>ScanTimeMin
Min verklig skantid sedan tråden startats.
</attr>
<attr>ScanTimeMean
Medel skantid för det senaste x cyklerna (x definieras av 'ScanTimeMeanCount').
</attr>
<attr>ScanTimeMax
Max verklig scantid sedan tråden startats.
</attr>
<attr>ScanTimeMeanCount
Antal cykler som 'ScanTimeMean' beräknas på.
</attr>
<attr>Count
Totalt antal cykler sedan tråden startades.
</attr>
<attr>Last
Ekvekverings-tid för senaste cykeln (exclusive väntetid).
</attr>
<attr>Sum
Total exekverings-tid sedan tråden startats.
</attr>
<attr>Min
Min exekveringstid för en cykel sedan tråden startats.
</attr>
<attr>Mean
Medelvärde av exekveringstid sedan tråden startats.
</attr>
<attr>Coverage
Kvot mellan exekveringstid och nominell skantid (i procent).
</attr>
<attr>Max
Max exekveringstid för en cykel sedan tråden startats.
</attr>
<attr>Count_1_8
Antal cykler där exekveringstiden är mindre än 1/8 av nominell skantid.
</attr>
<attr>Count_1_4
Antal cykler där exekveringstiden är mindre än 1/4 av nominell skantid.
</attr>
<attr>Count_1_2
Antal cykler där exekveringstiden är mindre än 1/2 av nominell skantid.
</attr>
<attr>Count_1_1
Antal cykler där exekveringstiden är mindre nominell skantid.
</attr>
<attr>Count_2_1
Antal cykler där exekveringstiden är mindre än 2 ggr nominell skantid.
</attr>
<attr>Count_4_1
Antal cykler där exekveringstiden är mindre än 4 ggr nominell skantid.
</attr>
<attr>Count_8_1
Antal cykler där exekveringstiden är mindre än 8 ggr nominell skantid.
</attr>
<attr>CountHigh
Antal cykler där exekveringstiden är större än 8 ggr nominell skantid.
</attr>
<attr>SlipCount
Antal cykler när en cykel inte startades i tid.
</attr>
<attr>Limit_1_8
1/8 av nominell skantid.
</attr>
<attr>Limit_1_4
1/4 av nominell skantid.
</attr>
<attr>Limit_1_2
1/2 av nominell skantid.
</attr>
<attr>Limit_1_1
1/1 av nominell skantid.
</attr>
<attr>Limit_2_1
2/1 av nominell skantid.
</attr>
<attr>Limit_4_1
4/1 av nominell skantid.
</attr>
<attr>Limit_8_1
8/1 av nominell skantid.
</attr>
<attr>Limit_1_8
1/8 av nominell skantid.
</attr>
<attr>Dlid
Directlänknings id.
</attr>
<attr>ScanTimeStart
Absolut tid när 'ScanTimeMean' senast beräknades.
</attr>
<attr>TimerStart
Används av timer hanteringen.
</attr>
<attr>IoProcess
Process nummret är normalt PlcProcess (1) för plc trådar.
I vissa I/O system kan dock en plc-tråd agera som en separat I/O-process.
Detta görs när en Agent, Rack eller Card ska hanteras av flera plc-trådar.
</attr>
</class>

#
# Class PlotGroup
#
<class> PlotGroup
@Summary Konfigurerar kurvgrupp. 
Konfigurerar kurvgrupp. 

PlotGroup-objektet sammanför upp till 4 snabb- eller 4 trendkurvor till en 
kurvgrupp genom att motsvarande datalagringsobjekt pekas ut av 
YObjectName . De sammanförda kurvorna, eg. mätstorheterna, kan vara 
samplade med olika frekvenser. 

@b Tips 

Knappen 'Trend' resp 'Fast' i operatörsmiljön ger båda en lista över PlotGroup -
objekt som finns på den aktuella noden oberoende av användare. Vilken lista 
ett visst PlotGroup-objekt placeras i bestäms av Trend. 

Användarna 'Host' och 'Process', enligt figur nedan, kommer att se samma
listor men genom att gruppera PlotGroup-objekten i separata hierarkier kan
konstruktören indikera vilka som är avsedda för 'Host' resp 'Process'
@image orm_en1-170.gif

@b Objektsbild
 @image orm_plotgroup_og.png

<attr>Description 
Valfri text för att t.ex beskriva kurvgruppen. 
</attr>

<attr>Trend 
Anger om kurvgruppen betår av snabb- eller trendkurvor. FALSE betyder 
snabbkurvor och TRUE innebär trendkurvor. 
</attr>

<attr>YObjectName
Anger namnet på upptill fyra DsTrend - eller DsFast objekt. Vilka 
mätstorheter som ska plottas kan inte ändras från PlotGroup-objektets MER-
bild. 
</attr>

<attr>YUnit
Anger de utritade storheternas ingenjörsenheter. Enheterna kan inte ändras från 
PlotGroup-objektets MER-bild. 
</attr>

<attr>YMinValue
Anger, för respektive kurva, den vertikala axelns undre gräns. 
</attr>

<attr>YMaxValue
Anger, för respektive kurva, den vertikala axelns övre gräns. 
</attr>

<attr>YTickmajor
Anger, för respektive kurva, den vertikala axelns skalindelning. YTickmajor 
anger avståndet mellan de tjocka strecken och YTickminor avståndet mellan de 
tunna; YTickminor < YTickmajor . 
</attr>

<attr>YTickminor
Se YTickmajor.
</attr>

<attr>XMinValue
Ej använd. 
</attr>

<attr>XMaxValue 
Ej använd. 
</attr>

<attr>XShiftValue 
Anger om kurvorna ska rullas i samband med uppdatering eller ej. Noll ger 
ingen rullning och ett ger rullning.. 
</attr>

<attr>XTickmajor
Anger, för respektive kurva, tidsaxelns skalindelning. XTickmajor anger 
avståndet mellan de tjocka strecken och XTickminor avståndet mellan de 
tunna; XTickminor < XTickmajor . Värdet på XTickmajor bestämmer också 
storleken på maskorna i diagrammets rutnät. 

Attributet kan inte ändras från PlotGroup-objektets MER-bild. 
</attr>

<attr>XTickminor
Se XTickMajor
</attr>

<attr>NumPoints 
Kurvorna plottas som funktion av tiden. Antag att den snabbast samplade 
mätstorheten i en grupp samplats med perioden T. Vid visning gäller då att 
"bredden" på diagrammets tidsfönster initialt blir NumPoints · T. 

Vid plottningen av kurva sker interpolering mellan samplen. Interpoleringen 
för en långsammare samplad signal görs då över relativt längre tider. 

0 < NumPoints = "antal platser i datalagringsobjektets DataBuffer ". Attributet 
kan ändras från PlotGroup-objektets MER-bild. 
</attr>
</class>

#
# Class Po
#
<class> Po
@Summary Puls utgång
Puls utgång (Pulse Output) är ett modifierat Do objekt för pulsgenerering. 

Po objekt knyts till ChanDo på samma sätt som Do objekt.

Objektet genererar, då ActualValue gör viss övergång, en puls med 
varaktigheten PulseLength . Vilken övergång hos ActualValue som ska initiera 
puls anges av PosFlank . Om det är en positiv eller negativ puls som ska skapas 
anges av PosPulse . 

 
ActualValue kan manövreras t.ex från applikationsprogram med systemanropet 
gdh_SetObjectInfo 

Om ResetActualValue = TRUE återställer ProviewR ActualValue efter trigg 
detektering. återställning sker oberoende av om utgången håller på med en puls 
eller ej. Upprepad triggning under pågående puls påverkar inte den befintliga 
pulsen. 

Om EmergBreak är TRUE och EmergBreakSelect = 2 ställs FixedOutValue ut 
och TestValue ställs ut när TestOn är TRUE, dvs i dessa fall sker ingen 
filtrering. 

@b Tips 

Placera i utvecklingsmiljön objektet under $ PlantHier objekt så att det 
kommer att tillhöra samma målnod som dess associerade kanalobjekt. 

<attr>Description 
Valfri text för att beskriva vilken fysisk signal som representeras; t.ex. 
signalnamn, beskrivande text etc. 
</attr>

<attr>SigChanCon 
Namn på associerat kanalobjekt. 
</attr>

<attr>ValueIndex 
Index i Value-vektorn hos de DoArea-objekt som används för bas- 
resp. delfrekvenssampel. Initieras vid start av rt_ini. 
</attr>

<attr>ActualValue 
Pekare till ärvärdet (= ingenjörsvärdet ActualValue ). 
</attr>

<attr>SigValue 
Ej använd. 
</attr>

<attr>DefGraph 
@Summary Ett XttGraph objekt som öppnar en graf för det här objektet.
Ett XttGraph objekt som öppnar en graf som innehåller data för det här 
objektet. Grafen kan öppnas från popup-menyn för objektet.
</attr>

<attr>DefTrend 
@Summary Ett trend objekt som visar en trend för det här objektet.
Ett DsTrend eller PlotGroup som innehåller en trend för det här objektet.
Trenden kan öppnas från popup-menyn för objektet.
</attr>

<attr>HelpTopic
@Summary Hjälp-text för objektet.
Ett hjälp ämne (topic) i xtt-hjälp filen som innehåller hjälp för det
här objektet. Hjälptexten kan visas från popup-menyn för objektet.
</attr>

<attr>DataSheet
@Summary En URL till datablad för objektet.
En URL till datablad för objektet. Databladet kan visas från popup-menyn
för objektet.
</attr>

<attr>CircuitDiagram
@Summary En URL till kopplings-schemat för utrustningen i det här objektet.
En URL till kopplings-schemat för utrustningen i det här objektet.
Kopplings-schemat kan visas från popup-menyn för objektet.

Om attributet är tomt, kommer CircuitDiagram-metoden att leta efter nämrsta 
förfader som har ett angivet kopplings-schema och använda denna URL istället.
Om denna funktion ej önskas, lägg in strängen 'Disabled' i attributet. Detta
kommer att stänga av CircuitDiagram-metoden för detta objekt, och för alla
barn med tomt CircuitDiagram attribut.
</attr>

<attr>PulseLength 
Anger pulslängden i sekunder. 
</attr>

<attr>PosFlank 
Anger om objektet ska trigga på positiv eller negativ flank. Triggning kan 
endast ske när objektet befinner sig i sitt "viloläge", dvs ingen pulsgenerering 
pågår. 

- TRUE innebär att objektet triggas då ActualValue gör övergången
FALSE -> TRUE. 

- FALSE betyder att objektet triggas då ActualValue gör övergången
TRUE -> FALSE. 
</attr>

<attr>PosPulse 
Anger om en positiv eller negativ puls ska skapas då objektet triggas. 

- TRUE innebär att en positiv puls skapas då objektet triggas. I
"viloläget" är utsignalen FALSE. 

- FALSE betyder att en negativ puls skapas då objektet triggas. I
"viloläget" är utsignalen TRUE. 
</attr>

<attr>ResetActualValue 
Anger om ProviewR ska återställa ActualValue efter detektering eller ej. 

- TRUE innebär att ActualValue sätts: 

FALSE efter triggning, om PosFlank = TRUE 
TRUE efter triggning, om PosFlank = FALSE 
Återställning sker direkt efter detektering oberoende av om utgången då
håller på med en puls eller ej. Upprepad triggning under pågående puls
påverkar inte den befintliga pulsen. 

- FALSE innbär att ProviewR ej återställer ActualValue . 
</attr>
</class>

#
# Class Point
#
<class> Point
@Summary Objekt för styrning och sammankoppling av förbindningslinjer. 
Objekt för styrning och sammankoppling av förbindningslinjer. 


Genom att placera Point objekt på lämpliga ställen och förbinda dem kan man: 
- styra förbindningslinjernas väg 
- skapa förgreningspunkt mellan en utgång och en ingång 
- koppla en utgång till en ingång på samma objekt 

@b Tips 

Ska en utgång kopplas till en ingång på samma objekt måste det ske via Point 
objekt. 
</class>

#
# Class Posit
#
<class> Posit
@Summary Positionerare.
Positionerare. Används för positionering. 
@image orm_en1-172.gif

Positioneringen, som utförs utan hysteres, görs med utgångarna o1 och o2 . 

Två driftlägen finns, MANUAL / AUTO. Driftläge väljs med hjälp av 
ManMode på följande sätt: 
@image orm_en1-173.gif
 
För Posit-objekt gäller att styrningen i MANUAL sköts internt på samma sätt 
som i AUTO. Skillnaden mellan MANUAL / AUTO ligger väsentligen i hur 
positioneringen startas/stoppas. 

NB! I andra objekt ( Pid , MValve , Valve , Drive etc) betyder MANUAL att 
operatören direkt betsämmer utsignalen till storlek/riktning eller TRUE/FALSE 
-- men så är det inte i Posit-objekt. 

@h2 MANUAL 
Läge MANUAL är tänkt att hanteras från objektets objektbild. 
Denna saknas dock f.n. 

* Börvärdet anges i SetPos. 
* Positioneringen startas då PosOn blir TRUE. 
* Olika händeser kan avsluta positioneringen: 
@image orm_en1-174.gif
 
   - ärvärdet har hållit i sig i dödzonintervallet, dvs. målområdet, under der tid 
     som anges av TimerTime.

   - PosOn blir FALSE.

   - (insignalen) Reset blir TRUE.

@h2 AUTO
* Positioneringen begärs vid positiv flank på AutoPos. 
* Olika händelser kan avsluta positioneringen: 
  - TimerTime > 0. Ärvärdet har hållit i sig i dödzonintervallet, dvs. målområdet, 
    under den tid som anges av TimerTime. En ny positionering begärs genom 
    positiv flank på AutoPos, dvs. inte på grund av att PosVal är utanför 
    målområdet.

  - TimerTime <= 0. Positioneringen avslutas aldrig utan fortsätter följa SetPos 
    tills att Reset blir TRUE.

  - (insignalen) Reset blir TRUE.

@h2 Exempel
@b Positionsstyrd vagn
Med hjäp av tryckknappen, TK_start, begärs start positionering.
Positioneringen sker mot det av 'Potentiometer' satta värdet. Positioneringen
avbryts så snart vagnen de senaste 5 sekunderna befunnit sig i målområdet.
@image orm_en1-176.gif
Vagnens färdriktning styrs av Order1 och Order2 och av en analog referens,
'Referens'. Farten bör vara låg då vagnen ligger nära börvärdet och vice versa.
Därför bör Table-objektet definiera en funktion med följande utseende.
@image orm_en1-177.gif

<attr>PosVal 
Anger positionens ärvärde; P rocess V alue. 
</attr>

<attr>SetPos 
Anger, oberoende av driftläge, positionens börvärde ( S etpoint V alue). 
</attr>

<attr>AutoPos 
Anger, i läge AUTO, om positionering begärts eller ej. FALSE saknar 
betydelse. övergången FALSE -> TRUE betyder att positionering begärs och 
om Reset är FALSE, blir PosOn TRUE och positioneringen startar. 
</attr>

<attr>Reset 
Anger, oberoende av driftläge, om positioneringen ska blockeras eller ej. 
FALSE saknar betydelse. Positioneringen stoppas så länge attributet är TRUE. 
</attr>


<attr>ManMode 
Anger valt driftläge ( MANUAL eller AUTO). Attributet används som en 
traditionell parameter, dvs man kan skriva/läsa i den från olika program. 
Tanken med att placera attributet som ett utgångsattribut är att attributet då 
enklare kan användas i den grafiska konfigurationen. FALSE betyder att 
AUTO gäller och TRUE att driftläget är MANUAL. 
</attr>

<attr>PosOn 
Anger om positionering pågår eller ej. FALSE betyder att ingen positionering 
pågår f.n. och TRUE innebär positionering pågår. 

I läge MANUAL startas positioneringen, om Reset är FALSE, genom att 
PosOn sätts TRUE och stoppas då PosOn sätts FALSE. 
</attr>

<attr>Order1 
'Backward order', dvs körning så att värdet på PosVal minskar. FALSE betyder 
ingen 'backward order' och TRUE innebär 'backward order' så länge som 
PosVal > SetPos + DeadZone1 och positionering begärs. 
</attr>

<attr>Order2 
'Forward order', dvs körning så att värdet på PosVal växer. FALSE betyder 
ingen 'forward order' och TRUE innebär 'forward order' så länge som PosVal < 
SetPos - DeadZone2 och positionering begärs. 
</attr>

<attr>InPlace 
Anger om PosVal är i målområdet eller ej. FALSE betyder att så inte är fallet 
TRUE att svaret är ja. 
</attr>

<attr>PosError 
Anger aktuellt positionsfel (= PosVal - SetPos ). 
</attr>

<attr>DeadZone1
Värdet, som ska vara >= 0, anger målområdets undre gräns. 
@image orm_en1-175.gif
</attr>

<attr>DeadZone2 
Värdet, som ska vara >= 0, anger målområdets övre gräns. 
</attr>
 
<attr>TimerTime 
Anger, i sekunder, den tid som PosVal ska ligga i målområdet för att 
positioneringen ska avbrytas. Attributet beaktas enbart i läge AUTO. Se ovan. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts i samband med 'Create Load Files ...' för 
användning i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra TimerTime 
. Följande behörigheter är möjliga: 

0 -- Ingen växling tillåten
? 0 -- Växling tillåten. 
</attr>

<attr>TimerMin
Anger minsta tillåtna värde vid operatörsändring av TimerTime. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax 
Anger största tillåtna värde vid operatörsändring av TimerTime. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller om sådant inte används, på TimerDoDum. 
Efter tiden TimerTime tas den signal, som utpekas av TimerDo , ned. 
</attr>
</class>

#
# Class Pos3P
#
<class> Pos3P
@Summary Tre-lägesregulator
Tre-lägesregulator, 'Positional 3-step controller', med lägesåterföring och 
dödzon. 'Positional' syftar på insignalen till OUT-ingången och trean på att tre 
diskreta order kan ges med innebörden höger/vänster/ 0, upp/ner/0, 
öka/minska/0 etc. Utgångarna är tidsproportionella mot ingången. 
@image orm_en1-178.gif


Precis som för Inc3P är det möjligt att styra med utgångarna ope / clos 
och/eller signaler vars namn finns i DoOpen / DoClose . Utgångarna och 
signalerna kan sättas till TRUE med den frekvens som PlcPgm-objektet anger. 
Men bara signaler kan sättas FALSE genom timerstyrningen . Pulslängden på 
utgångarna, ope och clos , blir en heltalsmultipel PLC programmets cykeltid. 

Objektet har en inbyggd timerstyrning för bättre upplösning vid frånslag 
eftersom tidsstyrningen alltid evalueras med PLC-jobbets bascykeltid. Om 
Pos3P-objektet ingår i ett PlcPgm , som kör med bascykeltiden, ger 
timerstyrningen inte denna fördel. 

Om timerstyrning används är det lämpligt att införa signalerna på ett sätt som 
liknar det som användes för t.ex GetAp-objekt: 

Välj, i 'Navigator', aktuellt PLC program och startan PLC Editorn med hjälp av 
MB3 (= högra knappen på 3-knappars mus). 
Välj i PLC Editorn 'Edit' under Mode-menyn och skapa ett Pos3P-objekt. 
Behåll fönstret med PLC Editorn uppe men välj Navigator-fönstret som aktivt 
fönster vari aktuellt Do-objekt markeras. 
Ctrl/dubbelklicka med MB1 ( vänstra knappen på 3-knappars mus) i -- övre 
delen av Pos3P -symbolen om det är 'öka'-signal och i nedre delen om det 
gäller en 'minska'-signal.

Om en utsignal ska sättas eller ej beror på storleken av reglerfelet OutVal - Pos 
och de separata dödzonerna ErrSo och ErrSta . Dödzonerna gör att en del 
pulser, som i längden skulle kunna skada utrustningen, då reglerelementets läge 
är 'ganska bra' aldrig genereras. 
@image orm_en1-179.gif
 
Varaktigheten på DoOpen / DoClose signalerna, pulslängden, är lika med 

Gain · | ( OutVal t - Pos t ) |

Om pulslängden är mindre än PLC programmets cykeltid nollställes DoOpen / 
DoClose av timerstyrningen innan PLC programmets nästa cykel startas. 

Timerstyrning används också av Inc3P objekt.

@h2 Exempel
@b Timerstyrning
Antag flödesreglering med elektriska ställdon för öka/minska styrning.
Flödet ges av signalen 'kalle2' och ventilläget 'Ai1'.

En lösning visas i figuren nedan. Notera att det är Pid-objektets
'positionerutgång' som används. Curve-objektets närvaro kan motiveras
om ventilkarakteristiken är kraftigt olinjär.
@image orm_en1-180.gif

@b Se även 

<attr>OutVal 
Börvärdesposition. Ansluts ofta till OUT-utgången i ett Pid-objekt. 
</attr>

<attr>Pos 
Ärvärdet. Återkoppling av aktuell position. 
</attr>

<attr>Open 
Driftsorder. TRUE betyder öppna ( upp, öka, höger eller vad annars som kan 
vara relevant för utgången). FALSE innebär ingen åtgärd. 
</attr>

<attr>Close 
Driftsorder. TRUE betyder stäng ( ned, minska, vänster eller vad annars som 
kan vara relevant för utgången). FALSE innebär ingen åtgärd. 
</attr>

<attr>Gain 
Förstärkning, i sekunder, per styrsignalenhet. Ofta är styrsignalen i området 0 - 
100 %. Antag att gångtiden, tiden för att köra t.ex en ventil från fullt stängt till 
fullt öppet, kan mätas. Välj då Gain som total gångtid dividerat med 
signalområdet; här (100 - 0 ). 

Gain används bara vid timerstyrning av utgångar. 
</attr>

<attr>ErrSta 
Dödzon. Attributet anger det värde som absolutvärdet av reglerfelet, OutVal t - 
Pos t , ska över skrida innan en driftsorder ( Open eller Close ) blir TRUE. 

Det gäller att 0 = ErrSto = ErrSta 
</attr>

<attr>ErrSto 
Dödzon. Attributet anger det värde som absolutvärdet av reglerfelet, OutVal t - 
Pos t , ska under skrida innan en pågående driftsorder tas bort; Open eller 
Close blir FALSE. 

Det gäller att 0 = ErrSto = ErrSta 
</attr>

<attr>DoOpen 
Namn på extern 'öppna'-signal, t.ex Do - eller Dv-objekt vid timerstyrning. 
även om DoOpen definierats hanterar objektet Open . 
</attr>

<attr>DoClose 
Namn på extern 'stäng'-signal, t.ex Do - eller Dv-objekt vid timerstyrning. 
även om DoClose definierats hanterar objektet Close . 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>TimerTime 
Fördröjning i sekunder. Anger när utgångarna ska sättas FALSE. TimerTime = 
PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>
</class>

#
# Class Pulse
#
<class> Pulse
@Summary Variabel puls. 
Variabel puls. 
@image orm_pulse_fo.gif

Objektet generera, vid positiv flank på insignalen, en puls med varaktigheten 
TimerTime. 

Om insignalen triggar ett Pulse-objekt som redan håller på med en puls, 
kommer den pågående pulsen att förlängas, eftersom pulslängden, TimerTime , 
räknas från insignalens senaste positiva flank. 
@image orm_pulse_fig1.png

@b Tips 

Om en reset-funktion krävs, istället för en puls med given period, kan pulsen 
realiseras med Wait , And , Or , Edge och ett SR_R-objekt. 
@image orm_en1-183.gif

<attr>In 
Flankövervakad insignal. 
</attr>

<attr>Status 
Anger objektets tillstånd. S.k. timersstyrning används. 
</attr>

<attr>TimerTime 
Anger, i sekunder, pulsens varaktighet.

TimerTime = PLC programmets cykeltid. 
</attr>

<attr>ShowTimerTime 
Anger om TimerTime ska visas i Pulse-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. Enheten är sekunder. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin, TimerMax 
Anger minsta tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax 
Anger största tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>StatusOld 
Senaste In-värde. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>
</class>

#
# Class Queue
#
<class> Queue
@Summary Konfigurerar kö för mottagning av Package Handler meddelanden. 
Konfigurerar kö för mottagning av Package Handler meddelanden. 


Package Handler funktionen, se ProviewR Programmer's Reference 
Manual , används för att skicka meddelanden från operatörsstation till 
tillämpnings program eller mellan två tillämpnings program. 


- 

- 

@b Tips 

Objektet konfigureras i utvecklingsmiljön och placeras i samma nod som det 
program för vilket meddelandet är avsett. 

<attr>Address 
Innehåller PAMS adress. 
</attr>

<attr>Global 
Används ej. 
</attr>
</class>

#
# Class Ramp
#
<class> Ramp
@Summary Begränsar en storhets ändringshastighet. 
Begränsar en storhets ändringshastighet. 
@image orm_ramp_fo.gif

Separata gränser för att öka respektive minska; RampUp och RampDown . 

Sätt du = RampUp · ScanTime och dn = RampDown · ScanTime . En insignal 
bestämmer utsignalen på följande sätt: 
@image orm_en1-185.gif
En extern signal kan också användas som återkoppling.
@h2 Exempel
I exemplet nedan har en extern signal anslutits till Ramp-objektets FB-
ingång. Återkopplingen från Select-objektet till Ramp-objektet är av 
typen 'ConFeedbackAnalog'.
@image orm_en1-186.gif 
Så länge Control (i Select-objektet) är FALSE rampas Select-objektets
utgång upp och ned. När Control är TRUE får utgången det konstanta värdet
RampUp * ScanTime.

<attr>In 
Värde på insignalen. 
</attr>

<attr>FeedB 
Extern återkoppling. Om ingången lämnas öppen används VAL-utgången som 
intern insignal. 
</attr>

<attr>ActVal 
Utsignal; se ovan. 
</attr>

<attr>ScanTime 
Programcykeltiden (= samplings intervallet), i sekunder, lagras automatiskt vid 
kompilering. 
</attr>

<attr>RampUp 
Anger maximal ökning per sekund. Om RampUp = 0 sker ingen begränsing av 
insignalen uppåt. 
</attr>

<attr>RampDown 
Anger maximal minskning per sekund. Om RampDown = 0 sker ingen 
begränsing av insignalen nedåt. 
</attr>

<attr>AccUp
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
RampUp. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccDown
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
RampDown. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinUp
Anger minsta tillåtna värde vid operatörsändring av RampUp . 
</attr>

<attr>MaxUp 
Anger största tillåtna värde vid operatörsändring av RampUp . 
</attr>

<attr>MinDown
Anger minsta tillåtna värde vid operatörsändring av RampDown . 
</attr>

<attr>MaxDown 
Anger största tillåtna värde vid operatörsändring av RampDown . 
</attr>
</class>

#
# Class ResDi
#
<class> ResDi
@Summary Nollställer värdet på Di-signal
Nollställer värdet på Di-signal ( RESet Digital Input). 
@image orm_resdi_fo.gif

Om och endast om insignalen är TRUE, nollställes den angivna lokala Di-
signalen, annars sker ingen påverkan. 

Di-objektets fullständiga namn anges; dess sista namnled visas i ResDi -
symbolens högra fält. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips 

Det är lämpligt att ange Di-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4.

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Di-signalen ska nollställas eller ej. FALSE betyder att insignalen 
inte ska påverkas och TRUE innebär att en lokal Di-signal sätts FALSE. 
</attr>

<attr>DiObject 
Används av PLC Editorn. Anger Di-objektets fullständiga namn.
</attr>

<attr>DiObjectSegments 
Anger hur många segment av Di-objektets namn som ska visas i ResDi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Di-objektet kopplade kanalobjektet ska visas i 
ResDi-objektet eller ej. FALSE betyder ingen visning och TRUE visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i ResDi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class ResDo
#
<class> ResDo
@Summary Nollställer värdet på Do-signal
Nollställer värdet på Do-signal (RESet Digital Output). 
@image orm_resdo_fo.gif

Om och endast om insignalen är TRUE, nollställes den angivna lokala Do- 
signalen, annars sker ingen påverkan. 

Di-objektets fullständiga namn anges; dess sista namnled visas i ResDo -
symbolens högra fält. 

@b Tips 

Det är lämpligt att ange Do-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Do-signalen ska nollställas eller ej. FALSE betyder att insignalen 
inte ska påverkas och TRUE innebär att en lokal Do-signal sätts FALSE. 
</attr>

<attr>DoObject 
Används av PLC Editorn. Anger Do-objektets fullständiga namn. 
</attr>

<attr>DoObjectSegments 
Anger hur många segment av Do-objektets namn som ska visas i ResDo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Do-objektet kopplade kanalobjektet ska visas i 
ResDo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i ResDo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class ResDp
#
<class> ResDp
@Summary Nollställer värdet på digitalt attribut
Nollställer värdet på digitalt attribut (RESet Digital Parameter). 
@image orm_resdo_fo.gif

Om och endast om insignalen är TRUE, nollställes den angivna lokala binära 
storheten, annars ingen påverkan. Storheten kan avse utsignal från objekt eller 
internt digitalt attribut ( skalär eller element i 1-dimensionell vektor) i 
godtyckligt lokalt objekt. 

Den binära storhetens fullständiga namn anges; dess sista namnled visas i 
ResDp -symbolens högra fält; se nedan. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet, 
steg 1  5.

@b Se även 

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om den binära storheten ska nollställas eller ej. FALSE betyder att 
storheten inte ska påverkas och TRUE innebär att den lokal binära storheten 
ska sätts FALSE. 
</attr>

<attr>Object 
Används av PLC Editorn. Anger det aktuella objektets kompletta namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
ResDp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Används av PLC Editorn. Anger parameterns namn. PLC Editorn är 'case 
sensitive' vad gäller detta attribut. Avses ActualValue ska man i Attribute 
Editor skriva ActualValue och inte t.ex ACTUALVALUE. 
</attr>
</class>

#
# Class ResDv
#
<class> ResDv
ResDv
@Summary Nollställer värdet på Dv-signal
Nollställer värdet på Dv-signal (RESet Digital Value). 
@image orm_resdv_fo.gif

Om och endast om insignalen är TRUE, nollställes den angivna lokala Dv- 
signalen, annars sker ingen påverkan. 

Dv-objektets fullständiga namn anges; dess sista namnled visas i ResDv - 
symbolens högra fält. 

@b Tips 

Det är lämpligt att ange Dv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Dv-signalen ska nollställas eller ej. FALSE betyder att insignalen 
inte ska påverkas och TRUE innebär att en lokal Dv-signal sätts FALSE. 
</attr>

<attr>DvObject 
Används av PLC Editorn. Anger Dv-objektets fullständiga namn. 
</attr>

<attr>DvObjectSegments 
Anger hur många segment av Dv-objektets namn som ska visas i ResDv-
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class Reset_SO
#
<class> Reset_SO
@Summary Återställning av lagrad Grafcet order
Tar, då ingången är TRUE, bort lagrad Grafcet order. 
@image orm_reset_so_fo.gif

Om Order-objektet saknar S-order attribut sker inget. 

Vanligen, placeras Reset_SO i Grafcet program, men det kan också placeras i 
vanligt PLC program. 

Genererar ingen relevant data i rtdb. 

@b Tips 

Ett sätt att få in Order-objektets namn i Reset_SO-objektet är följande: 

Välj, i Navigator, aktuellt Order-objekt. 
Dubbelklicka med Ctrl/ MB1 (= vänstra knappen på en 3-knappars mus) i 
högra delen av Reset_SO -symbolen. 
Order-objektets sista namnled visas då i symbolen. I figur nedan är Order- 
objektets sista namnled ORD1. 
@image orm_reset_so_1.gif 
Reset av en S-order 

<attr>In 
Anger om 'reset' på lagrad order ska göras eller ej. FALSE betyder ingen 'reset' 
och TRUE innebär att lagrad order tas bort. 
</attr>

<attr>OrderObject 
Används av PLC Editorn. Anger Order-objektets fullständiga namn. 
</attr>
</class>

#
# Class RootVolumeLoad
#
<class> RootVolumeLoad
@Summary Konfigurerar laddning av rot-volym.
RootVolumeLoad objektet konfigurerar vilken rot-volym som ska laddas
i en ProviewR nod vi uppstart av ProviewR på noden.

Objektet läggs i projekt volymen som barn till ett NodeConfig-objekt.

Objektets namn anger vilken volym som ska laddas.

@b Se även
<attr>Description
Beskrivning av objektet.
</attr>
</class>

#
# Class RttConfig
#
<class> RttConfig
@Summary Konfigurering av rtt och xtt.
@h2 Föråldrad sedan V4.7.0
Konfigurering av rtt och xtt.
</class>

#
# Class ScanTime
#
<class> ScanTime
@Summary Hämtar skantiden för aktuell plc-tråd. 
Hämtar skantiden för aktuell plc-tråd. 
@image orm_scantime_fo.gif
</class>
#
# Class Select
#
<class> Select
@Summary Signalväljare. Väljer en av två analoga signaler. 
Signalväljare. Väljer en av två analoga signaler. 
@image orm_en1-193.gif

Valet av signal styrs av en binär storhet på följande sätt: 

VAL = HIG och NOT = LOW, om con(trol) är TRUE
VAL = LOW och NOT = HIG, om con(trol) är FALSE 


<attr>High 
Värde på 1:a insignalen. 
</attr>

<attr>Low 
Värde på 2:a insignalen. 
</attr>

<attr>Control 
Väljarens värde. 
</attr>

<attr>ActVal 
Valt värde hämtas från High , om Control är TRUE, annars från Low . 
</attr>

<attr>NotActVal 
Icke-valt värde hämtas från Low , om Control är TRUE, annars från High . 
</attr>

<attr>AccCon
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Control. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccLow
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Low. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>AccHigh
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
High. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinHigh
Anger minsta tillåtna värde vid operatörsändring av High. 
</attr>

<attr>MaxHigh 
Anger största tillåtna värde vid operatörsändring av High. 
</attr>

<attr>MinLow
Anger minsta tillåtna värde vid operatörsändring av Low. 
</attr>

<attr>MaxLow 
Anger största tillåtna värde vid operatörsändring av Low. 
</attr>
</class>

#
# Class SetCond
#
<class> SetCond
@Summary Lagrar status från Grafcet villkorsfönster. 
Lagrar, i associerat Order eller Trans-objekt, status från villkorsfönster. 
@image orm_setcond_fo.gif

Villkorfönster används av Trans-objekt och Order-objekt med C-order 
attribut. Villkorsfönster evalueras varje gång PLC programmet exekverar. 

Figuren nedan visar hur resultaten av ett kombinatorisk nät lagras av
SetCond-objekt.
@image orm_en1-195.gif

<attr>In 
Anger den logiska storhet vars värde ska lagras. 
</attr>
</class>

#
# Class SetDi
#
<class> SetDi
@Summary Ettställer värdet på Di-signal
Ettställer värdet på Di-signal (SET Digital Input). 
@image orm_setdi_fo.gif

Om och endast om insignalen är TRUE, ettställes den angivna lokala Di- 
signalen, annars sker ingen påverkan. 

Di-objektets fullständiga namn ska anges; dess sista namnled visas i SetDi -
symbolens högra fält. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips 

Det är lämpligt att ange Di-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4.

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Di-signalen ska ettställas eller ej. FALSE betyder att insignalen inte 
ska påverkas och TRUE innebär att en lokal Di-signal sätts TRUE. 
</attr>

<attr>DiObject 
Används av PLC Editorn. Anger Di-objektets fullständiga namn. 
</attr>

<attr>DiObjectSegments 
Anger hur många segment av Di-objektets namn som ska visas i SetDi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Di-objektet kopplade kanalobjektet ska visas i 
SetDi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i SetDi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class SetDo
#
<class> SetDo
@Summary Ettställer värdet på Do-signal
Ettställer värdet på Do-signal (SET Digital Output). 
@image orm_setdo_fo.gif

Om och endast om insignalen är TRUE, ettställes den angivna lokala Do-
signalen, annars sker ingen påverkan. 

Do-objektets fullständiga namn anges; dess sista namnled visas i SetDo -
symbolens högra fält. 

@b Tips 

Det är lämpligt att ange Do-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

@b Se även 

<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Do-signalen ska ettställas eller ej. FALSE betyder att insignalen inte 
ska påverkas och TRUE innebär att den lokal Do-signalen sätts TRUE. 
</attr>

<attr>DoObject 
Används av PLC Editorn. Anger Do-objektets fullständiga namn. 
</attr>

<attr>DoObjectSegments 
Anger hur många segment av Do-objektets namn som ska visas i SetDo- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Do-objektet kopplade kanalobjektet ska visas i 
SetDo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i SetDo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class SetDp
#
<class> SetDp
@Summary Ettställer värdet på digitalt attribute
Ettställer värdet på digitalt attribut (SET Digital Parameter). 
@image orm_setdp_fo.gif

Om och endast om insignalen är TRUE, ettställes den angivna lokala binära 
storheten, annars ingen påverkan. Storheten kan avse utsignal från objekt eller 
internt digitalt attribut ( skalär eller element i 1-dimensionell vektor) i 
godtyckligt lokalt objekt. 

Den binära storhetens fullständiga namn anges; dess sista namnled visas i 
SetDp -symbolens högra fält; se nedan. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet.
<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om den binära storheten ska ettställas eller ej. FALSE betyder att 
storheten inte ska påverkas och TRUE innebär att den lokal binära storheten 
ska sätts TRUE. 
</attr>

<attr>Object 
Används av PLC Editorn. Anger det aktuella objektets kompletta namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
SetDp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Används av PLC Editorn. Anger parameterns namn. PLC Editorn är 'case 
sensitive' vad gäller detta attribut. Avses ActualValue ska man i Attribute 
Editor skriva ActualValue och inte t.ex ACTUALVALUE. 
</attr>
</class>

#
# Class SetDv
#
<class> SetDv
@Summary Ettställer värdet på Dv-signal
Ettställer värdet på Dv-signal (SET Digital Value). 
@image orm_setdv_fo.gif

Om och endast om insignalen är TRUE, ettställes den angivna lokala Dv- 
signalen, annars ingen påverkan. 

Dv-objektets fullständiga namn anges; dess sista namnled visas i SetDv -
symbolens högra fält. 


@bTips 

Det är lämpligt att ange Dv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet.
<attr>In 
Ingången kopplas till binär signal eller lämnas öppen. I senare fallet är värdet 
på In default TRUE och värdet kan inte ändras i målmiljön varför funktionen 
då blir ovillkorlig. 

Anger om Dv-signalen ska ettställas eller ej. FALSE betyder att insignalen inte 
ska påverkas och TRUE innebär att den lokal Dv-signalen sätts TRUE. 
</attr>

<attr>DvObject 
Används av PLC Editorn. Anger Dv-objektets fullständiga namn. 
</attr>

<attr>DvObjectSegments 
Anger hur många segment av Dv-objektets namn som ska visas i SetDv- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class ShowPlcAttr
#
<class> ShowPlcAttr
@Summary Objekt för att visa värdet på några viktiga PLC program attribut. 
Objekt för att visa värdet på några viktiga PLC program attribut. 
@image orm_en1-200.gif

Objektet konfigueras t.ex i ett av PLC programmets Document objekt. 

Objektet är inte dynamiskt. Ändras PLC programmets nodnamn eller cykeltid 
med Objekts Editorn slår inte ändringarna igenom i ShowPlcAttr-objektet. För 
att få med ändringarna är det nödvändigt att raderar ShowPlcAttr- objektet och 
därefter skapa en ny instans! 

ResetObject kan i motsatts till nodnamn och cykeltid anges direkt i 
ShowPlcAttr-objektet 

@b Tips 

Skapas ett ShowPlcAttr-objekt i något av PLC programmets Document objekt, 
t.ex det första, kommer utskrifter av PLC programmet också att innehålla 
uppgift om nodnamn, cykeltid och reset objekt. 

</class>

#
# Class Speed
#
<class> Speed
@Summary Deriverare
Deriverare. 
@image orm_speed_fo.gif

Differentiering av insignal. Utsignalen är proportional mot insignalens 
ändringshastighet (derivata). 

@b Exempel 

Antag att In är i kg. För att få ActVal i kg/h ska TimFact vara lika med 3600 
sekunder /h. 

<attr>In 
Värde på insignalen. 
</attr>

<attr>ActVal 
Ändringshastighet. (Ändring per tidsenhet).
ActVal t = TimFact ·  , där TimFact är deriveringstiden
</attr>

<attr>TimFact 
Deriveringstid i sekunder. Skalfaktor i sekunder per tidsenhet. 
</attr>

<attr>ScanTime 
Programcykeltiden (= samplings intervallet), i sekunder, lagras automatiskt vid 
kompilering. 
</attr>
</class>

#
# Class SR_R
#
<class> SR_R
@Summary Set Reset vippor. 
Set Reset vippor. 
@image orm_sr_r_fo.gif

Tar självhållning vid positiv flank på 'set'-ingången. 

Släpper självhållningen vid positiv flank på 'res'-ingången. 

Om både set - och reset -signal finns samtidigt är SR-vippans tillstånd 
odefinierat. Därför finns två versioner av vippan: 

SR_S vippan blir TRUE ( = S et) då båda ingångarna är satta 
SR_R vippan blir FALSE ( = R eset) då båda ingångarna är satta 
@image orm_sr_s_fig1.png
 
@b Se även

<attr>set 
Ingång för 'set'-signalen. 
</attr>

<attr>reset 
Ingång för 'reset'-signalen. 
</attr>

<attr>Status 
Anger objektets aktuella tillstånd. 
</attr>

<attr>Acc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Status . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>
</class>

#
# Class SR_S
#
<class> SR_S
@Summary Set Reset vippor. 
Set Reset vippor. 
@image orm_sr_s_fo.gif

Tar självhållning vid positiv flank på 'set'-ingången. 

Släpper självhållningen vid positiv flank på 'res'-ingången. 

Om både set - och reset -signal finns samtidigt är SR-vippans tillstånd 
odefinierat. Därför finns två versioner av vippan: 

SR_S vippan blir TRUE ( = S et) då båda ingångarna är satta 
SR_R vippan blir FALSE ( = R eset) då båda ingångarna är satta 
@image orm_sr_s_fig1.png
 
@b Se även

<attr>set 
Ingång för 'set'-signalen. 
</attr>

<attr>reset 
Ingång för 'reset'-signalen. 
</attr>

<attr>Status 
Anger objektets aktuella tillstånd. 
</attr>

<attr>Acc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Status . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>
</class>

#
# Class SsBegin
#
<class> SsBegin
@Summary Första Grafcet-steget i delsekvenskedja. 
Första Grafcet-steget i delsekvenskedja. 
@image orm_ssbegin_fo.gif

Objektet sätts aktivt då överliggande SubStep-objekt blir aktivt. Jämför med 
SsEnd som är delsekvenskedjans sista steg.

Till den högra utgången kan samtidigt kopplas dels en eller flera Order-objekt, 
dels en eller flera Sto xx, Set xx eller Res xx objekt. Utgången kan också 
lämnas öppen eller användas som generell binär signal.

@image orm_en1-206.gif
Exempel på en delsekvenskedja

<attr>StatusIn 
</attr>

<attr>Order
Order[0] anger stegets tillstånd. FALSE betyder inaktivt steg och TRUE innebär att 
steget är aktivt. Värdet kan plockas upp i annat program med hjälp av en 
GetDp objekt.

NB! I objektets strukturbeskrivning betecknas attributet 'Status[0]'(!) Därför 
måste attributet refereras som 'Status[0]'. 

Order [1] är en kopia Order [0]. Trans-objekt tittar i Order [0] och Order [1]. 

NB! I objektets strukturbeskrivning betecknas attributet 'Status[1]'(!) Därför 
måste attributet refereras som 'Status[1]'. 
</attr>

<attr>StatusOld 
Används för att upptäcka när överliggande SubStep-objekt blir aktivt. 
</attr>
</class>

#
# Class SsEnd
#
<class> SsEnd
@Summary Sista Grafcet-steget i delsekvenskedja 
Sista Grafcet-steget i delsekvenskedja 
@image orm_ssend_fo.gif

Objektet förblir aktivt tills överliggande SubStep-objekt blir aktivt.
Objektet sätter i överliggande SubStep-objekt Order [1] till TRUE. 

Till den högra utgången kan samtidigt kopplas dels en eller flera Order-objekt, 
dels en eller flera Sto xx, Set xx eller Res xx objekt. Utgången kan också 
lämnas öppen eller användas som generell binär signal.


<attr>StatusIn 
</attr>

<attr>Order
Order[0] anger stegets tillstånd. FALSE betyder inaktivt steg och TRUE innebär att 
steget är aktivt. Värdet kan plockas upp i annat program med hjälp av GetDp 
objekt.

Order [1] är en kopia av Order [0]. Trans-objekt tittar i Order [0] och Order 
[1]. 

I objektets strukturbeskrivning och vid referenser betecknas attributet 
'Status[1]'. 
</attr>
</class>

#
# Class Step
#
<class> Step
@Summary Vanligt sekvensiellt Grafcet steg. 
Vanligt sekvensiellt Grafcet steg. 
@image orm_step_fo.gif

Till den högra utgången kan samtidigt kopplas dels en eller flera Order-objekt, 
dels en eller flera Sto xx, Set xx eller Res xx objekt. Utgången kan också 
lämnas öppen eller användas som generell binär signal.

De vertikala anslutningarna ansluts Trans-objekt. 

Samtliga steg i en sekvenskedja kan nollställas med en gemensam reset- signal; 
se vidare under InitStep . 

@h1 Alternative Sequences 

Vid alternativa sekvenser förutsätts att överföringsvillkoren skiljer sig åt på 
något sätt.

De speciella förbindningslinjerna vid alternativa sekvenser (förgrening resp. 
sammanföring) skapas på följande sätt: Välj i PLC Editorn, innan 
anslutningarna görs, i View-menyn 'Connections' och därunder 'Palette'. 
Därefter väljs i den undre delen av Paletten under 'ConGrafcet' 

- 'StepDiv' för förgrening 

- 'StepConv' för sammanföring 

@h1 Parallel Sequences 

De speciella förbindningslinjerna vid parallella sekvenser ( förgrening resp. 
sammanföring) skapas på liknande sätt som vid alternativa sekvenser. Välj i 
den undre delen av Paletten under 'ConGrafcet' 

- 'TransDiv' för förgrening 

- 'TransConv' för sammanföring 

varefter förbindningarna skapas på vanligt sätt. Förhållandet att vid parallella 
sekvenser förgreningen utgår från ett Trans-objekt och sammanföring sker till 
ett Trans-objekt återkommer alltså i namnet på motsvarande linjeobjekt. 

@h1 Exempel


@image orm_en1-209.gif
Connections to the Step Objects in a Straight Sequence 

Det är viktigt att känna till skillnaden mellan att koppla ett objekt direkt 
till ett Step-objekt och att koppla det till ett Order-objekt; se figuren ovan. 
Antag ett StoDv-objekt. Ansluts objektet direkt till ett steg kommer det att 
evalueras varje gång PLC-programmet exekveras. I figuren ovan betyder detta att: 

- 'Dv1' sätts så länge steget 'S1' är aktivt, eftersom Setxx objekt exekveras 
   endast då villkoret är uppfyllt, dvs. Dv:n förblir satt också sedan 'S1' 
   blivit inaktivt. 
- 'Do1' får värdet TRUE så länge 'S1' är aktiv och värdet FALSE då 'S1' är inaktiv. 
   Om 'Do1' skulle sättas från något annat objekt sedan S1 blivit inaktiv skulle 
   den därför genast nollställas av 'S1' 

Om å andra sidan objektet är kopplat tilll ett Order-objekt kommer det att 
evalueras varje gång PLC-programmet exekveras med aktivt Order-objekt plus en 
gång därefter med inaktivt Order-objekt, dvs precis som om objektet placerats i 
ett s.k aktivitetsfönster. Övrig logik direkt kopplade till Order-objektets 
utgång evalueras varje gång PLC- programmet exekverar. I figuren ovan innebär 
detta att: 

- 'Do2' är satt så länge 'ORD2' är aktiv och noll då 'ORD2' är inaktiv; dvs Do2 
  ger en puls. Om 'Do2' sätts från annat objekt sedan 'ORD2' blivit inaktiv 
  kommer den inte att nollställas, eftersom orderlistan för ORD2 inte evalueras 
  längre. 
- 'Do0' sätts till FALSE så länge 'ORD2' är aktiv. 
 
@image orm_en1-210.gif
Alternative Sequences 

Vid alternativa sekvenser förutsätts att överföringsvillkoren skiljer sig åt på 
något sätt. I exemplet enligt figuren ovan ska t.ex vid varje tillfälle högst 
ett av villkoren T0, T1, T2 eller T7 vara uppfyllt. Om samtidigt mer än ett villkor 
är uppfyllt kan man inte förutsäga vilken gren som kommer att exekveras. 

De speciella förbindningslinjerna vid alternativa sekvenser (förgrening resp. 
sammanföring) skapas på följande sätt: Välj i PLC Editorn, innan anslutningarna 
görs, i View-menyn 'Connections' och därunder 'Palette'. Därefter väljs i den undre 
delen av Paletten under 'ConGrafcet' 

- 'StepDiv' för förgrening 

- 'StepConv' för sammanföring 

varefter förbindningarna skapas på vanligt sätt. Förhållandet att vid alternativa 
sekvenser förgreningen utgår från ett steg och sammanföring sker till ett steg 
återkommer alltså i namnet på motsvarande linjeobjekt.

Parallella sekvenser används då exekveringen ska fortsätta i parallella grenar. 
Figuren nedan visar ett exempel med två parallella grenar. När S13 är aktivt och 
övergångsvillkoret T1 blir uppfyllt sker övergången, dvs. S14 och S15 sätts aktiva 
och S13 inaktiv. Därefter kommer de parallella grenarna att exekver oberoende av 
varandra.

Eftersom turordningen för när respektive gren blir klar kan variera avslutas 
grenarna lämligen med väntesteg (dvs. med steg utan aktivitet) och Cond sätts till 
TRUE i det efterföljande övergångsvillkoret (i exemplet T4). Sammanföringen till 
huvudgrenen kommer då att ske när alla grenar nått sitt väntesteg. I figuren nedan
betyder det att om både S16 och S17 är aktiva, samtidigt som T4 är uppfyllt, sätts 
S18 aktiv samtidigt som S16 och S17 blir inaktiva.  

@image orm_en1-211.gif
Parallel Sequences 

De speciella förbindningslinjerna vid parallella sekvenser ( förgrening resp. 
sammanföring) skapas på liknande sätt som vid alternativa sekvenser. Välj i den 
undre delen av Paletten under 'ConGrafcet' 

- 'TransDiv' för förgrening 

- 'TransConv' för sammanföring 

varefter förbindningarna skapas på vanligt sätt. Förhållandet att vid parallella 
sekvenser förgreningen utgår från ett Trans-objekt och sammanföring sker till ett 
Trans-objekt återkommer alltså i namnet på motsvarande linjeobjekt. 
 
@image orm_en1-212.gif
A Sequential Chain with Repetition of a Step 

Figuren ovan visar att exekveringsordning också kan gå bakåt i en sekvenskedja. 

<attr>StatusIn 
</attr>

<attr>StatusOut 
</attr>

<attr>Order
Order[0] anger stegets tillstånd. FALSE betyder inaktivt steg och TRUE innebär att 
steget är aktivt. Värdet kan plockas upp i annat program med hjälp av GetDp 
objekt.

Order [1] är en kopia av Order [0]. Trans-objekt tittar i Order [0] och Order 
[1]. 

I strukturbeskrivningen och vid referenser betecknas attributet 'Status[1]'. 
</attr>
</class>

#
# Class StoAi
#
<class> StoAi
@Summary Lagrar värde i Ai-signal
Lagrar värde i Ai-signal (STOre Analog Input). 
@image orm_stoai_fo.gif

Lagrar analogt värde ( t.ex utsignal av typen pwr_tFloat32) i angivet lokalt Ai-
objekt. Lokal betyder att Ai-objektet exekverar i samma nod som StoAi- 
objektet.
Ai-objektets fullständiga namn anges; dess sista namnled visas i StoAi -
symbolens högra del. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips 

Det är lämpligt att ange Ai-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4.

<attr>In 
Attributet anger vilket värde som ska tilldelas Ai-signalen. Ingången kopplas 
till analog signal eller lämnas öppen. I senare fallet är värdet på In default 0.0 
och värdet kan inte ändras i målmiljön. 
</attr>

<attr>AiObject 
Används av PLC Editorn. Anger Ai-objektets fullständiga namn. 
</attr>

<attr>AiObjectSegments 
Anger hur många segment av Ai-objektets namn som ska visas i StoAi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ai-objektet kopplade kanalobjektet ska visas i 
StoAi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoAi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoAo
#
<class> StoAo
@Summary Lagrar värde i Ao-signal
Lagrar värde i Ao-signal (STOre Analog Output). 
@image orm_stoao_fo.gif

Lagrar analogt värde ( t.ex utsignal av typen pwr_tFloat32) i angivet lokalt Ao-
objekt.
Ao-objektets fullständiga namn anges; dess sista namnled visas i StoAo - 
symbolens högra del. 

@b Tips 

Det är lämpligt att ange Ao-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>In 
Attributet anger vilket värde som ska tilldelas Ao-signalen. Ingången kopplas 
till analog signal eller lämnas öppen. I senare fallet är värdet på In default 0.0 
och värdet kan inte ändras i målmiljön. 
</attr>

<attr>AoObject 
Används av PLC Editorn. Anger Ao-objektets fullständiga namn. 
</attr>

<attr>AoObjectSegments 
Anger hur många segment av Ao-objektets namn som ska visas i StoAo-
objektet. Segmenten räknas med början från signalobjektets sista namnled.
0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ao-objektet kopplade kanalobjektet ska visas i 
StoAo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoAo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoAp
#
<class> StoAp
@Summary Lagrar värde i analogt attribut
Lagrar värde i analogt attribut (STOre Analog Parameter). 
@image orm_stoap_fo.gif

Lagrar analogt värde i angivet flyttals-attribut ( skalär eller element i 1- 
dimensionell vektor av typen pwr_tFloat32) i lokalt objekt. Det mottagande 
attributet får inte avse pekare. 

Parametern kan avse skalär eller element i 1-dimensionell vektor. Antag ett 
objekt som bl. a. innehåller den analoga vektorn Temp[3]. Då gäller att 
Temp[0] refererar 1:a elementet i vektorn, Temp[1] det 2:a o.s.v. 

I StoAp -symbolens högra fält visas dels sista ledet av objektets namn, dels 
parameterns namn. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet, 
steg 1  5.

@b Se även 

<attr>In 
Attributet anger vilket värde som ska tilldelas parametern. 

Ingången kopplas till analog signal eller lämnas öppen. I senare fallet är värdet 
på In default 0.0 och värdet kan inte ändras i målmiljön. 
</attr>

<attr>Object 
Används av PLCeditorn. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoAp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoAv
#
<class> StoAv
@Summary Lagrar värde i Av-signal
Lagrar värde i Av-signal (STOre Analog Value). 
@image orm_stoav_fo.gif

Lagrar analogt värde ( t.ex utsignal av typen pwr_tFloat32) i angivet lokalt Av-
objekt. 

Av-objektets fullständiga namn anges; dess sista namnled visas i StoAv -
symbolens högra fält. 

Objektet används t.ex för att tilldela lokala Av-objekt startvärde i samband med 
initialisation av PLC program. 

@b Tips 

Det är lämpligt att ange Av-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

@b Se även 

<attr>In 
Attributet anger vilket värde som ska tilldelas Av-signalen. Ingången kopplas 
till analog signal eller lämnas öppen. I senare fallet är värdet på In default 0.0 
och värdet kan inte ändras i målmiljön. 
</attr>

<attr>AvObject 
Används av PLC Editorn. Anger Av-objektets fullständiga namn. 
</attr>

<attr>AvObjectSegments 
Anger hur många segment av Av-objektets namn som ska visas i StoAv-
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoDi
#
<class> StoDi
@Summary Lagrar värde i Di-signal
Lagrar värde i Di-signal (STOre Digital Input). 
@image orm_stodi_fo.gif

Lagrar digitalt värde i angivet lokalt Di-objekt. Lokalt betyder att Di-objektet 
exekverar i samma nod som StoDi-objektet. 

Di-objektets fullständiga namn anges; dess sista namnled visas i StoDi -
symbolens högra fält. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips 

Det är lämpligt att ange Ai-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4.

<attr>In 
Attributet anger vilket värde som ska tilldelas Di-objektet. 

Ingången kopplas till digital storhet eller lämnas öppen. I senare fallet är värdet 
på In default FALSE och värdet kan inte ändras i målmiljön. 
</attr>

<attr>DiObject 
Används av PLC Editorn. Anger Di-objektets fullständiga namn. 
</attr>

<attr>DiObjectSegments 
Anger hur många segment av Di-objektets namn som ska visas i StoDi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Di-objektet kopplade kanalobjektet ska visas i 
StoDi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoDi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoDo
#
<class> StoDo
@Summary Lagrar värde i Do-signal
Lagrar värde i Do-signal (STOre Digital Output). 
@image orm_stodo_fo.gif

Lagrar digitalt värde i angivet lokalt Do-objekt. 

Do-objektets fullständiga namn anges; dess sista namnled visas i StoDo -
symbolens högra del. 

@b Tips 

Det är lämpligt att ange Do-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4.

<attr>In 
Attributet anger vilket värde som ska tilldelas Do-objektet. 

Ingången kopplas till digital storhet eller lämnas öppen. I senare fallet är värdet 
på In default FALSE och värdet kan inte ändras i målmiljön. 
</attr>

<attr>DoObject 
Används av PLC Editorn. Anger Do-objektets fullständiga namn. 
</attr>

<attr>DoObjectSegments 
Anger hur många segment av Do-objektets namn som ska visas i StoDo- 
objektet. Segmenten räknas med början från signalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Do-objektet kopplade kanalobjektet ska visas i 
StoDo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoDo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoDp
#
<class> StoDp
@Summary Lagrar värde i digitalt attribut
Lagrar värde i digital parameter (STOre Digital Parameter). 
@image orm_stodp_fo.gif

Lagrar värdet av binär storhet i byte-attribut ( skalär eller element i 1- 
dimensionell vektor av typen pwr_tBoolean) i lokalt objekt. Det mottagande 
attributet får inte avse pekare.
I StoDp -symbolens högra fält visas dels sista ledet av objektets namn, dels 
parameterns namn. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet, 
steg 1  5.

<attr>In 
Attributet anger vilket värde som ska tilldelas parametern. 

Ingången kopplas till digital storhet eller lämnas öppen. I senare fallet är värdet 
på In default FALSE och värdet kan inte ändras i målmiljön. 
</attr>

<attr>Object 
Används av PLC Editorn. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoDp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoDv
#
<class> StoDv
@Summary Lagrar värde i Dv-signal
Lagrar värde i Dv-signal (STOre Digital Value). 
@image orm_stodv_fo.gif

Lagrar binär storhet i angivet lokalt Dv-objekt.
Dv-objektets fullständiga namn anges; dess sista namnled visas i StoDv -
symbolens högra del. 

@b Tips 

Det är lämpligt att ange Dv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet, steg 1  4. 

<attr>In 
Attributet anger vilket värde som ska tilldelas Dv-objektet. 

Ingången kopplas till digital storhet eller lämnas öppen. I senare fallet är värdet 
på In default FALSE och värdet kan inte ändras i målmiljön. 
</attr>

<attr>DvObject 
Används av PLC Editorn. Anger Dv-objektets fullständiga namn. 
</attr>

<attr>DvObjectSegments 
Anger hur många segment av Dv-objektets namn som ska visas i StoDv-
objektet. Segmenten räknas med början från signalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoIp
#
<class> StoIp
@Summary Lagrar värde i heltalsattribut
Lagrar värde i heltalsattribut. 
@image orm_stoip_fo.gif

Lagrar heltals-storhet ( t.ex utsignal av typen i en angiven 32-, 16-, 
eller 8-bitars heltalsparameter i lokalt objekt. 

Storheten kan avse skalär eller element i 1-dimensionell vektor. 

I StoIp-symbolens högra fält visas dels sista ledet av objektets namn, dels 
parameterns namn. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet. 

<attr>In 
Attributet anger vilket värde som ska tilldelas parametern. 

Ingången kopplas till heltals-storhet eller lämnas öppen. I senare fallet är värdet 
på In default 0 och värdet kan inte ändras i målmiljön. 
</attr>

<attr>Object 
Används av PLC Editorn. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoIp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoAtoIp
#
<class> StoAtoIp
@Summary Lagrar analogt värde i heltalsattribut
Lagrar analogt värde i heltalsattribut. 
@image orm_stoatoip_fo.gif

Lagrar, efter avkortning, värdet av analog storhet ( t.ex utsignal av typen 
pwr_tFloat32) i en angiven 32-, 16-, eller 8-bitars heltalsparameter i lokalt 
objekt. 

Storheten kan avse skalär eller element i 1-dimensionell vektor. 

I StoAtoIp-symbolens högra fält visas dels sista ledet av objektets namn, dels 
parameterns namn. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet. 

<attr>In 
Attributet anger vilket värde som ska tilldelas parametern. 

Ingången kopplas till analog storhet eller lämnas öppen. I senare fallet är värdet 
på In default 0.0 och värdet kan inte ändras i målmiljön. 
</attr>

<attr>Object 
Används av PLC Editorn. Anger det aktuella objektets fullständiga namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoIp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>Parameter 
Används av PLC Editorn. Anger parameterns namn. PLC Editorn är 'case 
sensitive' vad gäller detta attribut. Avses ActualValue ska man i Attribute 
Editor skriva ActualValue och inte t.ex ACTUALVALUE. 
</attr>
</class>

#
# Class StoIi
#
<class> StoIi
@Summary Lagrar värde i Ii-signal
Lagrar värde i Ii-signal (STOre Integer Input). 
@image orm_stoii_fo.gif

Lagrar heltals-värde (t.ex utsignal av typen pwr_tInt32) i angivet lokalt Ii-
objekt. Lokal betyder att Ii-objektet exekverar i samma nod som StoIi- 
objektet.
Ii-objektets fullständiga namn anges; dess sista namnled visas i StoIi -
symbolens högra del. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i IOHandler objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips 

Det är lämpligt att ange Ii-objektets fullständiga namn på sätt som anges under 
GetAp-objektet.

<attr>In 
Attributet anger vilket värde som ska tilldelas Ii-signalen. Ingången kopplas 
till heltals signal eller lämnas öppen. I senare fallet är värdet på In 
default 0 och värdet kan inte ändras i målmiljön. 
</attr>

<attr>IiObject 
Används av PLC Editorn. Anger Ii-objektets fullständiga namn. 
</attr>

<attr>IiObjectSegments 
Anger hur många segment av Ii-objektets namn som ska visas i StoIi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Ii-objektet kopplade kanalobjektet ska visas i 
StoIi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoIi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoIo
#
<class> StoIo
@Summary Lagrar värde i Io-signal
Lagrar värde i Io-signal (STOre Integer Output). 
@image orm_stoio_fo.gif

Lagrar heltals-värde (t.ex utsignal av typen pwr_tInt32) i angivet lokalt Io-
objekt.
Io-objektets fullständiga namn anges; dess sista namnled visas i StoIo- 
symbolens högra del. 

@b Tips 

Det är lämpligt att ange Io-objektets fullständiga namn på sätt som anges 
under GetAp-objektet.

<attr>In 
Attributet anger vilket värde som ska tilldelas Io-signalen. Ingången kopplas 
till analog signal eller lämnas öppen. I senare fallet är värdet på In default 
0  och värdet kan inte ändras i målmiljön. 
</attr>

<attr>IoObject 
Används av PLC Editorn. Anger Io-objektets fullständiga namn. 
</attr>

<attr>IoObjectSegments 
Anger hur många segment av Io-objektets namn som ska visas i StoIo-
objektet. Segmenten räknas med början från signalobjektets sista namnled.
0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Io-objektet kopplade kanalobjektet ska visas i 
StoAo-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoIo-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoIv
#
<class> StoIv
@Summary Lagrar värde i Iv-signal
Lagrar värde i Iv-signal (STOre Integer Value). 
@image orm_stoiv_fo.gif

Lagrar heltals-värde (t.ex utsignal av typen pwr_tInt32) i angivet lokalt Iv-
objekt. 

Iv-objektets fullständiga namn anges; dess sista namnled visas i StoIv-
symbolens högra fält. 

Objektet används t.ex för att tilldela lokala Iv-objekt startvärde i samband med 
initialisation av PLC program. 

@b Tips 

Det är lämpligt att ange Av-objektets fullständiga namn på sätt som anges 
under GetAp-objektet.

<attr>In 
Attributet anger vilket värde som ska tilldelas Iv-signalen. Ingången kopplas 
till analog signal eller lämnas öppen. I senare fallet är värdet på In default 
0 och värdet kan inte ändras i målmiljön. 
</attr>

<attr>IvObject 
Används av PLC Editorn. Anger Iv-objektets fullständiga namn. 
</attr>

<attr>IvObjectSegments 
Anger hur många segment av Iv-objektets namn som ska visas i StoIv-
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoNumSp
#
<class> StoNumSp
@Summary Lagrar specificerat antal tecken i ett sträng-attribut.
Lagrar specificerat antal tecken i ett sträng-attribut.
@image orm_stonumsp_fo.gif

Lagring av sträng-värde på i godtyckligt lokalt objekt. 
Lokal betyder att målobjektet tillhör samma nod som StoNumSp objektet. 

Det är inte tillåtet att med funktion i C-program eller PLC program skriva i 
någon av ingångarna. 

<attr>In 
Ingången kopplas till sträng-attribut eller lämnas öppen. I senare fallet 
kommer värdet av In att vara föremål för lagring (default en NULL-sträng
och ej ändringsbar i runtime). In attributet specificerar vilket värde
som ska tilldelas attributet.
</attr>

<attr>Object 
Anger namnet på det attribut där lagringen ska ske. Objektets sista namnled 
med attribut visas i StoNumSp-symbolens övre högra del. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
CStoSp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>NumberOfChar
Anger antalet tecken att kopiera.
Om strängen är kortare än NumberOfChar kopieras strängen och NULL-termineringen.
Om längden är större eller lika med NumberOfChar, kopieras inte NULL-
termineringen. I detta fall ska den föregående strängen i mål attributet
vara längre än NumberOfChar, annars förloras NULL-termineringen och 
resultatet är odefinierat.
</attr>
</class>


#
# Class StoPi
#
<class> StoPi
@Summary Lagrar analogt värde i Co-signal
Lagrar analogt värde i Co-signal (STOre Pulsecounter Input). 
@image orm_stopi_fo.gif

Analogt invärde lagras, efter heltalsomvandling, i RawValue i angivet lokalt 
Co-objekt. 

Co-objektets fullständiga namn anges; dess sista namnled visas i StoPi -
symbolens högra del. 

NB! Detta objekt används i samband med I/O-simulering. IOSimulFlag ska 
sättas TRUE och IOReadWriteFlag FALSE i $Node objektet, dvs noden får 
inte använda någon fysisk I/O-hårdvara sammtidigt med detta objekt. 

@b Tips

Det är lämligt att ange Co-objektets fullständiga namn på sätt som anges under 
GetAp-objektet, steg 1  4. 

<attr>In 
Ingången kopplas till analog signal eller lämnas öppen. I senare fallet kommer 
värdet av In att vara föremål för lagring. 
</attr>

<attr>CoObject 
Används av PLC Editorn. Anger Co-objektets fullständiga namn. 
</attr>

<attr>CoObjectSegments 
Anger hur många segment av Co-objektets namn som ska visas i StoPi- 
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>

<attr>SigChanCon 
Används av PLC Editorn. 
</attr>

<attr>ShowSigChanCon 
Anger om namnet på det till Co-objektet kopplade kanalobjektet ska visas i 
StoPi-objektets symbol eller ej. FALSE betyder ingen visning och TRUE 
visning. 

SigChanConSegments anger antalet namnled som ska visas. 
</attr>

<attr>SigChanConSegments 
Anger, då ShowSigChanCon = TRUE, hur många segment av det till 
signalobjektet kopplade kanalobjektets namn som ska visas i StoPi-objektets 
symbol. Segmenten räknas med början från kanalobjektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoSp
#
<class> StoSp
@Summary Lagrar värde i sträng attribut
Lagrar värde i sträng attribut (STOre String Parameter). 
@image orm_stosp_fo.gif

Lagrar analogt värde i angivet sträng-attribut i lokalt objekt. Det mottagande 
attributet får inte avse pekare. 

I StoSp-symbolens högra fält visas attributets namn. 

@b Tips 

Det är lämpligt att ange storheten på sätt som anges under GetAp-objektet.

<attr>In 
Attributet anger vilket värde som ska tilldelas parametern. 

Ingången kopplas till ett sträng attribut eller lämnas öppen. I senare fallet är 
värdet på In default en NULL-sträng och värdet kan inte ändras i målmiljön. 
</attr>

<attr>Object 
Används av PLCeditorn. Anger det aktuella attributets fullständiga namn. 
</attr>

<attr>ObjectSegments 
Anger hur många segment av det aktuella objektets namn som ska visas i 
StoSp-objektets symbol. Segmenten räknas med början från det aktuella 
objektets sista namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class StoSv
#
<class> StoSv
@Summary Lagrar värde i Sv-signal
Lagrar värde i Sv-signal (STOre String Value). 
@image orm_stosv_fo.gif

Lagrar sträng värde i angivet lokalt Sv-objekt. 

Sv-objektets fullständiga namn anges; dess sista namnled visas i StoSv-
symbolens högra fält. 

Objektet används t.ex för att tilldela lokala Sv-objekt startvärde i samband med 
initialisation av PLC program. 

@b Tips 

Det är lämpligt att ange Sv-objektets fullständiga namn på sätt som anges 
under GetAp-objektet.

<attr>In 
Attributet anger vilket värde som ska tilldelas Sv-signalen. Ingången kopplas 
till sträng signal eller lämnas öppen. I senare fallet är värdet på In föremål
för lagring. 
</attr>

<attr>SvObject 
Används av PLC Editorn. Anger Av-objektets fullständiga namn. 
</attr>

<attr>SvObjectSegments 
Anger hur många segment av Sv-objektets namn som ska visas i StoSv-
objektets symbol. Segmenten räknas med början från signalobjektets sista 
namnled. 

0 och 1 ger båda sista namnledet. 
</attr>
</class>

#
# Class Strcat
#
<class> Strcat
@Summary Sammanslaging av två strängar.
Sammanslaging av två strängar.
@image orm_strcat_fo.gif

Strcat objektet adderar strängen i andra ingången till strängen i
första ingången.

Båda ingångarna måste kopplas till sträng-utgångar.

<attr>Str1
Den första strängen, som den andra strängen adderas till.
Ingången måste kopplas till en utgång av typ String.
</attr>

<attr>Str2
Den andra strängen, som adderas till den första strängen.
Ingången måste kopplas till en utgång av typ String.
</attr>

<attr>ActVal
Utgångs-sträng som innehåller resultatet av sammanslagningen.
Max storlek på utgångs-strängen är 79 tecken. Om denna storlek överskrids
huggs resultatet av.
</attr>
</class>

#
# Class SubStr
#
<class> SubStr
@Summary Extrahera en delsträng från en sträng.
Extrahera en delsträng från en sträng.
@image orm_substr_fo.gif

SubStr extraherar en delsträng från en sträng vid ett angivet offset
och med angiven längd.

<attr>In
Sträng ingång som delsträngen ska extraheras från.
Ingången måste kopplas till en sträng-utgång.
</attr>

<attr>Start
Start index för delsträngen. Första tecken har index 0.
</attr>

<attr>Length
Längd av delsträngen.
Max längden är 79 tecken. Om max längden överskrids kommer resultatet
att huggas av.
</attr>

<attr>ActVal
Utgång som innehåller delsträngen.
</attr>
</class>

#
# Class SubStep
#
<class> SubStep
@Summary Sekvenssteg för underliggande delsekvenskedja. 
Sekvenssteg för underliggande delsekvenskedja. 
@image orm_substep_fo.gif

Ur funktionssynpunkt kan SubStep-objektet uppfattas som en substitution av 
en delsekvenskedja.

Delsekvenskedjan editeras i ett till SubStep-objektet underliggande fönster. 
Objekten i fönstret får ett WindowSubStep objekt som förälderobjekt. Ett 
sådant fönster,  Inleds med ett SsBegin-objekt, som blir aktivt när SubStep -
objektet blir aktivt. Avslutas med ett SsEnd-objekt, som blir aktivt då 
delsekvenskedjan och därmed SubStep-objektet exekverat klart. Till den högra 
utgången kan samtidigt kopplas dels en eller flera Order-objekt, dels en eller 
flera Sto xx, Set xx eller Res xx objekt. Utgången kan också lämnas öppen eller 
användas som generell binär signal.

Aktiv status kan inte överföras från SubStep-objektet förrän SsEnd-objektet i 
den underliggande delsekvenskedjan signalera klart och villkoret efter SubStep 
-objektet samtidigt är uppfyllt. När så är fallet överförs aktiv status från 
SubStep-objektet till nästa steg i kedjan. 

NB! Skillnaden i SubStep-symbolens utseende då ett underfönster finns och 
när det inte finns är mindre framträdande. Däremot är konsekvenserna dessto 
större. Ett SubStep-objekt utan underliggande fönster resulterar i att 
exekveringen fastnar i SubStep-objektet! 

En förutsättning för strukturerad konstruktion är möjligheten att konstruera i 
nivåer. Ett SubStep-objekt kan i sin delsekvenskedja innehålla SubStep - 
objekt, som i sina delsekvenskedjor har andra SubStep-objekt osv. 

<attr>StatusIn 
</attr>

<attr>StatusOut 
</attr>

<attr>Order
Order[0] anger stegets tillstånd. FALSE betyder inaktivt steg och TRUE innebär att 
steget är aktivt. Värdet kan plockas upp i annat program med hjälp av GetDp
objekt.
 
NB! I objektets strukturbeskrivning betecknas attributet 'Status[0]'! Därför 
måste attributet refereras som 'Status[0]'. 

Order[1] Anger det underliggande fönstrets tillstånd. FALSE betyder att
exekveringen av underfönstret inte är avslutad och TRUE innebär att underfönstrets 
exekvering är klar. 

NB! I objektets strukturbeskrivning betecknas attributet 'Status[1]'! Därför 
måste attributet refereras som 'Status[1]'. 
</attr>
</class>

#
# Class Sum
#
<class> Sum
@Summary Summerare. 
Summerare.
@image orm_en1-225.gif

Viktad summering av upptill 8 signaler. De valda ingångarna ska väljas 
konsekutivt med början utifrån In1 , som är den övre ingången. 

Varje ingång har sin egen viktfaktor; FVect 0 , FVect 1 etc. 

Ett konstant värde, Const , kan adderas till summan. 

@h1 Exempel
@b Exempel 1
För att beräkna: IN1 + 2 * IN2 - 1.5 * IN3

- Markera de tre första ingångarna som 'Used' i ett Sum-objekt.
- Anlut signalerna till de tre första ingångarna.
- Sätt Const = 2.2
- Sätt viktsfaktorerna FVect till 1.0, 2.0 och -1.5

@b Exempel 2
För att beräkna medelvärdet av 5 signaler

- Markera de fem första ingångarna som 'Used' i ett Sum-objekt.
- Anslut signalerna till de fem första ingångarna.
- Sätt de fem första viktfaktorerna FVect till 0.2

@b Exempel 3
Följande objekt ackumulerar värdet av en signal 'Ai0'
@image orm_en1-226.gif

<attr>In1
Värde insignal 1.
</attr>
<attr>In2
Värde insignal 2.
</attr>
<attr>In3
Värde insignal 3.
</attr>
<attr>In4
Värde insignal 4.
</attr>
<attr>In5
Värde insignal 5.
</attr>
<attr>In6
Värde insignal 6.
</attr>
<attr>In7
Värde insignal 7.
</attr>
<attr>In8
Värde insignal 8.
</attr>

<attr>ActVal 
ActVal = Const +  
</attr>


<attr>Const 
Konstant värde som adderas till summan.
</attr>

<attr>FVect
Viktfaktor per signal. 

ActVal = Const + ( Fvect {0} · In1 + ... + Fvect {7} · In8 ) 
</attr>

<attr>AccConst 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
Const . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MinConst
Anger minsta tillåtna värde vid operatörsändring av Const. 
</attr>

<attr>MaxConst 
Anger minsta tillåtna värde vid operatörsändring av Const. 
</attr>

<attr>AccFact
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
FVect []. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>MaxFact
Anger minsta tillåtna värde vid operatörsändring av viktfaktorerna 
Fvect []. 
</attr>

<attr>MaxFact
Anger största tillåtna värde vid operatörsändring av viktfaktorerna 
Fvect []. 
</attr>
</class>

#
# Class Sv
#
<class> Sv
@Summary Sträng värde.
Sträng värde.

Konfigurerar ett text sträng värde i plant-hierarkin.

<attr>Description
Beskrivning av sträng-värdet.
</attr>

<attr>ActualValue
Sträng värdet.
</attr>
</class>

#
# Class Table
#
<class> Table
@Summary Tabell objekt för intepolering 
Ett Curve-objekt interpolerar i en tabell som definierats i Table-objekt. 
@image orm_table_fo.gif

Tabellen består av minst 2 och högst 50 talpar (x,y). 

X-värdena ska vara ordnade i växande storleksordning; dock kan två 
konsekutiva x-värden vara lika som i fallet med stegfunktion. 

Flera Curve-objekt kan kopplas till ett och samma Table-objekt. 

Objektet innehåller endast data utan exekverbar kod. 

@h1 Exempel
@b Exempel 1
Antag en ventil där överföringsfunktionen mellan styrsignal och
flöde är kraftigt olinjär. För att förenkla och förbättra styrningen
inom ett vidare arbetsområde är det lämpligt att låta styrsignalen
från t ex ett Pid-objekt passera ett Curve-objekt innan det når ventilens
ställdon. Table-objektet bör realisera en karakteristik invers med 
ventilens karakteristik.

@b Exempel 2
Positinering med fram/back + analog referens för att ange farten.
Positionsfel större än 10 enheter skall ge max hastighet (=100).
Positionsfel mindre än 2 skall ge min hastighet (=10). Avvikelse
mellan 2 och 10 ger linjär funktion mellan 10 och 100.

  X1 = -10 Y1 = 100 X2 = -2 Y2 = 10
  X3 = 2   Y3 = 10  X4 = 10 Y4 = 100 
@image orm_en1-228.gif

@b Exempel 3
Fyrkantsignal
@image orm_en1-229.gif

<attr>Tab 
Utgången måste ansluts till Curve-objekt. 
</attr>

<attr>TabVect
TabVect[0] anger aktuellt antal talpar i tabellen. 

TabVect[1], TabVect[2] utgör tabellens 1:a talpar {x1, y1} 
TabVect[3], TabVect[4] tabellens 2:a talpar {x2, y2} etc
</attr>
</class>

#
# Class Timer
#
<class> Timer
@Summary Fördröjt frånslag 
Fördröjt frånslag 
@image orm_timer_fo.gif

Då insignalen blir: 

TRUE blir utgången också TRUE. 
FALSE startas timern. Efter tiden TimerTime blir utgången också FALSE. 
@image orm_timer_fig1.png
 
Jämför funktionen hos Wait-objekt. 


<attr>In 
Insignal. 
</attr>

<attr>Status 
Anger objektets aktuella tillsånd. 
</attr>

<attr>TimerTime 
Anger, i sekunder, frånslagsfördröjningen. 

TimerTime = PLC programmets cykeltid. 
</attr>

<attr>ShowTimerTime 
Anger om TimerTime ska visas i Timer-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. Enheten är sekunder. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin
Anger minsta tillåtna värde vid operatörsändring av TimerTime. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax 
Anger största tillåtna värde vid operatörsändring av TimerTime. 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>StatusOld 
Senaste In - värde . 
</attr>

<attr>TimerFlag 
Markerar aktiv timer 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>
</class>

#
# Class Timint
#
<class> Timint
@Summary Tidsintegrator
Tidsintegrator (TIMe INTegrator). 
@image orm_timint_fo.gif

Då en signal enligt kurvan f(t) nedan läggs på 'IN'-ingången till ett Timint -
objekt kommer värdet på utången att variera med storlek och varaktighet på 
insignalen. Kurva f(t) approximeras av ett stort antal rektangelformade ytor, 
var och en med bredden ScanTime och höjden In t Utsignalen blir proportionell 
med tidsintegralen av insignalen. 

ActVal t = ActVal t-1 +  · In t · ScanTime 

där  är integreringstiden. 

Med 'z'-ingången kan integratorn nollställas. 
@image orm_en1-235.gif

@b Exempel 

Antag att In är i liter/min. Om ActVal ska vara i liter måste TimFact = 60 
sekunder /min.  

<attr>In 
Signal som ska integreras. Dess dimension antages var någonting per tidsenhet. 
</attr>

<attr>Clear 
En positiv flank på signalen betyder att OldAcc sätts lika med ActVal t-1 
varefter ActVal t-1 = 0. 
</attr>

<attr>ActVal 
Utsignal.
ActVal t = ActVal t-1 +  · In t · ScanTime 
</attr>

<attr>TimFact 
Tidsfaktor uttryckt i sekunder / tidsenhet.
 är deriveringstiden, dvs den tid det tar för utsignalen att stiga från
0 till In , om In är ett konstant värde. 
</attr>

<attr>ScanTime 
Programcykeltid i sekunder, lagras automatiskt vid kompilering. 
</attr>

<attr>AccVal 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
ActVal . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>OldAcc 
Anger värdet på utsignalen, ActVal , då integratorn senast nollställdes. 
</attr>
</class>

#
# Class Trans
#
<class> Trans
@Summary Grafcet Övergångsvillkor. 
Övergångsvillkor. 
@image orm_en1-236.gif

Till symbolens vertikala linje ansluts stegobjekt. Då aktiv status överförs sker 
det alltid från steg som föregår Trans-objektet till steg som följer på Trans -
objektet. 

Det finns två typer av övergångsvillkor: 

Cond , som är det ordinarie övergångsvillkoret, definieras på ett av följande 
sätt:
- ett underliggande villkorsfönster . Objekten i fönstret får ett Window
Cond objekt som förälderobjekt. För att lagra villkors-
fönstrets tillstånd i Trans-objektet används SetCond-objekt.
- direkt i ett kombinatoriskt nät anslutet till symbolens vänstra horisontella arm 
- villkoret anges vid konfigureringen som ständigt TRUE ( Cond = 1 )
eller ständigt FALSE ( Cond = 0 ). 
OpCond avser ett manuellt villkor 
Om det är driftvillkoret Cond eller det manuella villkoret OpCond som ska 
beaktas styrs av Man -flaggan.

Om aktuellt övergångsvillkor är uppfyllt och samtliga ovanförliggande till 
Trans-objektet direkt anslutna steg (dvs. objekt av typen Step , InitStep , 
SubStep m.fl. ) är aktiva, överförs aktiv status till samtliga efterföljande steg 
direkt anslutna till Trans-objektetets utgång. Därvid kommer ovanförliggande 
steg att bli inaktiva.

Genom att sätta Man = 1 kan operatören manuellt styra med Trans-objektets 
manuella övergångsvillkor Opcond . Därvid exekveras fortfarande 
villkorsfönstret, men det är det manuella övergångsvillkoret som gäller. Sedan 
en manuellt initierad övergång skett ser ProviewR till att OpCond -flaggan tas 
ned. På så sätt tvingas operatören sätta flaggan varje gång en övergång ska 
triggas. Man -flaggan förblir satt tills operatören tar ned den. 

Vid reset av sekvenskedjan ( se under InitStep), nollställs varken Man - eller 
OpCond -flaggan 

@b Exempel
@image orm_en1-237.gif
I figuren ovan indikerar de feta vertikala linjerna att övergångsvillkoren 'T5',
'T6' och 'T7' har underliggande villkorsfönster. 'T4' har sitt övergångsvillkor
direkt tillgängligt.

- Parallellförgrening innebär att första steget i varje gren sätts aktivt i
  samma programexekvering.
- Då parallella förgreningar sammanförs måste sista steget i varje gren
  vara aktivt och övergångsvillkoret uppfyllt för att övergång ska ske.

<attr>InStep 
</attr>

<attr>Cond 
Anger det ordinarie övergångsvillkorets tillstånd. FALSE betyder att villkoret 
inte är uppfyllt och TRUE att det är uppfyllt. Flaggan sätts på ett av följande 
sätt: 

av SetCond-objekt i ett underliggande villkorsfönster 
genom direkt anslutning från grindnät som realiserar villkoret 
permanenti samband med konfigureringen 
</attr>

<attr>OutStep 
</attr>

<attr>ActOld 
Sparar status om föregående steg. Används för att begränsa antalet övergångar 
per sekvenskedja och exekvering till maximalt en. 
</attr>

<attr>Man 
Anger om det manuella övergångsvillkoret gäller eller ej. FALSE betyder att 
Cond beaktas och TRUE att det manuella övergångsvillkoret OpCond gäller. 
</attr>

<attr>OpCond 
Anger det manuella övergångsvillkorets tillstånd. övergång kan ske när 
OpCond och Man båda är TRUE. OpCond -flaggan tas ned av ProviewR efter 
en övergång. 
</attr>

<attr>Acc 
Ej implementerad funktion. Anger operatörens behörighet att initiera 
övergången manuellt. Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>
</class>

#
# Class User
#
<class> User
@Summary Konfigurerar operatörsstations användarkategori. 
@h2 Föråldrad sedan V4.7.0
Konfigurerar operatörsstations användarkategori. 

Konfigurerar en användarkategori under ett OpPlace-objekt. User-objektet 
och OpPlace-objektet bildar ett par om deras respektive OpNumber har samma 
värde. 


<attr>UserName 
Attributet används som signatur för att ange vem som kvitterat 
larmmeddelande respektive blockerat/deblockerat alarmnivå. 
</attr>

<attr>PassWord 
Sätts idag ovillkorligen till '*'. 
</attr>

<attr>OpNumber 
De logiska operatörsstationerna i ett ProviewR-system numreras med hjälp av 
OpPlace-objektets OpNumber.

Genom att här ange OpNumber för aktuellt OpPlace-objekt knyts User - 
objektet till ett bestämt OpPlace-objekt. 
</attr>

<attr>MaxNoOfEvents 
Anger max antal samtidiga händelser i användarens händelselista, dvs 
händelsehorisonten. Då antalet händelser överstiger MaxNoOfEvents stryks de 
äldsta ur listan.
Till denna lista skickas händelser från respektive nods meddelandehanterare 
(=mh). I varje nod har meddelandehanteraren sin egen händelsehorisont (också 
betecknad MaxNoOfEvents ) definierad i ett MessageHandler-objekt. I princip 
bör User-objektets händelshorisont väljas som S MaxNoOfEvents , summerat 
över MaxNoOfEvents -attributen i ProviewR-systemets alla MessageHandler 
-objekt eller gör det enkelt och sätt attributet till t.ex 200. 
</attr>

<attr>SelectList
Meddelanden initierade av ASup - eller DSup-objekt får samma identitet som 
övervakat objekt. För meddelanden genererade i tillämpningsprogram av 
mh_ApplMessage ( se ProviewR Programmer's Reference Manual ) 
bestämms identiteten av anropsparametern EventName .
I SelectList anges från vilka anläggningshierarkier användarkategorin ska 
erhålla meddelanden. Upp till 20 hierarkier kan anges.
Önskas meddelanden från en nods Watchdog-objekt anges nodens namn här. 

NB! Lämnas SelectList blank skickas 'inga' meddelanden till 'användaren'. 
</attr>

<attr>FastAvail
Varje attribut anger det fullständiga namnet på ett Form - eller Graph-objekt 
som ska kunna startas med hjälp av funktionsknapp i 'Operator Window'. 
Namnen fylls i konsekutivt med början på FastAvail[0] , som representerar den 
första funktionsknappen i första raden. 
</attr>

<attr>NoFastAvail 
Anger antalet definierade FastAvail []-attribut och därmed antalet synliga 
bildknappar i 'Operator Window'. Attributet ska vara i området 0 - 15. 
</attr>

<attr>NavigatorWritePriv 
Från Runtime Navigator kan operatören starta Objekts Editorn för olika objekt. 
NavigatorWritePriv avser operatörens behörighet att skriva i förekommande 
attribut från Objekts Editorn. FALSE betyder att operatören endast kan titta på 
attributen och TRUE innebär dessutom skrivrättighet. 
</attr>

<attr>NoOfAlarms
Ej använd. 
</attr>

<attr>MaxNoOfAlarms
Maximalt antal samtidiga larm i larmlistan.
</attr>

<attr>NoOfEvents 
Ej använd. 
</attr>

<attr>PrivObjList
Ej använd. 
</attr>

<attr>PrivList
Ej använd. 
</attr>

<attr>NoPriv 
Ej använd. 
</attr>
</class>

#
# Class Valve
#
<class> Valve
@Summary Styrning magnetventil
Styrning, typ magnetventil, med två lägesverkan och övervakning av gångtid. 
Objektet realiserar till-från styrning. 
@image orm_en1-238.gif

Driftordern OrderOpen är antingen TRUE eller FALSE. Orderna betecknas här 
OPEN och CLOSE med den generella innebörden till/från. 

Med hjälp av gångtidsövervakningen är det möjligt att upptäcka om 
reglerelementets förflyttning hindras; t.ex vid övergången fullt stängt --> fullt 
öppet 

Objektet har tre driftlägen, LOCAL / MANUAL / AUTO, som väljs med hjälp 
av Local och ManMode enligt följande: 
@image orm_en1-239.gif
 
@b LOCAL 
Används då manövreringen sker från yttre pulpet, manövrerskåp e.dyl. 

- Enbart säkerhetsförreglingen, SafeOpen och SafeClose, beaktas. 
- LocalOpen har återfjädrande tryckknappsfunktioner för OPEN. LocalOpen 
  påverkad medför att OrderOpen sätts TRUE varefter LocalOpen tas ned. 
- LocalClose har återfjädrande tryckknappsfunktioner för OPEN. LocalClose 
  påverkad medför att OrderOpen sätts TRUE varefter LocalClose tas ned 
- Vid övergången, 
  -- LOCAL --> AUTO bestäms driftordern av AutoOpen.
  -- LOCAL --> MANUAL påverkas inte driftordern OrderOpen.

@b MANUAL/AUTO
 
- Både drifts- och säkerhetsförreglingen beaktas. 
- Larmen är indikeringar som inte påverkar styrningen med mindre än att de 
  används som förreglingssignal. 
- I läge MANUAL hanteras OPEN/CLOSE order av operatören
  med hjälp av direktiven ManOpen och ManClose.

- AUTO begärs OPEN så länge AutoOpen är TRUE, CLOSE
  begärs då AutoOpen är FALSE, dvs det är nivåerna -- inte
  flankerna som styr.

- Vid övergången, 
  -- AUTO -> MANUAL, påverkas inte driftordern OrderOpen.

  -- MANUAL -> AUTO gäller att om driftordern var OPEN i läge MANUAL 
     och AutoOpen är TRUE kommer driftordern att kvarstå efter övergången, 
     annars inte.

Styrdirektiven har olika prioritet. Skulle en konflikt uppstå genom att flera 
sinsemellan motstridiga direktiv samtidigt är förhanden vinner det som har 
högst prioritet, se figur nedan.
@image orm_en1-241.gif

@h1 Exempel
@b Pump med ventil
@image orm_en1-242.gif
Vid begäran att börja pumpa skall först ventilen öppna och därefter ska
pumpen startas.

Vid spolfasen ('at flushing') skall ventilen öppna och detta görs med hjälp
av Dv-signalen 'Spola'
@image orm_en1-243.gif

<attr>AutoOpen 
Anger, i läge AUTO, om OPEN-order ska ges eller ej. FALSE betyder 
CLOSE- order och TRUE en OPEN-order. 
</attr>

<attr>EndOpen 
Anger om ändgränsläget för OPEN-manöver är påverkat eller ej. FALSE 
betyder ingen påverkan och TRUE innebär att ändgränsläget är påverkat. 

Attributet används av Alarm1 och Alarm3 . 
</attr>

<attr>EndClosed 
Anger om ändgränsläget för CLOSE-manöver är påverkat eller ej. FALSE 
betyder ingen påverkan och TRUE innebär att ändgränsläget är påverkat. 

Attributet används av Alarm1 och Alarm3 . 
</attr>

<attr>Local 
Anger om läge LOCAL valts eller ej. FALSE betyder att 'NOT LOCAL' valts 
(och ManMode om det är MANUAL eller AUTO som gäller). TRUE innebär 
att LOCAL valts. 
</attr>

<attr>LocalOpen 
Anger, i läge LOCAL, om OPEN-order ska ges eller ej. TRUE betyder OPEN- 
order och den kommer att kvarstå tills nästa CLOSE-order ges. FALSE 
representerar ingen aktivitet. 
</attr>

<attr>LocalClose 
Anger, i läge LOCAL, om CLOSE-order ska ges eller ej. TRUE betyder 
CLOSE- order och den kommer att kvarstå tills nästa OPEN-order ges. FALSE 
representerar ingen aktivitet. 
</attr>

<attr>SafeOpen 
Anger säkerhetsförreglingens tillstånd visavi OPEN-order. Förreglingen gäller 
oberoende av driftläge. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en ovillkorlig 
OPEN-order såvida inte också SafeClose är TRUE. Om både SafeClose och 
SafeOpen är TRUE vinner SafeClose i kraft av sin högre prioritet; se ovan 
</attr>

<attr>SafeClose 
Anger säkerhetsförreglingens tillstånd visavi CLOSE-order. Förreglingen 
gäller oberoende av driftläge. 

FALSE betyder att förreglingen är inaktiv. TRUE innebär en ovillkorlig 
CLOSE-order. 
</attr>

<attr>ProdOpen 
Anger, i läge AUTO och MANUAL, driftförreglingens tillstånd visavi OPEN- 
order.
FALSE betyder att förreglingen är inaktiv. TRUE innebär en OPEN-order 
såvida inte någon av SafeClose , ProdClose eller Local är TRUE. 
</attr>

<attr>ProdClose 
Anger, i läge AUTO och MANUAL, driftförreglingens tillstånd visavi 
CLOSE-order.
FALSE betyder att förreglingen är inaktiv. TRUE innebär en CLOSE-order 
såvida inte någon av SafeOpen eller Local är TRUE. 
</attr>

<attr>ManMode 
Anger driftläge ( MANUAL eller AUTO) när LOCAL är FALSE. Attributet 
används som en traditionell parameter, dvs man kan skriva/läsa i den från olika 
program.Tanken med att placera attributet som ett utgångsattribut är att 
attributet då enklare kan användas i den grafiska konfigurationen. FALSE 
betyder att AUTO gäller och TRUE att driftläget är MANUAL. 
</attr>

<attr>OrderOpen 
Driftsorder. FALSE tolkas här som CLOSE-order och TRUE som en OPEN-
order. 
</attr>

<attr>IndOpen 
Indikerar, i läge AUTO och MANUAL, huruvida ändgränsläget för OPENED- 
manöver är påverkat och OPEN-ordern kvarstår eller ej. 

Attributet är TRUE om det finns en OPEN-order, ändgränsläget EndOpen är 
påverkat och EndClosed = Local = FALSE , annars är attributet FALSE. 
</attr>

<attr>IndClose 
Indikerar, i läge AUTO och MANUAL, huruvida ändgränsläget för CLOSED- 
manöver är påverkat och CLOSE-ordern kvarstår eller ej. 

Attributet är TRUE om det finns en CLOSE-order, ändgränsläget EndClosed är 
påverkat och EndOpen = Local = FALSE , annars är attributet FALSE. 
</attr>

<attr>Alarm1 
Övervakning av gångtid vid OPEN-manöver.
Anger om OrderOpen varit TRUE under en tid längre än TimerTime utan att 
ändgränsläget för 'fullt öppet' ( attributet EndOpen ) påverkats. 

FALSE betyder inget larm; TRUE innebär att EndOpen inte påverkats inom 
tidsgränsen TimerTim . Driftordern, OrderOpen , påverkas inte av larmet. 
Larmet kvarstår tills att EndOpen blir TRUE eller tills att en CLOSE-order ges. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlång gångtid vid OPEN av xxx ' i övervakningsobjektets DetectText . 
</attr>

<attr>Alarm2 
Övervakning av gångtid vid CLOSE-manöver. 

Anger om OrderOpen varit FALSE under en tid längre än TimerTime utan att 
ändgränsläget för 'fullt stängt' ( attributet EndClosed ) påverkats. 

FALSE betyder inget larm; TRUE innebär att EndClosed inte påverkats inom 
tidsgränsen TimerTim . Driftordern, OrderOpen , påverkas inte av larmet. 
Larmet kvarstår tills att EndClosed blir TRUE eller tills att en OPEN-order ges. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlång gångtid vid CLOSE av xxx ' i övervakningsobjektets DetectText . 
</attr>

<attr>Alarm3 
Övervakning av ändgränsläget för OPEN-manöver. 

Attributet signalerar genom att bli TRUE, om EndOpen indikeringen förloras 
trots en kvarstående OPEN-order eller om båda gränslägesindikeringarna ( 
EndOpen , EndClosed ) samtidigt är påverkade. Driftordern, OrderOpen , 
påverkas inte av larmet. Larmet kvarstår så länge larmläget existerar. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat 'fullt öppen'-gränslägesindikering på xxx trots kvarstående OPEN ' i 
övervakningsobjektets DetectText . 
</attr>

<attr>Alarm4 
Övervakning av ändgränsläget för CLOSE-manöver. 

Attributet signalerar genom att bli TRUE, om EndClosed indikeringen förloras 
trots en kvarstående CLOSE-order eller om båda gränslägesindikeringarna ( 
EndOpen , EndClosed ) samtidigt är påverkade. Driftordern, OrderOpen , 
påverkas inte av larmet. Larmet kvarstår så länge larmläget existerar. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange t.ex 
' Förlorat 'fullt stängt'-gränslägesindikering på xxx trots kvarstående OPEN ' i 
övervakningsobjektets DetectText . 

Om EndClose = EndOpen = TRUE är både Alarm3 och Alarm4 aktiva. 
</attr>

<attr>SumAlarm 
Summalarm. 

Anger om något av objktets interna larm är aktivt eller ej. FALSE betyder att 
inget aktivt internlarm finns; TRUE innebär att minst en av utgångarna al1 , al2 
, al3 eller al4 är TRUE. Driftordern påverkas ej av larmet. 

Koppla ett DSup objekt till utgången om meddelande ska skickas och ange 
DetectText. 
</attr>


<attr>ManOpen 
Anger, i läge MANUAL, ett OPEN-direktiv. FALSE betyder ingen aktivitet; 
TRUE innebär att OPEN-order ska ges. Sedan den satta flaggan noterats ser 
ProviewR till att den tas ned. 
</attr>

<attr>ManClose 
Anger, i läge MANUAL, ett CLOSE-direktiv. FALSE betyder ingen aktivitet; 
TRUE innebär att CLOSE-order ska ges. Sedan den satta flaggan noterats 
ombesörjer ProviewR att den tas ned. 
</attr>

<attr>TimerTime 
Den, i sekunder, längsta tillåtna gångtiden. Om en driftorder (OPEN eller 
CLOSE) gällt under en tid längre än TimerTime utan att motsvarande 
gränslägesindikering blivit aktiv sätts Alarm1 eller Alarm2 . 

TimerTime = PLC-jobbets bascykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts i samband med 'Create Load File' för användning i 
målmiljön. 
</attr>

<attr>ManAcc 
Ej implementerad funktion. Anger operatörens behörighet att växla mellan 
driftlägena MANUAL / AUTO. Följande behörigheter är möjliga: 

0 -- Ingen växling tillåten
? 0 -- Växling tillåten. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer. 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller om sådant inte används, på TimerDoDum. 
Efter tiden TimerTime tas den signal som utpekas av TimerDo ned. 
</attr>

<attr>Status 
Följande status värden är möjliga: 

1 eller -1 -- Väntar på OPEN eller CLOSE indikering
2 eller -2 -- OPENING eller CLOSING
3 eller -3 -- OPEN eller CLOSED 
</attr>
</class>

#
# Class Wait
#
<class> Wait
@Summary Fördröjt tillslag. 
Fördröjt tillslag. 
@image orm_wait_fo.gif

Länkas in i timerkön vid positiv flank på insignalen. 

Då fördröjningen TimerTime löpt ut, och om insignalen fortfarande är TRUE 
blir utgången TRUE. Utgången blir FALSE då insignalen blir FALSE. 

@image orm_wait_fig1.png
 
@b Se även

<attr>In 
Signal som ska fördröjas. 
</attr>

<attr>Status 
Fördröjd signal. S. k. timerstyrning används. 
</attr>

<attr>TimerTime 
Anger, i sekunder, tillslagsfördröjningen. 

TimerTime = PLC programmets cykeltid. 
</attr>

<attr>ShowTimerTime 
Anger om TimerTime ska visas i Wait-objektets symbol eller ej. FALSE 
betyder ingen visning och TRUE visning. Enheten är sekunder. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin
Anger minsta tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax 
Anger största tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>StatusOld 
Senaste In -värde. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>
</class>

#
# Class Waith
#
<class> Waith
@Summary Fördröjt tillslag med håll-funktion. 
Fördröjt tillslag med håll-funktion. 
@image orm_waith_fo.gif

Fördröjningen, TimerTime, räknas från positiv flank på 'in'-ingången och mäts 
med räknare.

Fördröjningen kan utsträckas genom att tidnedräkningen stoppas då h(o)ld- 
signalen är TRUE . Om 'in'-ingången är TRUE nollställs räknaren oberoende 
av hld-ingången.

Då tiden gått ut, och om insignalen fortfarande är TRUE blir utgången TRUE. 
Utgången blir FALSE då insignalen blir FALSE. 

@b Exempel
I exemplet nedan är TimerTime = 5 sekunder och TimerCount = 250.
@image orm_en1-247.gif 
Som framgår av figuren är funktionen exakt som ett Wait-objekt, med
undantag för att aktiv hld-ingång blockerar nedräkningen.

@b Se även 

<attr>In 
Signal som ska fördröjas. 
</attr>

<attr>hld 
Anger om håll-funktionen ska användas eller ej. FALSE betyder att tidned 
räkning ska göras och TRUE att tidnedräkningen ska stoppas; dvs pausläge. 
</attr>

<attr>Status 
Fördröjd signal. S. k. timerstyrning används. 
</attr>

<attr>TimerTime 
Anger, i sekunder, tillslagsfördröjningen. 

TimerTime = PLC programmets cykeltid. 
</attr>

<attr>TimerDoDum 
Dummy. Om TimerDoDum inte pekar på ett Do eller Dv objekt pekar det hit. 
</attr>

<attr>TimerObjid 
Detta objekts identitet. Sätts då laddfilen skapas. Används i målmiljön. 
</attr>

<attr>TimerAcc 
Ej implementerad funktion. Anger operatörens behörighet att ändra värde på 
TimerTime . Följande behörigheter är möjliga: 

0 -- Ingen ändring tillåten
? 0 -- ändring tillåten. 
</attr>

<attr>TimerMin
Anger minsta tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>TimerMax 
Anger största tillåtna värde vid operatörsändring av TimerTime . 

TimerMin <= TimerTime <= TimerMax 
</attr>

<attr>StatusOld 
Senaste In -värde. 
</attr>

<attr>TimerFlag 
Markerar aktiv timer 
</attr>

<attr>TimerNext 
Pekar på nästa element i timer kön. 
</attr>

<attr>TimerCount 
Antal återstående ticks. ( 1 tick = PLC-jobbets bascykeltid.) 
</attr>

<attr>TimerDo 
Pekar på ett Do eller Dv objekt eller, om sådant objekt inte används, på 
TimerDoDum . Efter tiden TimerTime nollställs den av TimerDo angivna 
signalen. 
</attr>

<attr>CountOld 
Räknarvärde vid blockerad nedräkning; dvs. då hld blir TRUE. 
</attr>
</class>

#
# Class WbEnvironment
#
<class> WbEnvironment
WbEnvironment konfigurerar arbetsbänkens miljö.
Objektet ligger i projekt volymen som ett topp objekt.
I Path attributet kan en sökväg för laddatafiler anges.
Objektet kan ha barn av typen RootVolumeLoad, SubVolumeLoad och
ClassVolumeLoad som definierar vilka volymer som ska laddas i
arbetsbänken.

<attr>Path
En lista på filkataloger där importerade laddatafiler kan ligga.
Importerade laddatafiler konfiguerars med ClassVolumeLoad, RootVolumeLoad
och SubVolumeLoad objekt som har WbEnvironmnet objektet som förälder.
Om laddatafilerna importeras från andra projekt, eller från andra fil-
kataloger än $pwrp_load, ska filkatalogerna där laddafiler kan ligga anges
här.
</attr>

#
# Class WebBrowserConfig
#
<class> WebBrowserConfig
WebBrowserConfig objektet definierar vilken web-läsare som används
när en URL öppnas.
Man kan även definiera symboler att användas i URL'er.

<attr>WebBrowser
Web-läsare som används när en URL öppnas.
Använd 'rt_mozilla' istället för mozilla för att tillåta all användare
att starta mozilla från xtt.
</attr>
<attr>URL_Symbols
Definition av symboler använda i URL'er.
En symbol som hittas i en URL kommer att ersättas med dess värde. I en 
URL ska en symbol ha ett '$' tecken som prefix.
I definitionen, ska ett element i URL_Symbol vektorn innehålla symbolens
namn och värde separerade med mellanslag eller TAB.

@b Exempel
Definition av symbolen 'project'

URL_Symbols[0] project http://newton/data1/pwrp/vwxnu1/common/web

och använd i en URL

$project/my_datasheet.html
</attr>
</class>

#
# Class WebGraph
#
<class> WebGraph
WebGraph objektet definierar en web graf på en ProviewR web site.
WebGraph objekt ska läggas som barn till ett WebHandler objekt.

@b Se även
<attr>Name
Grafens namn, dvs det namn grafen är sparad under i Ge.
</attr>
<attr>Text
Text i menyn för grafen.
</attr>
<attr>WebTarget
Mål fönster för applet. Om grafen är exporterad som an java applet kan man
välja vilken ram applet'en ska visas i.
Fönstret innehåller två ramar, meny ramen till vänster och huvud ramen till
höger. Default visas URL'en i huvud-ramen, men det är också möjligt att
visa den i ett separat fönster, eller att täcka även meny-ramen.

Om grafen är exporterad som en java frame öppnas den alltid i ett separat
fönster.
</attr>
</class>

#
# Class WebHandler
#
<class> WebHandler
WebHandler objektet definierar en hemsida för en ProviewR nod.

Förekomsten av ett WebHandler objekt gör att en server process (GdhServer)
startas, vilken förser graf-applets och frames med information från realtids-
databasen.

Med 'Generate website' funktionen i Ge är det möjligt att producera html-filer
för hemsidan, innehållande in meny-fram och en applet-frame. Länkarna in menyn
bestämms av de WebGraph och WebLink objekt som är barn till WebHandler objektet.

Om EnableLogin attributet är satt, kommer ett login fönster att kunna öppnas
från menyn, vilket gör det möjligt att logga in som en ProviewR användare, och
erhålla privilegier att ändra i databasen.

<attr>MaxConnections
@Summary Max antal samtidiga uppkopplingar till GdhServer processen.
Max antal samtidiga uppkopplingar till GdhServer processen.
Varje applet som visas, öppnar en länk till GdhServer processen. Om 
MaxConnections överskrids, kommer uppkopplingen att refuseras.
</attr>
<attr>FileName
Namn på html-filen för start-sidan.
</attr>
<attr>Title
Titel i meny ramen.
</attr>
<attr>Text
Text i meny ramen.
</attr>
<attr>EnableLogin
Ett login entry placeras i menyn, från vilken man kan logga in som en
ProviewR användare, och erhålla privilegier för att ändra i databasen.
</attr>
<attr>EnableAlarmList
Ett menyentry för larmlistan placeras i menyn.
</attr>
<attr>EnableEventList
Ett menyentry för händelselistan placeras i menyn.
</attr>
<attr>EnableNavigator
Ett menyentry för runtime navigatorn placeras i menyn.
</attr>
<attr>UserObject
User objekt för konfigurering av larm- och händelselistan.
</attr>
<attr>StyleSheet
css-fil (Cascading Style Sheets) som används av genererade html-filer.
</attr>
<attr>StartURL
URL som kommer att visas i huvud-ramen när websidan öppnas.
</attr>
</class>

#
# Class WebLink
#
<class> WebLink
WebLink objektet definierar en web länk i hemsidan för en ProviewR nod, och
kommer att visas som ett entry i menyn.
WebLink objekt ska placeras som barn till ett WebHandler objekt.

@b Se även

<attr>URL
URL visas när meny-entry aktiveras.
</attr>
<attr>Text
Text i menyn för länken.
</attr>
<attr>WebTarget
Mål fönster.
Fönstret innehåller två ramar, meny ramen till vänster och huvud ramen till
höger. Default visas URL'en i huvud-ramen, men det är också möjligt att
visa den i ett separat fönster, eller att täcka även meny-ramen.
</attr>
</class>
#
# Class WindowPlc
#
<class> WindowPlc
@Summary Plc fönster objekt
Objektet är förälderobjekt till alla objekt i underfönster både till PlcPgm och 
CSub objekt. 


Objeket konfigureras automatiskt av utvecklingsmiljön direkt under 

PlcPgm objekt då PLC Editor tar upp motsvarande 'PLC fönster' första gången. 
CSub objekt då motsvarande underfönster öppnas. 
Genom att välja 'Delete Window' i PLC Editorns rullgardinsmeny 'Files' 
raderas fönstrets alla objekt i rtdb liksom själva fönstret. 


- 

- 

@b Tips 

Möjligheten att vid modultest stänga av enskilda modulers exekvering bör 
beaktas, t.ex kan det handla om att lokalisera vilken modul som svarar för att 
en viss storhet ständigt antar visst värde. 

<attr>Modified 
Då 'Save' väljs i motsvarande fönster fylls aktuell tid i av utvecklingsmiljön. På 
så sätt kommer attributet att ange när fönstret senast sparades.
Attributet används internt av hjälpprogrammet pwrc i bl. a. följande fall: 

Kommandot ShowModules i 'Utilities...' används för att visa när aktuella 
fönster sparades resp. kompilerades. Därigenom är det möjligt att kontrollera 
om något fönster inte kompilerats efter det att det ändrats. 
Kommandot Compile med tillvalet Modified i 'Utilities...' används för att 
kompilera fönster som ändrats efter senaste kompileringen. 
</attr>

<attr>ScanOff 
Anger om PLC objekten i motsvarande fönster såväl som underliggande 
fönster ska tillåtas exekvera eller ej. FALSE innebär att de aktuella objekten 
tillåts exekvera som vanligt och TRUE att de tillsvidare inte tillåts exekvera. 

Attributet manövreras manuellt. 
</attr>

<attr>Trace 
Används ej. 
</attr>
</class>

#
# Class WindowSubStep
#
<class> WindowSubStep
@Summary Plc fönster objekt för SubStep
Förälderobjekt till alla objekt i SubStep objekts underfönster. 


Objeket konfigureras automatiskt av utvecklingsmiljön direkt under SubStep 
objektet då motsvarande underfönster öppnas.
Genom att välja 'Delete Window' i PLC Editorns rullgardinsmeny 'Files' 
raderas fönstrets alla objekt i rtdb liksom själva fönstret. 


- 

- 

<attr>Modified 
Då 'Save' väljs i motsvarande fönster fylls aktuell tid i av utvecklingsmiljön. På 
så sätt kommer attributet att ange när fönstret senast sparades.
Attributet används internt av hjälpprogrammet pwrc i bl. a. följande fall: 

Kommandot ShowModules i 'Utilities...' används för att visa när aktuella 
fönster sparades resp. kompilerades. Därigenom är det möjligt att kontrollera 
om något fönster inte kompilerats efter det att det ändrats. 
Kommandot Compile med tillvalet Modified i 'Utilities...' används för att 
kompilera fönster som ändrats efter senaste kompileringen. 
</attr>

<attr>ScanOff 
Anger om PLC objekten i motsvarande fönster såväl som underliggande 
fönster ska tillåtas exekvera eller ej. FALSE innebär att de aktuella objekten 
tillåts exekvera som vanligt och TRUE att de tillsvidare inte tillåts exekvera. 

Attributet manövreras manuellt. 
</attr>

<attr>Trace 
Används ej. 
</attr>
</class>

#
# Class Xor
#
<class> Xor
@Summary Antingen-eller-grind.
Antingen-eller-grind (eXclusive OR). 
@image orm_xor_fo.gif

Utgången blir blir FALSE när ingångarna är lika och TRUE då ingångarna är 
olika, dvs utgången blir TRUE om och endast om antigen den ena eller den 
andra ingången är TRUE. 

<attr>In1
Insignal 1.
</attr>

<attr>In2 
Insignal 2.
</attr>

<attr>Status 
Anger objektets aktuella tillstånd. 
</attr>
</class>

#
# Class Rack_SSAB
#
<class> Rack_SSAB
@Summary Konfigurering av PSS9000 rack
Konfigurerar ett PSS9000 rack. Rackobjektet läggs under det $Node objekt 
som PSS9000 racken är kopplad till och har kortobjekten respektive kort som 
ingår i racken som barn. Rack-objekten ska namnges R1, R2, R3... enligt 
SSAB's standard.

<attr>IOSysType
Anger typ av io-system. 1 markerar PSS700.
</attr>

<attr>Description
Beskrivning av racken (40 tecken).
</attr>

<attr>MaxNoOfCards
Maximalt antal kort som kan hanteras av racken.
</attr>
</class>

#
# Class Di_DIX2
#
<class> Di_DIX2
@Summary Konfigurering av ett PSS9000 digitalt ingångskort.
Konfigurering av ett PSS9000 digitalt ingångskort. Di korten ska namnges 
DIxx där xx anger kortplatsen i racken. Kortnamnet bör överensstämma med 
kortnamnet i ebuild-filen.

<attr>IOSysType
Används ej längre.
</attr>

<attr>Description
Beskrivning av kortet (40 tecken).
</attr>

<attr>DevName
Namn på kortet. 
I ELN-system måste namnet överensstämma med namnet i ebuild-filen och bör 
överensstämma med objektsnamnet.
</attr>

<attr>DevNumber
Numrering av kortet som hanteras internt av io-hanteringen.
</attr>

<attr>ErrorCount
Felräknare som räknar upp för varje misslyckad läsning på kortet. När 
felräknaren här nått upp till ErrorSoftLimit skrivs ett meddelande ut på 
konsolloggen, när ErrorHardLimit har nåtts stoppas io-hanteringen.
</attr>

<attr>ErrorSoftLimit
Värde på felräknaren ErrorCount då ett meddelande på konsolloggen ska ges.
</attr>

<attr>ErrorHardLimit
Värde på felräknaren ErrorCount då io-hanteringen ska stoppas.
</attr>

<attr>ConvMask1
Konvertering mask som anger vilka kanaler som läsning ska ske på. Om bit 1 i 
masken är sann sker läsning på kanal 1 osv. Om biten för en kanal är falsk kan 
värdet på kanalen sättas från rtt el dyl. ConvMask1 hanterar kanal 1 - 16. 
ConvMask ändras enklast genom rtt-kommandot 'set converson /on' resp 'set 
conversion /off'.
</attr>

<attr>ConvMask2
Funktionen är samma som ConvMask1, men ConvMask2 hanterar kanal 17 - 
32.
</attr>

<attr>InvMask1
Inverterings mask som anger vilkan kanaler som ska inverteras vid läsningen. 
Om bit 1 i masken är sann kommer kanal 1 att inverteras osv. InvMask1 
hanterarkanal 1 - 16. InvMask ändras enklast genom rtt-kommadot 'set invert 
/on' resp 'set invert/off'.
</attr>

<attr>InvMask2
Funktionen är samma som InvMask1, men InvMask2 hanterar
kanal 17 - 32.
</attr>

<attr>MaxNoOfChannel
Maximal antal kanaler på kortet.
</attr>

<attr>RegAddress
Register adress.

För Lynx-system måste adressen anges. Observera att den ska matas in i 
decimal form.

För ELN-system används adressen enbart för utskrift i kanallistan. Attributet är 
decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Registeradressen som systemet använder ligger i ebuild-filen och måste 
överensstämma med strappningen på kortet.

Addressen för di-korten ska vara (se PSS7000-pärmen) :

176100 för di-kort 1
176104 för di-kort 2
176110 för di-kort 3
...
176174 för di-kort 16
</attr>

<attr>VectAddress
Vektor address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Vektoraddressen som systemet använder ligger i ebuild-filen och används 
egentligen inte men måste finna för att ELN-systemet ska kunna skapa ett 
device.

Vektor addressen kan börja på 200  ? och 8 bytes ska allokeras för varje kort 
oavsett korttyp. Serien kan alltså se ut 200, 210, 220, 230, 240, 250, 260, 270, 
300, 310 osv (serien gäller samtliga io-kort i systemet).
</attr>
</class>

#
# Class Do_HVDO32
#
<class> Do_HVDO32
@Summary Konfigurering av ett PSS9000 digitalt utgångskort.
Konfigurering av ett PSS9000 digitalt utgångskort. Do korten ska namnges 
DOxx där xx anger kortplatsen i racken. Kortnamnet bör överensstämma med 
kortnamnet i ebuild-filen.

Om mjuk omstart av systemet ska kunna göras ska Description-Attributet för 
stall-kortet ska inledas med "STALL" (programmet ssab_exe:rs_stall.exe_eln 
som läser på stallkortet för att undvika att stall utlöses kräver detta).

<attr>IOSysType
1 anger att kortet tillhör io-systemet PSS7000.
</attr>

<attr>Description
Beskrivning av kortet (40 tecken).
</attr>

<attr>DevName
Namn på kortet. Namnet måste överensstämma med namnet i ebuild-filen och 
bör överensstämma med objektsnamnet.
</attr>

<attr>DevNumber
Numrering av kortet som hanteras internt av io-hanteringen.
</attr>

<attr>ErrorCount
Felräknare som räknar upp för varje misslyckad läsning på kortet. När 
felräknaren här nått upp till ErrorSoftLimit skrivs ett meddelande ut på 
konsolloggen, när ErrorHardLimit har nåtts stoppas io-hanteringen.
</attr>

<attr>ErrorSoftLimit
Värde på felräknaren ErrorCount då ett meddelande på konsolloggen ska ges.
</attr>

<attr>ErrorHardLimit
Värde på felräknaren ErrorCount då io-hanteringen ska stoppas.
</attr>

<attr>ConvMask1
Konvertering mask som anger vilka kanaler som läsning ska ske på. Om bit 1 i 
masken är sann sker läsning på kanal 1 osv. Om biten för en kanal är falsk kan 
värdet på kanalen sättas från rtt el dyl. ConvMask1 hanterar kanal 1 - 16. 
ConvMask ändras enklast genom rtt-kommandot 'set converson /on' resp 'set 
conversion /off'.
</attr>

<attr>ConvMask2
Funktionen samma som ConvMask1, men ConvMask2 hanterar kanal 17 - 32.
</attr>

<attr>InvMask1
Inverterings mask som anger vilkan kanaler som ska inverteras vid läsningen. 
Om bit 1 i masken är sann kommer kanal 1 att inverteras osv. InvMask1 
hanterar kanal 1 - 16. InvMask ändras enklast genom rtt-kommadot 'set invert 
/on' resp 'set invert/off'.
</attr>

<attr>InvMask2
Funktionen samma som InvMask1, men InvMask2 hanterar kanal 17 - 32.
</attr>

<attr>TestMask1
Test mask som anger att en värdet på en kanal inte hämtas från signalvärdet 
utan från värdet i attributet TestValue. Om bit 1 i masken är sann läggs 
testvärdet ut på kanal 1 osv. TestMask1 hanterar kanal 1 - 16.
</attr>

<attr>TestMask2
Funktionen är samma som TestMask1, men TestMask2 hanterar kanal 17 - 32.
</attr>

<attr>TestValue1
Bitmask som läggs ut på de kanaler som har angetts i AttributetTestMask. Ex: 
För att lägga ut värdet 1 på kanal 3 ska bit 3 i TestMask1 sättas och bit 3 i 
TestValue.
</attr>

<attr>TestValue2
Funktionen är samma som TestValue1, men TestValue2 hanterar kanal 17 - 32.
</attr>

<attr>FixedOutValue1
Bitmask som läggs ut på kanal 1 till 16 vid nödstopp av io (ErrorHardLimit har 
överskridits på något kort el dyl). Systemet bör konstrueras så att 
FixedOutValue kan vara 0 eftersom detta värde fås vid spänningbortfall.
</attr>

<attr>FixedOutValue2
Funktionen är samma som FixedOutValue1, men FixedOutValue2 hanterar 
kanal 17 - 32.
</attr>

<attr>MaxNoOfChannel
Maximal antal kanaler på kortet.
</attr>

<attr>RegAddress
Register address. Värdet här används enbart för utskrift i kanallistan. 
Attributetär decimalt men för att lättare kunna läsa signallistan brukar 
addressen anges oktalt.

Registeraddressen som systemet använder ligger i ebuild-filen och måste 
överensstämma med strappningen på kortet. Addressen för do-korten ska vara 
(se PSS7000-pärmen) :

176000 för do-kort 1
176004 för do-kort 2
176010 för do-kort 3
...
176074 för do-kort 16
</attr>

<attr>VectAddress
Vektor address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Vektoraddressen som systemet använder ligger i ebuild-filen och används 
egentligen inte men måste finna för att ELN-systemet ska kunna skapa ett 
device.

Vektor addressen kan börja på 200 ? och 8 bytes ska allokeras för varje kort 
oavsett korttyp.
</attr>
</class>

#
# Class Ai_HVAI32
#
<class> Ai_HVAI32
@Summary Konfigurering av ett PSS9000 analogt ingångskort.
Konfigurering av ett PSS9000 analogt ingångskort. Ai korten ska namnges 
AIxx där xx anger kortplatsen i racken. Kortnamnet bör överensstämma med 
kortnamnet i ebuild-filen.

<attr>IOSysType
1 anger att kortet tillhör io-systemet PSS7000.
</attr>

<attr>Description
Beskrivning av kortet (40 tecken).
</attr>

<attr>DevName
Namn på kortet. Namnet måste överensstämma med namnet i ebuild-filen och 
bör överensstämma med objektsnamnet.
</attr>

<attr>DevNumber
Numrering av kortet som hanteras internt av io-hanteringen.
</attr>

<attr>ErrorCount
Felräknare som räknar upp för varje misslyckad läsning på kortet. När 
felräknaren här nått upp till ErrorSoftLimit skrivs ett meddelande ut på 
konsolloggen, när ErrorHardLimit har nåtts stoppas io-hanteringen.
</attr>

<attr>ErrorSoftLimit
Värde på felräknaren ErrorCount då ett meddelande på konsolloggen ska ges.
</attr>

<attr>ErrorHardLimit
Värde på felräknaren ErrorCount då io-hanteringen ska stoppas.
</attr>

<attr>DevPolyType
Typ av konverterings funktion för omräkning från råvärdet på kortet till 
signalvärde. Endast förstagradspolynom implementerat ( 1). 
Förstagradspolynomet specificeras med koefficienterna DevPolyCoef0 och 
DevPolyCoef1 enligt

signalvärde = DevPolyCoef0 + DevPolyCoef1 * råvärde

DevPolyCoef0 = 20.47 och DevPolyCoef1 = -0.01 ger 0-20 mA.
DevPolyCoef0 = 5.0  och DevPolyCoef1 = -0.002441 ger 0-5 V.
</attr>

<attr>DevPolyCoef0
Koefficient i konverteringsfunkionen, se DevPolyType ovan.
</attr>

<attr>DevPolyCoef1
Koefficient i konverteringsfunkionen, se DevPolyType ovan.
</attr>

<attr>MaxNoOfChannel
Maximal antal kanaler på kortet.
</attr>

<attr>RegAddress
Register address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Registeraddressen som systemet använder ligger i ebuild-filen och måste 
överensstämma med strappningen på kortet. Addressen för ai-korten ska vara 
(se PSS7000-pärmen) :

176400 för ai-kort 1
176402 för ai-kort 2
176404 för ai-kort 3
...
176412 för ai-kort 6
</attr>

<attr>VectAddress
Vektor address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Vektoraddressen som systemet använder ligger i ebuild-filen och används 
egentligen inte men måste finna för att ELN-systemet ska kunna skapa ett 
device. 

Vektor addressen kan börja på 200 ? och 8 bytes ska allokeras för varje kort 
oavsett korttyp. Serien kan alltså se ut 200, 210, 220, 230, 240, 250, 260, 270, 
300, 310 osv (serien gäller samtliga io-kort i systemet).
</attr>
</class>

#
# Class Ao_HVAO4
#
<class> Ao_HVAO4
@Summary Konfigurerar ett PSS9000 analogt utgångskort.
Konfigurerar ett PSS9000 analogt utgångskort. Ao korten ska namnges AOxx 
där xx anger kortplatsen i racken. Kortnamnet bör överensstämma med 
kortnamnet i ebuild-filen.

<attr>IOSysType
1 anger att kortet tillhör io-systemet PSS7000.
</attr>

<attr>Description
Beskrivning av kortet (40 tecken).
</attr>

<attr>DevName
Namn på kortet. Namnet måste överensstämma med namnet i ebuild-filen och 
bör överensstämma med objektsnamnet.
</attr>

<attr>DevNumber
Numrering av kortet som hanteras internt av io-hanteringen.
</attr>

<attr>ErrorCount
Felräknare som räknar upp för varje misslyckad läsning på kortet. När 
felräknaren här nått upp till ErrorSoftLimit skrivs ett meddelande ut på 
konsolloggen, när ErrorHardLimit har nåtts stoppas io-hanteringen.
</attr>

<attr>ErrorSoftLimit
Värde på felräknaren ErrorCount då ett meddelande på konsolloggen ska ges.
</attr>

<attr>ErrorHardLimit
Värde på felräknaren ErrorCount då io-hanteringen ska stoppas.
</attr>

<attr>DevPolyType
Typ av konverterings funktion för omräkning från signalvärde till till råvärde. 
Endast förstagradspolynom implementerat ( 1). Förstagradspolynomet 
specificeras med koefficienterna DevPolyCoef0 och DevPolyCoef1 enligt

råvärde = DevPolyCoef0 + DevPolyCoef1 * signalvärde

DevPolyCoef0 = 0.0 och DevPolyCoef1 = 102.375 ger signalvärde 0-20 mA.
</attr>


<attr>DevPolyCoef0
Koefficient i konverteringsfunkionen, se DevPolyType ovan.
</attr>

<attr>DevPolyCoef1
Koefficient i konverteringsfunkionen, se DevPolyType ovan.
</attr>

<attr>MaxNoOfChannel
Maximal antal kanaler på kortet.
</attr>

<attr>RegAddress
Register address. Värdet här används enbart för utskrift i kanallistan. 
Attributetär decimalt men för att lättare kunna läsa signallistan brukar 
addressen anges oktalt. 

Registeraddressen som systemet använder ligger i ebuild-filen och måste 
överensstämma med strappningen på kortet. Addressen för ao-korten ska vara 
(se PSS7000-pärmen) :

176210 för ao-kort 1
176220 för ao-kort 2
176230 för ao-kort 3
...
176270 för ao-kort 7
</attr>

<attr>VectAddress
Vektor address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt.

Vektoraddressen som systemet använder ligger i ebuild-filen och används 
egentligen inte men måste finna för att ELN-systemet ska kunna skapa ett 
device.

Vektor addressen kan börja på 200 ? och 8 bytes ska allokeras för varje kort 
oavsett korttyp. Serien kan alltså se ut 200, 210, 220, 230, 240, 250, 260, 270, 
300, 310 osv (serien gäller samtliga io-kort i systemet).
</attr>
</class>

#
# Class Co_PI24BO
#
<class> Co_PI24BO
@Summary Konfigurering av ett PSS9000 pulsgivarkort av typen PI24D.
Konfigurering av ett PSS9000 pulsgivarkort av typen PI24D. Pulsgivarkorten 
ska namnges COxx där xx anger kortplatsen i racken. Kortnamnet bör 
överensstämma med kortnamnet i ebuild-filen.

<attr>IOSysType
1 anger att kortet tillhör io-systemet PSS7000.
</attr>

<attr>Description
Beskrivning av kortet (40 tecken).
</attr>

<attr>DevName
Namn på kortet. Namnet måste överensstämma med namnet i ebuild-filen och 
bör överensstämma med objektsnamnet.
</attr>

<attr>DevNumber
Numrering av kortet som hanteras internt av io-hanteringen.
</attr>

<attr>ErrorCount
Felräknare som räknar upp för varje misslyckad läsning på kortet. När 
felräknaren här nått upp till ErrorSoftLimit skrivs ett meddelande ut på 
konsolloggen, när ErrorHardLimit har nåtts stoppas io-hanteringen.
</attr>

<attr>ErrorSoftLimit
Värde på felräknaren ErrorCount då ett meddelande på konsolloggen ska ges.
</attr>

<attr>ErrorHardLimit
Värde på felräknaren ErrorCount då io-hanteringen ska stoppas.
</attr>

<attr>ConvMask
Konvertering mask som anger vilka kanaler som läsning ska ske på. Om bit 1 i 
masken är sann sker läsning på kanal 1 osv. Om biten för en kanal är falsk kan 
värdet på kanalen sättas från rtt el dyl. ConvMask1 hanterar kanal 1 - 16. 
ConvMask ändras enklast genom rtt-kommandot 'set converson /on' resp 'set 
conversion /off'.
</attr>

<attr>MaxNoOfCounters
Maximalt antal kanaler på kortet. 
</attr>

<attr>COAbsFlag
Absolutvärde beräknas och lagras.
</attr>

<attr>NoOfBits
Antal bitar, 16 eller 24.
</attr>

<attr>COWrFlag
Intern flagga
</attr>

<attr>MulCount

- V2.7
Enkanals-kort: 1 ger multiplikation av antal pulser med 4, annat värde ger 
multiplikation med 2. Flerkanals-kort: 1 ger multiplikation med 2, annat värde 
ger multiplikation med 4.

V3.3 
Enkanals-kort: 2 ger multiplikation med 4, annat värde ger multiplikation med 
2. Flerkanals-kort: 2 ger multiplikation med 2, annat värde ger multiplikation 
med 4.
</attr>

<attr>DivCount
Flerkanals-kort: 16 ger division med 16 efter multiplikation angiven i 
MulCount.
</attr>

<attr>SpeedMeasurement
Flerkanals-kort: 1 ger hastighetsmätning (pulser/sekund).

Om både SpeedMeasurement och LengthMeasurement är 1 räknas bara åt ett 
håll (används för att mäta max/min utslag t ex ).
</attr>

<attr>LengthMeasurement
Flerkanals-kort: 1 ger längdmätnng styrd av signal på grovsynk (antal pulser). 
Längdmätningen startar vid positiv flank på grovsynk och stoppar vid negativ 
flank. Om CopWrRough är 1 nollställs räknaren vid start av längdmätning. Om 
CopWrRough är 0 forsätter räkningen från föregående mätning.
</attr>

<attr>CopWrRough
1 ger kopiering av skrivregistret till räknaren med grovsynk.
</attr>

<attr>CopWrFine
1 ger kopiering av skrivregistret till räknaren med finsynk.
</attr>

<attr>LoadWrReg
0: Ladda skrivregistret.
1: Ladda skrivregistret och räknare.
</attr>

<attr>SyncRawValue
Läggs in i skrivregistret vid initiering och kopieras till räknaren beroende på 
grov och finsynkflaggorna.
</attr>

<attr>RegAddress
Register address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt. 

Registeraddressen som systemet använder ligger i ebuild-filen och måste 
överensstämma med strappningen på kortet. Addressen för do-korten ska vara 
(se PSS7000-pärmen) :

176300 för co-kort 1
176304 för co-kort 2
176310 för co-kort 3
...
176374 för co-kort 16
</attr>

<attr>VectAddress
Vektor address. Värdet här används enbart för utskrift i kanallistan. Attributet 
är decimalt men för att lättare kunna läsa signallistan brukar addressen anges 
oktalt. 

Vektoraddressen som systemet använder ligger i ebuild-filen och används 
egentligen inte men måste finna för att ELN-systemet ska kunna skapa ett 
device. Vektor addressen kan börjapå 200 ? och 8 bytes ska allokeras för varje 
kort oavsett korttyp.
</attr>

</class>

#
# Class GetData
#
<class> GetData
@Summary Hämtar upp referens till ett dataobjekt.
Hämtar upp referens till ett dataobjekt. Dynamiska objekt hanteras ej av 
GetData.
@image orm_getdata_fo.gif

<attr>Out
Kopplas till ett en dataingång på tex DataArithm, DataCopy, DataReset.
</attr>

<attr>DataObjid
Dataobjekt som ska refereras.
</attr>
</class>

#
# Class DataArithm
#
<class> DataArithm
@Summary c-kod med åtkomst av dataobjekt
DataArithm objektet gör det möjligt att komma åt innehållet i dataobjekt, 
analoga och digital signaler och parametrar i c-kod.
@image orm_dataarithm_fo.gif

Objektet innehåller
-fyra dataingångar.
-sex digitala ingångar.
-sex analoga ingångar.
-fyra datautgångar.
-sex digitala utgångar.
-sex analoga utgångar.

Funktionen för digitala och analoga signaler är i densamma som för CArithm, 
men DataArithm kan dessutom hantera dataobjekts referenser.

Ett dataobjekt kan kopplas till en dataingång (antingen från en GetData eller 
från ett NMpsCell objekt). I koden hanteras den som  en c-struct.
@h1 Syntaxregler

Digitala och analoga in och utgångar hanteras på samma sätt som i ett CArithm 
objekt. Man kan ge ett aliasnamn till en in- eller utgång mha 'aliasdef' (för 
dataingångar invändes 'classdef'). 

@b Exempel

aliasdef d1 StartaMotor, od1 StoppaMotor;
aliasdef A1 Temperatur;

if ( Temperatur > 200)
  StoppaMotor = 1;

@h1 Dataingångar

En Dataingång som används i koden måste klass definieras med en classdef 
sats. Classdef satsen innehåller ordet classdef, dataingång och klassen på det 
dataobjekt som ska hanteras.
Man kan även ge ett aliasnamn i classdef deklarationen.

@b Exempel

classdef Da1 plate;
classdef Da2 plate FrämstaPlåt;
classdef Da3 vdata Värningsdata, Da4 data SistaPlåt;

Dataingångarna hanteras som en pekare på angiven klass.
Antag att klassen data innehåller attributet Width.
Attributet i dataobjektet refereras då med Da1->Width.

@b Exempel

if ( d1)
  Da1->Width = 55.;
else
  Da1->Width = 66.;

 if  ( FrämstaPlåt->Temperatur > SistaPlåt->Temperatur)
  od1 = 1;

Om dataingången är kopplad till ett NMpsCell objekt är datapekaren noll om 
refererad plats i cellen inte innehåller något dataobjekt. I detta fall måste man 
först testa om pekaren är noll innan den används. Plcprogrammet kommer 
annars att drabbas av access violation...

@b Exempel      

if ( Da1 != 0)
{
  if ( d1)
    Da1->Width = 55.
  else
    Da1->Width = 66.
}

Om dataingången är kopplad till ett cellobjekt kan man komma åt 
informationen om fram och bakkant genom Da1Front, Da1Back, Da2Front, ...

@h1 Datautgångar

En datautgång kan tilldelas värdet av en dataingång

@b Exempel

if ( d1)
  ODa1 = Da1;
else
  ODa1 = Da2;

<attr>DataIn1-DataIn4
Dataingångar som kopplas till en datareferens utgång, dvs GetData, NMpsCell 
eller DataArithm.
Ingångarna refereras i koden som Da1, Da2, Da3 resp Da4.
</attr>

<attr>AIn1
Analog ingång. Ingången refereras A1 i c-koden.
</attr>
<attr>AIn2
Analog ingång. Ingången refereras A2 i c-koden.
</attr>
<attr>AIn3
Analog ingång. Ingången refereras A3 i c-koden.
</attr>
<attr>AIn4
Analog ingång. Ingången refereras A4 i c-koden.
</attr>
<attr>AIn5
Analog ingång. Ingången refereras A5 i c-koden.
</attr>
<attr>AIn6
Analog ingång. Ingången refereras A6 i c-koden.
</attr>

<attr>DIn1
Digital ingång. Ingången refereras d1 i c-koden.
</attr>
<attr>DIn2
Digital ingång. Ingången refereras d2 i c-koden.
</attr>
<attr>DIn3
Digital ingång. Ingången refereras d3 i c-koden.
</attr>
<attr>DIn4
Digital ingång. Ingången refereras d4 i c-koden.
</attr>
<attr>DIn5
Digital ingång. Ingången refereras d5 i c-koden.
</attr>
<attr>DIn6
Digital ingång. Ingången refereras d6 i c-koden.
</attr>

<attr>OutData1
Datautgång. Utgången refereras ODa1 i c-koden, och kan tilldelas 
värdet av en dataingång.
</attr>
<attr>OutData2
Datautgång. Utgången refereras ODa2 i c-koden, och kan tilldelas 
värdet av en dataingång.
</attr>
<attr>OutData3
Datautgång. Utgången refereras ODa3 i c-koden, och kan tilldelas 
värdet av en dataingång.
</attr>
<attr>OutData4
Datautgång. Utgången refereras ODa4 i c-koden, och kan tilldelas 
värdet av en dataingång.
</attr>

<attr>OutA1
Analog utgång. Refereras OA1 i koden.
</attr>
<attr>OutA2
Analog utgång. Refereras OA2 i koden.
</attr>
<attr>OutA3
Analog utgång. Refereras OA3 i koden.
</attr>
<attr>OutA4
Analog utgång. Refereras OA4 i koden.
</attr>
<attr>OutA5
Analog utgång. Refereras OA5 i koden.
</attr>
<attr>OutA6
Analog utgång. Refereras OA6 i koden.
</attr>

<attr>OutD1
Digital utgång. Refereras od1 i koden.
</attr>
<attr>OutD2
Digital utgång. Refereras od2 i koden.
</attr>
<attr>OutD3
Digital utgång. Refereras od3 i koden.
</attr>
<attr>OutD4
Digital utgång. Refereras od4 i koden.
</attr>
<attr>OutD5
Digital utgång. Refereras od5 i koden.
</attr>
<attr>OutD6
Digital utgång. Refereras od6 i koden.
</attr>

<attr>Code
C-kod.
</attr>

</class>

#
# Class DataCollect
#
<class> DataCollect
@Summary Samlar ihop dataobjekt
Samlar ihop ett antal dataobjekt (max 24 st), och placerar pekare till objekten i 
en array. Detta gör det möjligt att komma åt dataobjekten i en DataArithm.
@image orm_datacollect_fo.gif

Normalt kan endast 4 dataobjekt hanteras i en DataArithm, men genom att 
utnyttja DataCollect kan upp till 96 st hanteras. Dessutom är det ofta bekvämt 
att ha dataobjekten ordnade i en array för att kunna använda loopar i c-koden.

I MaxIndex ska antalet dataingångar som används i DataCollect objektet anges. 
Samtliga dataingångar mellan 1 och MaxIndex måste vara kopplade.

@h1 Exempel
Här följer ett exempel på koden i en DataArithm som har DataCollect objektet 
kopplat till Da1 ingången. Ett antal objekt av klassen Mtrl är kopplade till 
DataCollect objektet.

classdef Da1 DataCollect
int i;

OA1 = 0;
for ( i = 0; i < Da1->MaxIndex; i++)
  if ( ((pwr_sClass_Mtrl *)(Da1->DataP[i]))->Length > 10.0)
    OA1++;

<attr>MaxIndex
Antal kopplade ingångar. Måste datasättas i attributeeditorn (eller i runtiime).
</attr>

<attr>Da1
Da1 - Da24 är dataingångar som kopplas till GetData, NMpsCell objekt el dyl.
</attr>

<attr>DataP
Array med 24 element som innehåller pekare till de objekt som är kopplade till 
DataCollekt objektet.
</attr>

<attr>DataOut
Datautgång som kan kopplas till ett DataArithm objekt (eller annan 
dataingång).
</attr>

</class>

#
# Class DpCollect
#
<class> DpCollect
@Summary Samlar ihop digitala attribut
Samlar i hop ett antal attribut av typen Boolean (max 24 st), och placerar 
värdet i en vektor. Detta gör det möjligt att komma åt värdet i en DataArithm. 
@image orm_dpcollect_fo.gif
Normalt kan endast 6 digital attribut hanteras i en DataArithm, men genom att 
utnyttja DpCollect kan upp till 96 st hanteras. 

Dessutom är det ofta bekvämt att ha värdena ordnade i en vektor för att kunna 
använda loopar i c-koden.

I MaxIndex ska antalet ingångar som används i DpCollect objektet anges. 
Ingångarna behöver ej vara kopplade utan kan datasättas i attributeditorn eller i 
runtime.

@h2 Exempel
Här följer ett exempel på koden i en DataArithm som har DpCollect objektet 
kopplat till Da1 ingången.

classdef Da1 DpCollect;
int i;

OA1 = 0;
for ( i = 0; i < Da1->MaxIndex; i++)
  if ( Da1->Dp[i])
    OA1++;

<attr>MaxIndex
Antal kopplade ingångar. Måste datasättas i attributeditorn (eller i runtime).
</attr>

<attr>Dp1
Dp1 - Dp24 är ingångar av typen Boolean.
</attr>

<attr>Dp
Array med 24 element som innehåller värdet av kopplade attribut.
</attr>

<attr>DataOut
Datautgång som kan kopplas till ett DataArithm objekt (eller annan 
dataingång).
</attr>

</class>

#
# Class DpDistribute
#
<class> DpDistribute
@Summary Distribuerar en vektor med boolean
Distribuerar en vektor med boolean till ett antal attribut av typen Boolean (max 
24 st). 
@image orm_dpdistribute_fo.gif
Vektorn deklareras i en DataArithm, och adressen till vektorn läggs ut 
på en datautgång, till vilken dataingången på DpDistribute-objektet kopplas. 
Elementen i vektorn läggs ut på dp-utgångarna i DpDistribute-objektet. 
Normalt kan endast 6 digital attribut hanteras i en DataArithm, men genom att 
utnyttja DpDistribute kan upp till 96 st hanteras.

I MaxIndex ska antalet utgångar som används i DpDistribute objektet anges.

Vektorn ska vara en static deklarerad array av pwr_tBoolean med antal element 
större eller lika med MaxIndex. I fösta hand ska typen nmps_sDpDistr 
användas, en array av pwr_tBoolean med 24 element som finns deklarerad i 
ssab_inc:rs_plc_macro_nmps.h.

@h2 Exempel
Här följer ett exempel på koden i en DataArithm som har
DpDistribute objektet kopplat till ODa1 utgången.

static nmps_sDpDistr vect;
int i;

ODa1 = vect;
for ( i = 0; i < 24; i++)
{
  if (d1)
    vect[i] = 1;
  else
    vect[i] = 0;
}

<attr>MaxIndex
Antal använda utgångar. Måste datasättas i attributeditorn (eller i runtiime).
</attr>

<attr>Dp1
Dp1 - Dp24 är utgångar av typen Boolean.
</attr>

<attr>DataIn
Dataingång som kopplas till en datautgång på ett DataArithm objekt. I koden i 
dataartithm-objektet måste datautgången tilldelas adressen till en vektor.
</attr>

</class>

#
# Class ApCollect
#
<class> ApCollect
@Summary Samlar ihop analoga attribut
Samlar ihop ett antal analoga attribut (max 24 st), och placerar värdet i en 
vektor. 
@image orm_apcollect_fo.gif
Detta gör det möjligt att komma åt värdet i en DataArithm. Normalt 
kan endast 6 analoga attribut hanteras i en DataArithm, men genom att utnyttja 
DpCollect kan upp till 96 st hanteras. 

Dessutom är det ofta bekvämt att ha värdena ordnade i en vektor för att kunna 
använda loopar i c-koden.

I MaxIndex ska antalet ingångar som används i ApCollect objektet anges. 
Ingångarna behöver ej vara kopplade utan kan datasättas i attributeditorn eller i 
runtime.

@h2 Exempel
Här följer ett exempel på koden i en DataArithm som har ApCollect objektet 
kopplat till Da1 ingången.

classdef Da1 ApCollect
int i;

OA1 = 0;
for ( i = 0; i < Da1->MaxIndex; i++)
  if ( Da1->Ap[i] > 10.0)
    OA1++;

<attr>MaxIndex
Antal kopplade ingångar. Måste datasättas i attributeeditorn (eller i runtiime).
</attr>

<attr>Ap1
Ap1 - Ap24 är analoga ingångar
</attr>

<attr>Ap
Array med 24 element som innehåller värdet av kopplade attribut.
</attr>

<attr>DataOut
Datautgång som kan kopplas till ett DataArithm objekt (eller annan 
dataingång).
</attr>
</class>

#
# Class ApDistribute
#
<class> ApDistribute
@Summary Distribuerar en vektor med float
Distribuerar en vektor med float till ett antal attribut av typen Float (max 24 st). 
@image orm_apdistribute_fo.gif
Vektorn deklareras i en DataArithm, och adressen till vekorn läggs ut på en 
datautgång, till vilken dataingången på ApDistribute-objektet kopplas. 
Elementen i vektorn läggs ut på Ap-utgångarna i ApDistribute-objektet. 
Normalt kan endast 6 float-attribut hanteras i en DataArithm, men genom att 
utnyttja ApDistribute kan upp till 96 st hanteras.

I MaxIndex ska antalet utgångar som används i ApDistribute objektet anges.

Vektorn ska vara en static deklarerad array av pwr_tFloat32 med antal element 
större eller lika med MaxIndex. I fösta hand ska typen nmps_sApDistr 
användas, en array av pwr_tFloat32 med 24 element som finns deklarerad i 
$pwr_inc/rt_plc_data.h.


@h2 Exempel

Här följer ett exempel på koden i en DataArithm som har ApDistribute objektet 
kopplat till ODa1 utgången.

static nmps_sApDistr vect;
int i;

ODa1 = vect;
for ( i = 0; i < 24; i++)
    vect[i] = 0.1 * i;

<attr>MaxIndex
Antal använda utgångar. Måste datasättas i attributeditorn (eller i runtime).
</attr>

<attr>Ap1
Ap1 - Ap24 är utgångar av typen float.
</attr>

<attr>DataIn
Dataingång som kopplas till en datautgång på ett DataArithm objekt. I koden i 
dataartithm-objektet måste datautgången tilldelas adressen till en vektor.
</attr>

</class>

#
# Class Sin
#
<class> Sin
@Summary Sinus funktion
Sin beräknar sinus av ingången, där ingångsvärdet ges i radianer.
@image orm_sin_fo.gif
Utgången ActVal beräknas enligt

ActVal = FactorVal * sin( FactorIn * In)


<attr> In
Analog ingång i radianer.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av sinus värdet. Om
ingångsvärdet är i grader, ska FactorIn vara 180 / PI.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade sinus värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * sin( FactorIn * In))
</attr>
</class>

#
# Class Cos
#
<class> Cos
@Summary Cosinus funktion
Sin beräknar cosinus av ingången, där ingångsvärdet ges i radianer.
@image orm_cos_fo.png
Utgången ActVal beräknas enligt

ActVal = FactorVal * cos( FactorIn * In)


<attr> In
Analog ingång i radianer.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av cosinus värdet. Om
ingånsvärdet är i grader, ska FactorIn vara 180 / PI.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade cosinus värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * cos( FactorIn * In))
</attr>
</class>

#
# Class Tan
#
<class> Tan
@Summary Tangens funktion
Tan beräknar tangens av ingången, där ingångsvärdet ges i radianer.
@image orm_tan_fo.gif
Utgången ActVal beräknas enligt

ActVal = FactorVal * tan( FactorIn * In)


<attr> In
Analog ingång i radianer.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av tangens värdet. Om
ingånsvärdet är i grader, ska FactorIn vara 180 / PI.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade tangens värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * tan( FactorIn * In))
</attr>
</class>

#
# Class ASin
#
<class> ASin
@Summary Arcsinus funktion
Sin beräknar arcsinus av ingången.
@image orm_asin_fo.gif
Ingångsvärdet ska vara i området -1 / FactorIn till 1 / FactorIn, annars
är resultatet odefinierat.
Resultatet ar i radianer mellan -PI / 2 * FactorVal och PI / 2 * FactorVal.

Utgången ActVal beräknas enligt

ActVal = FactorVal * asin( FactorIn * In)

<attr> In
Analog ingång. Ska vara i området -1 / FactorIn och 1 / FactorIn.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av arcsinus värdet.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade arcsinus värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * asin( FactorIn * In))
</attr>
</class>

#
# Class ACos
#
<class> ACos
@Summary Arccosinus funktion
Sin beräknar arccosinus av ingången, där ingångsvärdet.
@image orm_acos_fo.png
Ingångsvärdet ska vara i området -1 / FactorIn till 1 / FactorIn, annars
är resultatet odefinierat.
Resultatet ar i radianer mellan -PI / 2 * FactorVal och PI / 2 * FactorVal.

Utgången ActVal beräknas enligt

ActVal = FactorVal * acos( FactorIn * In)
<attr> In
Analog ingång. Ska vara i området -1 / FactorIn och 1 / FactorIn.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av arccosinus värdet.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade arccosinus värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * acos( FactorIn * In))
</attr>
</class>

#
# Class ATan
#
<class> ATan
@Summary Arctangens funktion
Tan beräknar arctangens av ingången, där ingångsvärdet ges i radianer.
@image orm_atan_fo.gif
Utgången ActVal beräknas enligt

ActVal = FactorVal * atan( FactorIn * In)


<attr> In
Analog ingång.
</attr>
<attr>FactorIn
Faktor som multipliceras med In före beräkningen av arctangens värdet.
</attr>
<attr>FactorVal
Faktor som multipliceras med det beräknade arctangens värdet.
</attr>
<attr>ActVal
Beräknat värde (FactorVal * atan( FactorIn * In))
</attr>
</class>

#
# Class Mod
#
<class> Mod
@Summary Rest vid division.
Mod returnerar resten vid division av In1 med In2.
@image orm_mod_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr>In2 
Analog ingång 2.
</attr>
<attr>ActVal
Resten vid division av In1 med In2.
</attr>
</class>

#
# Class Abs
#
<class> Abs
@Summary Absolutvärde av analog storhet.
Abs returnerar absolutvärdet av ett analogt värde.
@image orm_abs_fo.gif
<attr> In
Analog ingång.
</attr>
<attr>ActVal
Absolutvärdet av ingången.
</attr>
</class>

#
# Class Even
#
<class> Even
@Summary Kontollerar om ett heltal eller en status är jämn.
Even returnerar sant om ingångsvärdet är jämnt.
@image orm_even_fo.gif
<attr> In
Heltals eller status ingång.
</attr>
<attr>Status
Sann om ingångsvärdet är jämnt.
</attr>
</class>

#
# Class Odd
#
<class> Odd
@Summary Kontollerar om ett heltal eller en status är udda.
Odd returnerar sant om ingångsvärdet är udda.
@image orm_odd_fo.gif
<attr> In
Heltals eller status ingång.
</attr>
<attr>Status
Sann om ingångsvärdet är udda.
</attr>
</class>

#
# Class IAbs
#
<class> IAbs
@Summary Absolutvärde av heltals storhet.
IAbs returnerar absolutvärdet av ett heltals-värde.
@image orm_iabs_fo.gif
<attr> In
Heltals ingång.
</attr>
<attr>ActVal
Absolutvärdet av ingången.
</attr>
</class>

#
# Class Equal
#
<class> Equal
@Summary Kontollerar om två analoga värden är lika.
Equal jämför två analoga värden och returnerar sant om de är lika.
@image orm_equal_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om ingångs-värdena är lika.
</attr>
</class>

#
# Class NotEqual
#
<class> NotEqual
@Summary Kontollerar om två analoga värden är olika.
Equal jämför två analoga värden och returnerar sant om de är olika.
@image orm_notequal_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om ingångs-värdena är olika.
</attr>
</class>

#
# Class GreaterEqual
#
<class> GreaterEqual
@Summary Kontollerar om ett analogt är större än eller lika med ett annat.
GreaterEqual jämför två analoga värden och returnerar sant det första är större än
eller lika med det andra.
@image orm_greaterequal_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om In1 är större än eller lika med In2.
</attr>
</class>

#
# Class GreaterThan
#
<class> GreaterThan
@Summary Kontollerar om ett analogt är större än ett annat.
GreaterThan jämför två analoga värden och returnerar sant det första är större än
det andra.
@image orm_greaterthan_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om In1 är större än In2.
</attr>
</class>
#
# Class LessEqual
#
<class> LessEqual
@Summary Kontollerar om ett analogt är mindre än eller lika med ett annat.
LessEqual jämför två analoga värden och returnerar sant det första är mindre än
eller lika med det andra.
@image orm_lessequal_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om In1 är mindre än eller lika med In2.
</attr>
</class>

#
# Class LessThan
#
<class> LessThan
@Summary Kontollerar om ett analogt är mindre än ett annat.
LessThan jämför två analoga värden och returnerar sant det första är mindre än
det andra.
@image orm_lessthan_fo.gif
<attr> In1
Analog ingång 1.
</attr>
<attr> In2
Analog ingång 2.
</attr>
<attr>Status
Sann om In1 är mindre än In2.
</attr>
</class>

#
# Class IEqual
#
<class> IEqual
@Summary Kontollerar om två heltal är lika.
IEqual jämför två heltals-värden och returnerar sant om de är lika.
@image orm_iequal_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om ingångs-värdena är lika.
</attr>
</class>

#
# Class INotEqual
#
<class> INotEqual
@Summary Kontollerar om två heltal är olika.
INotEqual jämför två heltals-värden och returnerar sant om de är olika.
@image orm_inotequal_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om ingångs-värdena är olika.
</attr>
</class>

#
# Class IGreaterEqual
#
<class> IGreaterEqual
@Summary Kontollerar om ett heltal är större än eller lika med ett annat.
IGreaterEqual jämför två heltals-värden och returnerar sant det första är större än
eller lika med det andra.
@image orm_igreaterequal_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om In1 är större än eller lika med In2.
</attr>
</class>

#
# Class IGreaterThan
#
<class> IGreaterThan
@Summary Kontollerar om ett heltal är större än ett annat.
IGreaterThan jämför två heltals-värden och returnerar sant det första är större än
det andra.
@image orm_igreaterthan_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om In1 är större än In2.
</attr>
</class>
#
# Class ILessEqual
#
<class> ILessEqual
@Summary Kontollerar om ett heltal är mindre än eller lika med ett annat.
ILessEqual jämför två heltals-värden och returnerar sant det första är mindre än
eller lika med det andra.
@image orm_ilessequal_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om In1 är mindre än eller lika med In2.
</attr>
</class>

#
# Class ILessThan
#
<class> ILessThan
@Summary Kontollerar om ett heltal är mindre än ett annat.
ILessThan jämför två heltals-värden och returnerar sant det första är mindre än
det andra.
@image orm_ilessthan_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Sann om In1 är mindre än In2.
</attr>
</class>

#
# Class BwAnd
#
<class> BwAnd
@Summary Bitvis and.
Bitvis and.
@image orm_bwand_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Bitvis and av In1 och In2.
</attr>
</class>

#
# Class BwOr
#
<class> BwOr
@Summary Bitvis or.
Bitvis or.
@image orm_bwor_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr>Status
Bitvis or av In1 och In2.
</attr>
</class>

#
# Class Exp
#
<class> Exp
@Summary Exponential funktion.
Exponential funktion.
@image orm_exp_fo.gif
<attr> In
Analog ingång.
</attr>
<attr> FactorIn
Faktor som multipliceras med ingången före exponential-beräkningen.
</attr>
<attr> FactorVal
Faktor som multipliceras med det beräknade exponential-värdet.
</attr>
<attr>ActVal
Resultat.
</attr>
</class>

#
# Class Ln
#
<class> Ln
@Summary Naturlig logaritm.
Ln beräknar den naturliga logaritmen.
@image orm_ln_fo.gif
<attr> In
Analog ingång.
</attr>
<attr> FactorIn
Faktor som multipliceras med ingången före logaritm-beräkningen.
</attr>
<attr> FactorVal
Faktor som multipliceras med det beräknade logaritm-värdet.
</attr>
<attr>ActVal
Resultat.
</attr>
</class>

#
# Class Log
#
<class> Log
@Summary Logaritm med 10 som bas.
Log beräknar 10-logaritmen av ingångsvärdet.
@image orm_log_fo.gif
<attr> In
Analog ingång.
</attr>
<attr> FactorIn
Faktor som multipliceras med ingången före logaritm-beräkningen.
</attr>
<attr> FactorVal
Faktor som multipliceras med det beräknade logaritm-värdet.
</attr>
<attr>ActVal
Resultat.
</attr>
</class>

#
# Class Sqrt
#
<class> Sqrt
@Summary Kvadratrots funktion.
Sqrt beräknar kvatdratroten av ingångsvärdet.
För ingångsvärdet gäller att In * FactorIn ska inte vara negativt.
@image orm_sqrt_fo.gif
<attr> In
Analog ingång.
</attr>
<attr> FactorIn
Faktor som multipliceras med ingången före kvadratsrots utdragningen.
</attr>
<attr> FactorVal
Faktor som multipliceras med den beräknade kvadratroten.
</attr>
<attr>ActVal
Resultat.
</attr>
</class>

#
# Class IAdd
#
<class> IAdd
@Summary Heltals addition.
Heltals addition.
Addition av upp till 8 värden.
@image orm_iadd_fo.gif
<attr> In1
Heltals ingång 1.
</attr>
<attr> In2
Heltals ingång 2.
</attr>
<attr> In3
Heltals ingång 3.
</attr>
<attr> In4
Heltals ingång 4.
</attr>
<attr> In5
Heltals ingång 5.
</attr>
<attr> In6
Heltals ingång 6.
</attr>
<attr> In7
Heltals ingång 7.
</attr>
<attr> In8
Heltals ingång 8.
</attr>
<attr>ActVal
Resultatet av additionen.
</attr>
</class>

<typedef> AiFilterTypeEnum
Uppräkningstyp för filtertyper i Ai objekt.

<value>No
Ingen filtrering.
</value>

<value>Exponential
Exponentiellt filter.

Filtreringen är gjord på ingenjörsvärdet, ActualValue, före lagring i rtdb, enligt

ActualValue(t) = ActualValue(t-1) + a * (InValue - ActualValue(t-1)) 

där
- ActualValue(t-1) är ingenjörsvärdet lagrat i föregående mätning
- nValue(t) nuvarande ingenjörsvärde före filtrering.
- a = ScanInterval * ScanTime / FilterAttribute[0] 
      och 0 < a < 1.0 

Om a >= 0 utförs ingen filtrering. Mindre a ger hårdare filtrering.

Produkten ScanInterval * ScanTime specificerar uppdaterings perioden
för signalen.
</value>
</typedef>

<typedef> AiSensorTypeEnum
Uppräkningstyp för konvertering av givarvärden för Ai.

<value>SignalValue
Ingen konvertering. ActualValue är lika med SignalValue.
</value>
<value>Linear
Linjär konvertering.
</value>
<value>Parabolic
Konvertering med polynom av andra graden.
</value>
<value>SquareRoot
Konvertering med rotutdragning.
</value>
<value>SignedSquareRoot
Konvertering med rotutdragning med bibehållet tecken.
</value>
</typedef>

<typedef> ByteOrderingEnum
Uppräkningstyp för byte ordning.

<value>LittleEndian
Byte ordning Little Endian.
</value>
<value>BigEndian
Byte ordning Big Endian.
</value>
</typedef>

<typedef> ClientServerEnum
Uppräkningstyp för Client/Server.
</typedef>

<typedef> DataBitsEnum
Uppräkningstyp för databitar.
</typedef>

<typedef> DiFilterTypeEnum
Uppräkningstyp för filtertyper i Di objekt.

<value>No
Ingen filtrering.
</value>
<value>SetAndResetDelay
Till- och frånslags-fördröjning.
</value>

<typedef> DistrComponentMask
Bitmasktyp för distributions-komponenter.

<value>UserDatabase
Proview's användardatabas $pwra_db/pwr_user.dat ingår i distributionen.
Databasen hämtas från
  1. $pwrp_src/'nodnamn'/pwr_user.dat
  2. $pwra_db/pwr_user.dat
</value>

<value>LoadFiles
Laddatafiler ingår i distributionen, dvs
  - laddatafiler för volymer konfigurerade med RootVolumeLoad, SubVolumeLoad
    och ClassVolumeLoad objekt, och volymer som refereras av dessa volymer.
  - plc filen.
  - rtt korsreferens filer.
</value>

<value>ApplFile
Startupfilen $pwrp_load/ld_appl_'nodenamn'_'busnummer'.dat ingår i
distributionen.
</value>

<value>PwrpAliasFile
$pwrp_load/pwrp_alias.dat ingår i distributionen.
</value>

<value>GraphFiles
Samtliga Ge graf filer $pwrp_pop/*.pwg ingår i distributionen.
</value>

<value>XttHelpFile
Xtt-hjälpfilen ingår i distributionen. Källfilen hämtas från
  1. $pwrp_src/'nodename'/xtt_help.dat
  2. $pwrp_exe/xtt_help.dat
</value>

<value>XttResourceFile
Xtt's resourcefile med definitioner av funktions-tangenter ingår i
distributionen. Källfilen hämtas från
  1. $pwrp_src/'nodnamn'/Rt_xtt
  2. $pwrp_pop/Rt_xtt
och distribueras till /home/b55
</value>

<value>XttSetupFile
Xtt's setup-fil med meny-konfiguration och symbol-definitioner ingår i
distributionen. Källfilen hämtas från
  1. $pwrp_src/'nodnamn'/xtt_setup.rtt_com
  2. $pwrp_pop/xtt_setup.rtt_com
och distribueras till /home/b55
</value>

<value>FlowFiles
PlcTrace-filerna $pwrp_load/*.flw ingår i distributionen.
</value>

<value>RHostFile
.rhosts filen använd av rsh ingår i distributionen. Källfilen hämtas från
  1. $pwrp_src/'nodnamn'/.rhosts
  2. $pwra_db/.rhosts
</value>

<value>WebFiles
Alla web-filer på $pwrp_web ingår i distributionen.
</value>

<value>PwrpStop
Script-filen pwrp_stop.sh ingår i distributionen.
</value>
</typedef>

<typedef> DocumentOrientEnum
Uppräkningstyp för liggande eller stående dokument.

<value>Portrait
Stående.
</value>
<value>Landscape
Liggande
</value>
</typedef>

<typedef> DocumentSizeEnum
Uppräkningstyp för dokument storlek.

<value>A0
Storlek A0
</value>
<value>A1
Storlek A1
</value>
<value>A2
Storlek A2
</value>
<value>A3
Storlek A3
</value>
<value>A4
Storlek A4
</value>
<value>A5
Storlek A5
</value>
</typedef>

<typedef> EventFlagsMask
Definierar EventFlags masken för meddelanden.

<value>Return
Om denna flagga finns ska ett returmeddelande med ReturnText
skickas till utenheternas händelselistor, annars inte.
</value>
<value>Ack
Om denna flagga finns ska ett kvittensmeddelande skickas till
utenheternas händelselistor, annars inte.
</value>
<value>Bell
Om den enskilda utenheten har akustisk signal (pip-funktion)
ska den aktiveras då meddelandet tas emot.
</value>
<value>Force
Meddelandet ska tas emot av varje utenhet oberoende av vad det
står i urvalslistorna.
</value>
<value>InfoWindow
Om meddelandet är av typen INFO placeras det förutom i
händelselistan också i larmfönstrets info-del. Kvittens- resp
returmeddelande som för t ex. A-larm.
</value>
<value>Returned
Odokumenterad...
</value>
<value>NoObject
Odokumenterad...
</value>
</typedef>

<typedef> EventPrioEnum
Uppräkningstyp för händelse prioritet.

<value>A
Prioritet A, högst prioritet.
</value>
<value>B
Prioritet B.
</value>
<value>C
Prioritet C.
</value>
<value>D
Prioritet D, lägst prioritet.
</value>
</typedef>

<typedef> EventTypeEnum
Uppräkningstyp för händelse typ.

<value>Info
Typ Info.
Om meddelandet kräver kvittering skickas det till larmfönstrets 
informationsdel och händelselistan annars enbart till händelselistan. 
</value>
<value>Alarm
Typ Alarm. 
Meddelandet kräver kvittering och skickas till larmfönstret, larmlistan 
och händelselistan.
</value>
</typedef>

<typedef> FrameAttrEnum
Uppräkningstyp för ramars egenskaper i text-objekt i plceditorn.

@b Se även

<value>GrayFrame
Grå ram.
</value>
<value>Black
Svart ram.
</value>
<value>No
Ingen ram.
</value>
</typedef>

<typedef>ParityEnum
Uppräkningstype för paritet (No/Odd/Even).

<value>None
Ingen paritet.
</value>
<value>Odd
Udda paritet.
</value>
<value>Even
Jämn paritet.
</value>
</typedef>

<typedef> PidAlgEnum
Uppräkningstyp för PID algoritm.

<value>I
I-regulator. Regulator med endast I-verkan.
Gain används inte.
</value>
<value>I_P
I + P.
Integrerande regulator med proportionell regler-
verkan. P-termen baseras på ärvärdet ProcVal.
</value>
<value>P
P-regulator. Ger endast proportionell reglerverkan.
</value>
<value>PI
PI-regulator. Regulator som ger proportionell och integrerande reglerverkan.
P-termen baseras på reglerfelet ControlDiff.
</value>
<value>I_PD
I + PD.
Integrerande regulator med proportionell deriverande reglerverkan.
Både P- och D-termen baseras på ärvärdet ProcVal.
</value>
<value>P_D
P + D.
 Proportionell regulator med deriverande reglerverkan.
P baseras på reglerfelet, D på ärvärdet.
</value>
<value>PI_D
PI + D.
 Proportionell integrerande regulator med deriverande reglerverkan. 
P-termen baseras på reglerfelet ControlDiff,
D på ärvärdet value.
</value>
<value>PD
PD-regulator. Regulator som ger proportionell och deriverande reglerverkan.
Både P- och D-termen baseras på reglerfelet.
</value>
<value>PID
PID-regulator. Regulator som ger proportionell integrerande och 
deriverande reglerverkan. Både P- och D-termen baseras på reglerfelet.
</value>
</typedef>

<typedef> PidModeEnum
Uppräkningstyp för Hand/Auto/Kaskad mod i en PID.

<value>Manual
Hand mod.
</value>
<value>Auto
Auto mod.
</value>
<value>ManAuto
Hand och auto mod.
</value>
<value>Cascade
Kaskad.
</value>
<value>CascMan
Kaskad och hand.
</value>
<value>CascAutoMan
Kaskad, hand och auto.
</value>
</typedef>

<typedef> PidModeMask
Bitmasktyp för Hand/Auto/Kaskad mod i en PID.

<value>Manual
Hand mod.
</value>
<value>Auto
Auto mod.
</value>
<value>Cascade
Kaskad mod.
</value>
</typedef>

<typedef> SsabCoDivCountEnum
Uppräkningsvärde för DivCount i ssab Co objekt.
<value>No
Ingen division.
</value>
<value>16
16 ggr.
</value>
</typedef>

<typedef> SsabCoMulCountEnum
Uppräkningsvärde för MulCount i ssab Co objekt.
<value>2
2 ggr.
</value>
<value>4
4 ggr.
</value>
</typedef>

<typedef> SsabCoNoOfBitsEnum
Uppräkningsvärde för antal bitar i ssab Co objekt.
<value>16
16 bitar.
</value>
<value>24
24 bitar.
</value>
</typedef>

<typedef> StopBitsEnum
Uppräkningsvärde för antal stoppbitar.
<value>0
0 stoppbitar.
</value>
<value>1
1 stoppbit.
</value>
<value>2
2 stoppbitar.
</value>
</typedef>

<typedef>SupDelayActionEnum
Uppräkningstyp för åtgärd (DelayAction) i övervakningsobjekt.
<value>No
Ingen åtgärd.
</value>
<value>Message
Sänd larm-meddelande.
</value>
<value>EmergencyBreak
Nödbroms. Stoppa I/O-hanteringen.
</value>
</typedef>

<typedef>TextAttrEnum
Uppräkningstyp för text-storlek i text objekt.

@b Se även
<value>SmallBold
Liten fet text.
</value>
<value>Small
Liten text.
</value>
<value>Medium
Medelstor text.
</value>
<value>Large
Stor text.
</value>
</typedef>

<typedef> WebTargetEnum
Mål-ram för websidor.

@b Se även
<value>RightFrame
Högra ramen är mål för den efterfrågade webadressen.
</value>
<value>ParentWindow
Föräldrafönstret är mål för den efterfrågade webadressen.
</value>
<value>SeparateWindow
Öppna den efterfrågade URL'en i ett separat fönster.
</value>
</typedef>

