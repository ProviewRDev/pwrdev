/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2025 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* DataQ functions */


#ifndef dataq_h
#define dataq_h

#include "pwr_dataqclasses.h"

void DataQFo_init(pwr_sClass_DataQFo* o);
void DataQFo_exec(plc_sThread* tp, pwr_sClass_DataQFo* o);
void RemoteDataQFo_init(pwr_sClass_RemoteDataQFo* o);
void RemoteDataQFo_exec(plc_sThread* tp, pwr_sClass_RemoteDataQFo* o);
void QDisplayFo_init(pwr_sClass_QDisplayFo* o);
void QDisplayFo_exec(plc_sThread* tp, pwr_sClass_QDisplayFo* o);
void QDisplayLinkFo_init(pwr_sClass_QDisplayLinkFo* o);
void QDisplayLinkFo_exec(plc_sThread* tp, pwr_sClass_QDisplayLinkFo* o);
void QDisplayFixFo_init(pwr_sClass_QDisplayFixFo* o);
void QDisplayFixFo_exec(plc_sThread* tp, pwr_sClass_QDisplayFixFo* o);
void QTrp_exec(plc_sThread* tp, pwr_sClass_QTrp* o);
void QTrpRR_exec(plc_sThread* tp, pwr_sClass_QTrpRR* o);
void QTrpFF_exec(plc_sThread* tp, pwr_sClass_QTrpFF* o);
void QOrder_init(pwr_sClass_QOrder* o);
void QOrder_exec(plc_sThread* tp, pwr_sClass_QOrder* o);
void QOrder_exec2(plc_sThread* tp, pwr_sClass_QOrder* o, pwr_tBoolean Status);
void QRemoteOrder_init(pwr_sClass_QRemoteOrder* o);
void QRemoteOrder_exec(plc_sThread* tp, pwr_sClass_QRemoteOrder* o);
void QRemoteOrder_exec2(plc_sThread* tp, pwr_sClass_QRemoteOrder* o, pwr_tBoolean Status);
void QTargetOrder_exec(plc_sThread* tp, pwr_sClass_QTargetOrder* o);
void QCreateData_exec(plc_sThread* tp, pwr_sClass_QCreateData* o);


#endif

