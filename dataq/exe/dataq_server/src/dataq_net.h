/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2022 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef dataq_net_h
#define dataq_net_h

#include "pwr.h"
#include "rt_net.h"

#ifdef __cplusplus
extern "C" {
#endif

#define dataq_cProcServer 125

#define dataq_cMsgClass 203
#define dataq_cNetVersion 1

typedef enum {
  dataq_eMsgType_NodeUp,
  dataq_eMsgType_NodeUpR,
  dataq_eMsgType_RDataQInit,
  dataq_eMsgType_RDataQFeedback,
  dataq_eMsgType_RDataQ,
  dataq_eMsgType_ROrder,
  dataq_eMsgType_ROrderInit,
  dataq_eMsgType_ROrderFeedback,
  dataq_eMsgType_ROrderStatusReset,
  dataq_eMsgType_CreateData
} dataq_eMsgType;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
} dataq_sMsgAny;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;  
} dataq_sMsgCreateData;

typedef struct {
  pwr_tTid TypeId;
  pwr_tBoolean Feedback;
  pwr_tUInt32 TargetOffset;
  pwr_tUInt32 SourceOffset;
  pwr_tUInt32 Size;
} dataq_sMsgDataAttr;

typedef struct {
  pwr_tAttrRef Aref;
  pwr_tMask Options;
  pwr_tUInt32 Start;
  pwr_tUInt32 End;
} dataq_sMsgRDataQ_RemoteQ;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tOid ROrder;
  pwr_tCid DataClass;
  pwr_tOid Target;
  pwr_tMask Options;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgROrderInit;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tOid ROrder;
  pwr_tOName DataName;
  pwr_tCid DataClass;
  pwr_tOid DataSource;
  pwr_tOid Target;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgROrder;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tAttrRef RDataQ;
  pwr_tOName SourceDataName;
  pwr_tOName DataName;
  pwr_tCid DataClass;
  pwr_tOid DataSource;
  pwr_tMask Options;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 RemoteQNum;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgRDataQInit;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tAttrRef RDataQ;
  pwr_tOName DataName;
  pwr_tCid DataClass;
  pwr_tOid DataSource;
  pwr_tAttrRef Target;
  pwr_tMask Options;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgRDataQ;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tOid ROrder;
  pwr_tOid DataObject;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgROrderFeedback;

typedef struct {
  pwr_tUInt32 Type;
  pwr_tUInt32 Version;
  pwr_tUInt32 FeedbackData;
  pwr_tUInt32 FeedbackTrigger;
  pwr_tAttrRef RDataQ;
  pwr_tOName DataName;
  pwr_tUInt32 TableVersion;
  pwr_tUInt32 AttrNum;
  int Data[1];
} dataq_sMsgRDataQFeedback;


#ifdef __cplusplus
}
#endif

#endif
