/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2024 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef glow_growscriptmodule_h
#define glow_growscriptmodule_h

#include "glow_growrect.h"

/*! \file glow_growscriptmodule.h
    \brief Contains the GrowScriptModule class. */
/*! \addtogroup Glow */
/*@{*/

//! Class for drawing a bar object.
/*! A GrowScriptModule object is an object that drawn as a rectangle that is filled to a
  certain level with one color,
  and the rest is filled with background color.

  The GrowScriptModule class contains function for drawing the object, and handle events
  when the
  object is clicked on, moved etc.
*/

class GrowScriptModule : public GrowRect {
public:
  //! Constuctor
  /*!
    \param glow_ctx 	The glow context.
    \param name		Name (max 31 char).
    \param x		x coordinate for position.
    \param y		y coordinate for position.
    \param w		Width.
    \param h		Height.
    \param border_d_type Border color.
    \param line_w	Linewidth of border.
    \param display_lev	Displaylevel when this object is visible.
    \param fill_rect	Rectangle is filled.
    \param display_border Border is visible.
    \param fill_d_type	Fill color.
    \param nodraw	Don't draw the object now.
  */
  GrowScriptModule(GrowCtx* glow_ctx, const char* name, double x = 0, double y = 0,
      double w = 0, double h = 0,
      glow_eDrawType border_d_type = glow_eDrawType_Line, int line_w = 1,
      glow_mDisplayLevel display_lev = glow_mDisplayLevel_1, int fill_rect = 0,
      int display_border = 1, glow_eDrawType fill_d_type = glow_eDrawType_Line,
      int nodraw = 0);

  //! Destructor
  /*! Remove the object from context, and erase it from the screen.
   */
  ~GrowScriptModule();

  //! Save the content of the object to file.
  /*!
    \param fp	Ouput file.
    \param mode	Not used.
  */
  void save(std::ofstream& fp, glow_eSaveMode mode);

  //! Read the content of the object from file.
  /*!
    \param fp	Input file.
  */
  void open(std::ifstream& fp);

  //! Get the object type
  /*!
    \return The type of the object.
  */
  glow_eObjectType type()
  {
    return glow_eObjectType_GrowScriptModule;
  }

  int export_script(GlowExportScript* es, void* o, void* m);

  int module_index;
  float left_border_width;
  float right_border_width;
  float top_border_width;
  float bottom_border_width;
  int fill_module;
  int vert_left_border;
  int vert_right_border;
  int vert_top_border;
  int vert_bottom_border;
  int vert_prio;
  int vert_left_module;
  int vert_right_module;
  int vert_top_module;
  int vert_bottom_module;
  float vert_width;
  float vert_height;
  int vert_fix_width;
  int vert_fix_height;
  int horiz_left_border;
  int horiz_right_border;
  int horiz_top_border;
  int horiz_bottom_border;
  int horiz_prio;
  int horiz_left_module;
  int horiz_right_module;
  int horiz_top_module;
  int horiz_bottom_module;
  float horiz_width;
  float horiz_height;
  int horiz_fix_width;
  int horiz_fix_height;
  float window_border_width;
  float window_switch_ratio;
};

/*@}*/
#endif
